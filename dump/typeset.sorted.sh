export CLUTTER_IM_MODULE=xim
export COLORTERM=truecolor
export DBUS_SESSION_BUS_ADDRESS='unix:path=/run/user/1000/bus'
export DESKTOP_SESSION=ubuntu
export DISPLAY=:0
export GDMSESSION=ubuntu
export GJS_DEBUG_OUTPUT=stderr
export GJS_DEBUG_TOPICS='JS ERROR;JS LOG'
export GNOME_DESKTOP_SESSION_ID=this-is-deprecated
export GNOME_SHELL_SESSION_MODE=ubuntu
export GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/0f80885b_2e2e_4095_b017_4f13b332494f
export GNOME_TERMINAL_SERVICE=:1.59
export GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1
export GTK_IM_MODULE=ibus
export GTK_MODULES=gail:atk-bridge
export HOME=/home/install
export -i10 SHLVL=1
export IM_CONFIG_PHASE=2
export LANG=en_US.UTF-8
export LC_ADDRESS=de_CH.UTF-8
export LC_IDENTIFICATION=de_CH.UTF-8
export LC_MEASUREMENT=de_CH.UTF-8
export LC_MONETARY=de_CH.UTF-8
export LC_NAME=de_CH.UTF-8
export LC_NUMERIC=de_CH.UTF-8
export LC_PAPER=de_CH.UTF-8
export LC_TELEPHONE=de_CH.UTF-8
export LC_TIME=de_CH.UTF-8
export LESS=-R
export LOGNAME=install
export LSCOLORS=Gxfxcxdxbxegedabagacad
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'
export OLDPWD=/home/install
export PAGER=less
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
export PWD=/home/install/.dotfiles.git/dump
export QT4_IM_MODULE=xim
export QT_ACCESSIBILITY=1
export QT_IM_MODULE=xim
export SESSION_MANAGER=local/vbox-ubuntu1804:@/tmp/.ICE-unix/1285,unix/vbox-ubuntu1804:/tmp/.ICE-unix/1285
export SHELL=/usr/bin/zsh
export SSH_AGENT_PID=1421
export SSH_AUTH_SOCK=/run/user/1000/keyring/ssh
export TERM=xterm-256color
export TEXTDOMAINDIR=/usr/share/locale/
export TEXTDOMAIN=im-config
export USER=install
export VTE_VERSION=5202
export WINDOWPATH=2
export XAUTHORITY=/run/user/1000/gdm/Xauthority
export XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
export XDG_CURRENT_DESKTOP=ubuntu:GNOME
export XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
export XDG_MENU_PREFIX=gnome-
export XDG_RUNTIME_DIR=/run/user/1000
export XDG_SEAT=seat0
export XDG_SESSION_DESKTOP=ubuntu
export XDG_SESSION_ID=2
export XDG_SESSION_TYPE=x11
export XDG_VTNR=2
export XMODIFIERS='@im=ibus'
export ZSH=/home/install/.oh-my-zsh
typeset _='*'
typeset 0=zsh
typeset -A aliases=( history omz_history glgga 'git log --graph --decorate --all' gcsm 'git commit -s -m' gbsb 'git bisect bad' groh 'git reset origin/$(git_current_branch) --hard' gcss 'git commit -S -s' md 'mkdir -p' gupv 'git pull --rebase -v' gupav 'git pull --rebase --autostash -v' gbsg 'git bisect good' gds 'git diff --staged' gbsr 'git bisect reset' gignored 'git ls-files -v | grep "^[[:lower:]]"' gdt 'git diff-tree --no-commit-id --name-only -r' gbss 'git bisect start' gdw 'git diff --word-diff' gpd 'git push --dry-run' gsps 'git show --pretty=short --show-signature' gpf 'git push --force-with-lease' - 'cd -' 'gpf!' 'git push --force' glola 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --all' 1 'cd -1' 2 'cd -2' 3 'cd -3' 4 'cd -4' 5 'cd -5' 6 'cd -6' 7 'cd -7' 8 'cd -8' gpr 'git pull --rebase' 9 'cd -9' gpu 'git push upstream' gpv 'git push -v' 'gcans!' 'git commit -v -a -s --no-edit --amend' grep 'grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}' lsa 'ls -lah' gdup 'git diff @{upstream}' glols 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --stat' grev 'git revert' 'gca!' 'git commit -v -a --amend' gfa 'git fetch --all --prune --jobs=10' gfg 'git ls-files | grep' gpristine 'git reset --hard && git clean -dffx' gfo 'git fetch origin' _ 'sudo ' gmom 'git merge origin/$(git_main_branch)' glod 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\' g git glog 'git log --oneline --decorate --graph' gra 'git remote add' grb 'git rebase' l 'ls -lah' glol 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\' gga 'git gui citool --amend' grh 'git reset' grset 'git remote set-url' grm 'git rm' gwip 'git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"' grrm 'git remote remove' gclean 'git clean -id' grs 'git restore' grt 'cd "$(git rev-parse --show-toplevel || echo .)"' gru 'git reset --' ggpush 'git push origin "$(git_current_branch)"' grv 'git remote -v' 'gcn!' 'git commit -v --no-edit --amend' gamscp 'git am --show-current-patch' gsb 'git status -sb' gsd 'git svn dcommit' gsh 'git show' gsi 'git submodule init' ghh 'git help' gcam 'git commit -a -m' grhh 'git reset --hard' gsr 'git svn rebase' gss 'git status -s' gst 'git status' gcas 'git commit -a -s' gsu 'git submodule update' gsta 'git stash push' grss 'git restore --source' gpsup 'git push --set-upstream origin $(git_current_branch)' grst 'git restore --staged' gsw 'git switch' gstc 'git stash clear' gstd 'git stash drop' glods 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short' gstl 'git stash list' gcasm 'git commit -a -s -m' gstp 'git stash pop' gsts 'git stash show --text' gstu 'gsta --include-untracked' rd rmdir gtl 'gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl' gstall 'git stash --all' ga 'git add' gb 'git branch' gc 'git commit -v' gd 'git diff' gf 'git fetch' gts 'git tag -s' gg 'git gui citool' git-svn-dcommit-push 'git svn dcommit && git push github $(git_main_branch):svntrunk' gdca 'git diff --cached' gstaa 'git stash apply' gtv 'git tag | sort -V' gk '\gitk --all --branches &!' gl 'git pull' gm 'git merge' fgrep 'fgrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}' ggsup 'git branch --set-upstream-to=origin/$(git_current_branch)' gama 'git am --abort' gp 'git push' gamc 'git am --continue' gr 'git remote' glgg 'git log --graph' gdct 'git describe --tags $(git rev-list --tags --max-count=1)' gdcw 'git diff --cached --word-diff' glgm 'git log --graph --max-count=10' gams 'git am --skip' glgp 'git log --stat -p' gup 'git pull --rebase' grup 'git remote update' gbnm 'git branch --no-merged' diff 'diff --color' gunwip 'git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1' gignore 'git update-index --assume-unchanged' ggpur ggu gke '\gitk --all $(git log -g --pretty=%h) &!' gloga 'git log --oneline --decorate --graph --all' gcor 'git checkout --recurse-submodules' gbda 'git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch -d 2>/dev/null' gswc 'git switch -c' gmtl 'git mergetool --no-prompt' gswd 'git switch $(git_develop_branch)' ggpull 'git pull origin "$(git_current_branch)"' gcpa 'git cherry-pick --abort' gcssm 'git commit -S -s -m' gcpc 'git cherry-pick --continue' gswm 'git switch $(git_main_branch)' gwch 'git whatchanged -p --abbrev-commit --pretty=medium' gaa 'git add --all' glg 'git log --stat' 'gc!' 'git commit -v --amend' gbD 'git branch -D' glo 'git log --oneline --decorate' glp _git_log_prettily gam 'git am' gmum 'git merge upstream/$(git_main_branch)' gap 'git apply' gapa 'git add --patch' 'gcan!' 'git commit -v -a --no-edit --amend' gpoat 'git push origin --all && git push origin --tags' gau 'git add --update' gav 'git add --verbose' gcount 'git shortlog -sn' gma 'git merge --abort' glum 'git pull upstream $(git_main_branch)' grmc 'git rm --cached' gba 'git branch -a' grba 'git rebase --abort' gapt 'git apply --3way' gbd 'git branch -d' grbc 'git rebase --continue' which-command whence grbd 'git rebase $(git_develop_branch)' grbi 'git rebase -i' gbl 'git blame -b -w' grbom 'git rebase origin/$(git_main_branch)' grbm 'git rebase $(git_main_branch)' grbo 'git rebase --onto' gbr 'git branch --remote' grmv 'git remote rename' gbs 'git bisect' grbs 'git rebase --skip' gmtlvim 'git mergetool --no-prompt --tool=vimdiff' egrep 'egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}' gca 'git commit -v -a' gcb 'git checkout -b' la 'ls -lAh' gunignore 'git update-index --no-assume-unchanged' gcd 'git checkout $(git_develop_branch)' gcf 'git config --list' gcmsg 'git commit -m' afind 'ack -il' gcl 'git clone --recurse-submodules' globurl 'noglob urlglobber ' gcm 'git checkout $(git_main_branch)' ll 'ls -lh' gco 'git checkout' gcp 'git cherry-pick' gupa 'git pull --rebase --autostash' gcs 'git commit -S' ls 'ls --color=tty' )
typeset -a argv=(  )
typeset -A BG=( 000 $'%{\C-[[48;5;000m%}' 001 $'%{\C-[[48;5;001m%}' 002 $'%{\C-[[48;5;002m%}' 003 $'%{\C-[[48;5;003m%}' 004 $'%{\C-[[48;5;004m%}' 005 $'%{\C-[[48;5;005m%}' 006 $'%{\C-[[48;5;006m%}' 007 $'%{\C-[[48;5;007m%}' 008 $'%{\C-[[48;5;008m%}' 009 $'%{\C-[[48;5;009m%}' 010 $'%{\C-[[48;5;010m%}' 011 $'%{\C-[[48;5;011m%}' 012 $'%{\C-[[48;5;012m%}' 013 $'%{\C-[[48;5;013m%}' 014 $'%{\C-[[48;5;014m%}' 015 $'%{\C-[[48;5;015m%}' 016 $'%{\C-[[48;5;016m%}' 017 $'%{\C-[[48;5;017m%}' 018 $'%{\C-[[48;5;018m%}' 019 $'%{\C-[[48;5;019m%}' 020 $'%{\C-[[48;5;020m%}' 021 $'%{\C-[[48;5;021m%}' 022 $'%{\C-[[48;5;022m%}' 023 $'%{\C-[[48;5;023m%}' 024 $'%{\C-[[48;5;024m%}' 025 $'%{\C-[[48;5;025m%}' 026 $'%{\C-[[48;5;026m%}' 027 $'%{\C-[[48;5;027m%}' 028 $'%{\C-[[48;5;028m%}' 029 $'%{\C-[[48;5;029m%}' 030 $'%{\C-[[48;5;030m%}' 031 $'%{\C-[[48;5;031m%}' 032 $'%{\C-[[48;5;032m%}' 033 $'%{\C-[[48;5;033m%}' 034 $'%{\C-[[48;5;034m%}' 035 $'%{\C-[[48;5;035m%}' 036 $'%{\C-[[48;5;036m%}' 037 $'%{\C-[[48;5;037m%}' 038 $'%{\C-[[48;5;038m%}' 039 $'%{\C-[[48;5;039m%}' 040 $'%{\C-[[48;5;040m%}' 041 $'%{\C-[[48;5;041m%}' 042 $'%{\C-[[48;5;042m%}' 043 $'%{\C-[[48;5;043m%}' 044 $'%{\C-[[48;5;044m%}' 045 $'%{\C-[[48;5;045m%}' 046 $'%{\C-[[48;5;046m%}' 047 $'%{\C-[[48;5;047m%}' 048 $'%{\C-[[48;5;048m%}' 049 $'%{\C-[[48;5;049m%}' 050 $'%{\C-[[48;5;050m%}' 051 $'%{\C-[[48;5;051m%}' 052 $'%{\C-[[48;5;052m%}' 053 $'%{\C-[[48;5;053m%}' 054 $'%{\C-[[48;5;054m%}' 055 $'%{\C-[[48;5;055m%}' 056 $'%{\C-[[48;5;056m%}' 057 $'%{\C-[[48;5;057m%}' 058 $'%{\C-[[48;5;058m%}' 059 $'%{\C-[[48;5;059m%}' 060 $'%{\C-[[48;5;060m%}' 061 $'%{\C-[[48;5;061m%}' 062 $'%{\C-[[48;5;062m%}' 063 $'%{\C-[[48;5;063m%}' 064 $'%{\C-[[48;5;064m%}' 065 $'%{\C-[[48;5;065m%}' 066 $'%{\C-[[48;5;066m%}' 067 $'%{\C-[[48;5;067m%}' 068 $'%{\C-[[48;5;068m%}' 069 $'%{\C-[[48;5;069m%}' 070 $'%{\C-[[48;5;070m%}' 071 $'%{\C-[[48;5;071m%}' 072 $'%{\C-[[48;5;072m%}' 073 $'%{\C-[[48;5;073m%}' 074 $'%{\C-[[48;5;074m%}' 075 $'%{\C-[[48;5;075m%}' 076 $'%{\C-[[48;5;076m%}' 077 $'%{\C-[[48;5;077m%}' 078 $'%{\C-[[48;5;078m%}' 079 $'%{\C-[[48;5;079m%}' 080 $'%{\C-[[48;5;080m%}' 081 $'%{\C-[[48;5;081m%}' 082 $'%{\C-[[48;5;082m%}' 083 $'%{\C-[[48;5;083m%}' 084 $'%{\C-[[48;5;084m%}' 085 $'%{\C-[[48;5;085m%}' 086 $'%{\C-[[48;5;086m%}' 087 $'%{\C-[[48;5;087m%}' 088 $'%{\C-[[48;5;088m%}' 089 $'%{\C-[[48;5;089m%}' 090 $'%{\C-[[48;5;090m%}' 091 $'%{\C-[[48;5;091m%}' 092 $'%{\C-[[48;5;092m%}' 093 $'%{\C-[[48;5;093m%}' 094 $'%{\C-[[48;5;094m%}' 095 $'%{\C-[[48;5;095m%}' 096 $'%{\C-[[48;5;096m%}' 097 $'%{\C-[[48;5;097m%}' 098 $'%{\C-[[48;5;098m%}' 099 $'%{\C-[[48;5;099m%}' 100 $'%{\C-[[48;5;100m%}' 101 $'%{\C-[[48;5;101m%}' 102 $'%{\C-[[48;5;102m%}' 103 $'%{\C-[[48;5;103m%}' 104 $'%{\C-[[48;5;104m%}' 105 $'%{\C-[[48;5;105m%}' 106 $'%{\C-[[48;5;106m%}' 107 $'%{\C-[[48;5;107m%}' 108 $'%{\C-[[48;5;108m%}' 109 $'%{\C-[[48;5;109m%}' 110 $'%{\C-[[48;5;110m%}' 111 $'%{\C-[[48;5;111m%}' 112 $'%{\C-[[48;5;112m%}' 113 $'%{\C-[[48;5;113m%}' 114 $'%{\C-[[48;5;114m%}' 115 $'%{\C-[[48;5;115m%}' 116 $'%{\C-[[48;5;116m%}' 117 $'%{\C-[[48;5;117m%}' 118 $'%{\C-[[48;5;118m%}' 119 $'%{\C-[[48;5;119m%}' 120 $'%{\C-[[48;5;120m%}' 121 $'%{\C-[[48;5;121m%}' 122 $'%{\C-[[48;5;122m%}' 123 $'%{\C-[[48;5;123m%}' 124 $'%{\C-[[48;5;124m%}' 125 $'%{\C-[[48;5;125m%}' 126 $'%{\C-[[48;5;126m%}' 127 $'%{\C-[[48;5;127m%}' 128 $'%{\C-[[48;5;128m%}' 129 $'%{\C-[[48;5;129m%}' 130 $'%{\C-[[48;5;130m%}' 131 $'%{\C-[[48;5;131m%}' 132 $'%{\C-[[48;5;132m%}' 133 $'%{\C-[[48;5;133m%}' 134 $'%{\C-[[48;5;134m%}' 135 $'%{\C-[[48;5;135m%}' 136 $'%{\C-[[48;5;136m%}' 137 $'%{\C-[[48;5;137m%}' 138 $'%{\C-[[48;5;138m%}' 139 $'%{\C-[[48;5;139m%}' 140 $'%{\C-[[48;5;140m%}' 141 $'%{\C-[[48;5;141m%}' 142 $'%{\C-[[48;5;142m%}' 143 $'%{\C-[[48;5;143m%}' 144 $'%{\C-[[48;5;144m%}' 145 $'%{\C-[[48;5;145m%}' 146 $'%{\C-[[48;5;146m%}' 147 $'%{\C-[[48;5;147m%}' 148 $'%{\C-[[48;5;148m%}' 149 $'%{\C-[[48;5;149m%}' 150 $'%{\C-[[48;5;150m%}' 151 $'%{\C-[[48;5;151m%}' 152 $'%{\C-[[48;5;152m%}' 153 $'%{\C-[[48;5;153m%}' 154 $'%{\C-[[48;5;154m%}' 155 $'%{\C-[[48;5;155m%}' 156 $'%{\C-[[48;5;156m%}' 157 $'%{\C-[[48;5;157m%}' 158 $'%{\C-[[48;5;158m%}' 159 $'%{\C-[[48;5;159m%}' 160 $'%{\C-[[48;5;160m%}' 161 $'%{\C-[[48;5;161m%}' 162 $'%{\C-[[48;5;162m%}' 163 $'%{\C-[[48;5;163m%}' 164 $'%{\C-[[48;5;164m%}' 165 $'%{\C-[[48;5;165m%}' 166 $'%{\C-[[48;5;166m%}' 167 $'%{\C-[[48;5;167m%}' 168 $'%{\C-[[48;5;168m%}' 169 $'%{\C-[[48;5;169m%}' 170 $'%{\C-[[48;5;170m%}' 171 $'%{\C-[[48;5;171m%}' 172 $'%{\C-[[48;5;172m%}' 173 $'%{\C-[[48;5;173m%}' 174 $'%{\C-[[48;5;174m%}' 175 $'%{\C-[[48;5;175m%}' 176 $'%{\C-[[48;5;176m%}' 177 $'%{\C-[[48;5;177m%}' 178 $'%{\C-[[48;5;178m%}' 179 $'%{\C-[[48;5;179m%}' 180 $'%{\C-[[48;5;180m%}' 181 $'%{\C-[[48;5;181m%}' 182 $'%{\C-[[48;5;182m%}' 183 $'%{\C-[[48;5;183m%}' 184 $'%{\C-[[48;5;184m%}' 185 $'%{\C-[[48;5;185m%}' 186 $'%{\C-[[48;5;186m%}' 187 $'%{\C-[[48;5;187m%}' 188 $'%{\C-[[48;5;188m%}' 189 $'%{\C-[[48;5;189m%}' 190 $'%{\C-[[48;5;190m%}' 191 $'%{\C-[[48;5;191m%}' 192 $'%{\C-[[48;5;192m%}' 193 $'%{\C-[[48;5;193m%}' 194 $'%{\C-[[48;5;194m%}' 195 $'%{\C-[[48;5;195m%}' 196 $'%{\C-[[48;5;196m%}' 197 $'%{\C-[[48;5;197m%}' 198 $'%{\C-[[48;5;198m%}' 199 $'%{\C-[[48;5;199m%}' 200 $'%{\C-[[48;5;200m%}' 201 $'%{\C-[[48;5;201m%}' 202 $'%{\C-[[48;5;202m%}' 203 $'%{\C-[[48;5;203m%}' 204 $'%{\C-[[48;5;204m%}' 205 $'%{\C-[[48;5;205m%}' 206 $'%{\C-[[48;5;206m%}' 207 $'%{\C-[[48;5;207m%}' 208 $'%{\C-[[48;5;208m%}' 209 $'%{\C-[[48;5;209m%}' 210 $'%{\C-[[48;5;210m%}' 211 $'%{\C-[[48;5;211m%}' 212 $'%{\C-[[48;5;212m%}' 213 $'%{\C-[[48;5;213m%}' 214 $'%{\C-[[48;5;214m%}' 215 $'%{\C-[[48;5;215m%}' 216 $'%{\C-[[48;5;216m%}' 217 $'%{\C-[[48;5;217m%}' 218 $'%{\C-[[48;5;218m%}' 219 $'%{\C-[[48;5;219m%}' 220 $'%{\C-[[48;5;220m%}' 221 $'%{\C-[[48;5;221m%}' 222 $'%{\C-[[48;5;222m%}' 223 $'%{\C-[[48;5;223m%}' 224 $'%{\C-[[48;5;224m%}' 225 $'%{\C-[[48;5;225m%}' 226 $'%{\C-[[48;5;226m%}' 227 $'%{\C-[[48;5;227m%}' 228 $'%{\C-[[48;5;228m%}' 229 $'%{\C-[[48;5;229m%}' 230 $'%{\C-[[48;5;230m%}' 231 $'%{\C-[[48;5;231m%}' 232 $'%{\C-[[48;5;232m%}' 233 $'%{\C-[[48;5;233m%}' 234 $'%{\C-[[48;5;234m%}' 235 $'%{\C-[[48;5;235m%}' 236 $'%{\C-[[48;5;236m%}' 237 $'%{\C-[[48;5;237m%}' 238 $'%{\C-[[48;5;238m%}' 239 $'%{\C-[[48;5;239m%}' 240 $'%{\C-[[48;5;240m%}' 241 $'%{\C-[[48;5;241m%}' 242 $'%{\C-[[48;5;242m%}' 243 $'%{\C-[[48;5;243m%}' 244 $'%{\C-[[48;5;244m%}' 245 $'%{\C-[[48;5;245m%}' 246 $'%{\C-[[48;5;246m%}' 247 $'%{\C-[[48;5;247m%}' 248 $'%{\C-[[48;5;248m%}' 249 $'%{\C-[[48;5;249m%}' 250 $'%{\C-[[48;5;250m%}' 251 $'%{\C-[[48;5;251m%}' 252 $'%{\C-[[48;5;252m%}' 253 $'%{\C-[[48;5;253m%}' 254 $'%{\C-[[48;5;254m%}' 255 $'%{\C-[[48;5;255m%}' )
typeset -A bg=( black $'\C-[[40m' blue $'\C-[[44m' cyan $'\C-[[46m' default $'\C-[[49m' green $'\C-[[42m' grey $'\C-[[40m' magenta $'\C-[[45m' red $'\C-[[41m' white $'\C-[[47m' yellow $'\C-[[43m' )
typeset -A bg_bold=( black $'\C-[[01;40m' blue $'\C-[[01;44m' cyan $'\C-[[01;46m' default $'\C-[[01;49m' green $'\C-[[01;42m' grey $'\C-[[01;40m' magenta $'\C-[[01;45m' red $'\C-[[01;41m' white $'\C-[[01;47m' yellow $'\C-[[01;43m' )
typeset -A bg_no_bold=( black $'\C-[[22;40m' blue $'\C-[[22;44m' cyan $'\C-[[22;46m' default $'\C-[[22;49m' green $'\C-[[22;42m' grey $'\C-[[22;40m' magenta $'\C-[[22;45m' red $'\C-[[22;41m' white $'\C-[[22;47m' yellow $'\C-[[22;43m' )
typeset -a cdpath=(  )
typeset -A _cmd_variant=( cat gnu )
typeset -A color=( 00 none 01 bold 02 faint 03 standout 04 underline 05 blink 07 reverse 08 conceal 22 normal 23 no-standout 24 no-underline 25 no-blink 27 no-reverse 28 no-conceal 30 black 31 red 32 green 33 yellow 34 blue 35 magenta 36 cyan 37 white 39 default 40 bg-black 41 bg-red 42 bg-green 43 bg-yellow 44 bg-blue 45 bg-magenta 46 bg-cyan 47 bg-white 49 bg-default bg-black 40 bg-blue 44 bg-cyan 46 bg-default 49 bg-green 42 bg-grey 40 bg-magenta 45 bg-red 41 bg-white 47 bg-yellow 43 black 30 blink 05 blue 34 bold 01 conceal 08 cyan 36 default 39 faint 02 fg-black 30 fg-blue 34 fg-cyan 36 fg-default 39 fg-green 32 fg-grey 30 fg-magenta 35 fg-red 31 fg-white 37 fg-yellow 33 green 32 grey 30 magenta 35 no-blink 25 no-conceal 28 no-reverse 27 no-standout 23 no-underline 24 none 00 normal 22 red 31 reverse 07 standout 03 underline 04 white 37 yellow 33 )
typeset -A colour=( 00 none 01 bold 02 faint 03 standout 04 underline 05 blink 07 reverse 08 conceal 22 normal 23 no-standout 24 no-underline 25 no-blink 27 no-reverse 28 no-conceal 30 black 31 red 32 green 33 yellow 34 blue 35 magenta 36 cyan 37 white 39 default 40 bg-black 41 bg-red 42 bg-green 43 bg-yellow 44 bg-blue 45 bg-magenta 46 bg-cyan 47 bg-white 49 bg-default bg-black 40 bg-blue 44 bg-cyan 46 bg-default 49 bg-green 42 bg-grey 40 bg-magenta 45 bg-red 41 bg-white 47 bg-yellow 43 black 30 blink 05 blue 34 bold 01 conceal 08 cyan 36 default 39 faint 02 fg-black 30 fg-blue 34 fg-cyan 36 fg-default 39 fg-green 32 fg-grey 30 fg-magenta 35 fg-red 31 fg-white 37 fg-yellow 33 green 32 grey 30 magenta 35 no-blink 25 no-conceal 28 no-reverse 27 no-standout 23 no-underline 24 none 00 normal 22 red 31 reverse 07 standout 03 underline 04 white 37 yellow 33 )
typeset -A commands=( x86_64-linux-gnu-ld /usr/bin/x86_64-linux-gnu-ld enchant /usr/bin/enchant hp-timedate /usr/bin/hp-timedate gpic /usr/bin/gpic gjs /usr/bin/gjs x-window-manager /usr/bin/x-window-manager brushtopbm /usr/bin/brushtopbm cd-fix-profile /usr/bin/cd-fix-profile vcstime /usr/sbin/vcstime gnome-system-monitor /snap/bin/gnome-system-monitor ppmdither /usr/bin/ppmdither pamdeinterlace /usr/bin/pamdeinterlace alsamixer /usr/bin/alsamixer avahi-browse /usr/bin/avahi-browse keyring /usr/bin/keyring sed /bin/sed comm /usr/bin/comm see /usr/bin/see pamstretch-gen /usr/bin/pamstretch-gen pbmtoepsi /usr/bin/pbmtoepsi amidi /usr/bin/amidi orca /usr/bin/orca gcc-nm /usr/bin/gcc-nm gvfs-open /usr/bin/gvfs-open fsck.vfat /sbin/fsck.vfat pnmmontage /usr/bin/pnmmontage unshare /usr/bin/unshare seq /usr/bin/seq iwlist /sbin/iwlist grub-kbdcomp /usr/bin/grub-kbdcomp ucfq /usr/bin/ucfq ntfswipe /bin/ntfswipe ucfr /usr/bin/ucfr xzgrep /usr/bin/xzgrep ppmchange /usr/bin/ppmchange ilbmtoppm /usr/bin/ilbmtoppm routef /usr/bin/routef xmodmap /usr/bin/xmodmap pnmflip /usr/bin/pnmflip xzfgrep /usr/bin/xzfgrep cd-iccdump /usr/bin/cd-iccdump chmem /usr/sbin/chmem desktop-file-edit /usr/bin/desktop-file-edit routel /usr/bin/routel x86_64-linux-gnu-gcc-ar /usr/bin/x86_64-linux-gnu-gcc-ar gpg-zip /usr/bin/gpg-zip ppmtomitsu /usr/bin/ppmtomitsu podselect /usr/bin/podselect compare /usr/bin/compare bioradtopgm /usr/bin/bioradtopgm x86_64-linux-gnu-dwp /usr/bin/x86_64-linux-gnu-dwp x86_64-linux-gnu-nm /usr/bin/x86_64-linux-gnu-nm pppstats /usr/sbin/pppstats usermod /usr/sbin/usermod shasum /usr/bin/shasum unsquashfs /usr/bin/unsquashfs kerneloops /usr/sbin/kerneloops alsactl /usr/sbin/alsactl colormgr /usr/bin/colormgr update-fonts-dir /usr/sbin/update-fonts-dir apg /usr/bin/apg X /usr/bin/X pbmmask /usr/bin/pbmmask xsetwacom /usr/bin/xsetwacom ltrace /usr/bin/ltrace pnmfile /usr/bin/pnmfile '[' '/usr/bin/[' xdg-desktop-icon /usr/bin/xdg-desktop-icon sudoedit /usr/bin/sudoedit pnmtosgi /usr/bin/pnmtosgi ntfsfix /bin/ntfsfix ar /usr/bin/ar as /usr/bin/as apt /usr/bin/apt lwp-dump /usr/bin/lwp-dump domainname /bin/domainname gkbd-keyboard-display /usr/bin/gkbd-keyboard-display nohup /usr/bin/nohup pic /usr/bin/pic colrm /usr/bin/colrm dbus-daemon /usr/bin/dbus-daemon systemd-cgls /usr/bin/systemd-cgls geteltorito /usr/bin/geteltorito localectl /usr/bin/localectl msgcomm /usr/bin/msgcomm pamdice /usr/bin/pamdice bc /usr/bin/bc w /usr/bin/w select-default-wordlist /usr/sbin/select-default-wordlist mke2fs /sbin/mke2fs b2sum /usr/bin/b2sum xcalc /usr/bin/xcalc ssh-keygen /usr/bin/ssh-keygen tarcat /usr/sbin/tarcat ppmforge /usr/bin/ppmforge objdump /usr/bin/objdump unattended-upgrades /usr/bin/unattended-upgrades remove-default-wordlist /usr/sbin/remove-default-wordlist lspgpot /usr/bin/lspgpot gnome-thumbnail-font /usr/bin/gnome-thumbnail-font pgmtolispm /usr/bin/pgmtolispm lzless /usr/bin/lzless yes /usr/bin/yes cron /usr/sbin/cron tificc /usr/bin/tificc cc /usr/bin/cc nautilus-autorun-software /usr/bin/nautilus-autorun-software palmtopnm /usr/bin/palmtopnm findfs /sbin/findfs desktop-file-install /usr/bin/desktop-file-install grub-glue-efi /usr/bin/grub-glue-efi getty /sbin/getty msgconv /usr/bin/msgconv deallocvt /usr/bin/deallocvt asciitopgm /usr/bin/asciitopgm gslj /usr/bin/gslj cp /bin/cp egrep /bin/egrep pathchk /usr/bin/pathchk setleds /usr/bin/setleds grub-probe /usr/sbin/grub-probe gslp /usr/bin/gslp lzegrep /usr/bin/lzegrep pod2usage /usr/bin/pod2usage ntfscmp /bin/ntfscmp ip6tables-restore /sbin/ip6tables-restore pnmtosir /usr/bin/pnmtosir update-passwd /usr/sbin/update-passwd ppmpat /usr/bin/ppmpat mk_modmap /usr/bin/mk_modmap dc /usr/bin/dc dd /bin/dd login /bin/login ntfsls /bin/ntfsls df /bin/df zegrep /bin/zegrep e2undo /sbin/e2undo cpan5.26-x86_64-linux-gnu /usr/bin/cpan5.26-x86_64-linux-gnu dnsdomainname /bin/dnsdomainname mmd /usr/bin/mmd gpg /usr/bin/gpg xdg-icon-resource /usr/bin/xdg-icon-resource hwe-support-status /usr/bin/hwe-support-status ps2pdf /usr/bin/ps2pdf printafm /usr/bin/printafm cracklib-check /usr/sbin/cracklib-check getpcaps /sbin/getpcaps isoinfo /usr/bin/isoinfo lwp-request /usr/bin/lwp-request du /usr/bin/du hexdump /usr/bin/hexdump nautilus-desktop /usr/bin/nautilus-desktop ip6tables-apply /usr/sbin/ip6tables-apply dpkg-maintscript-helper /usr/bin/dpkg-maintscript-helper gnome-terminal /usr/bin/gnome-terminal mmount /usr/bin/mmount gnome-terminal.real /usr/bin/gnome-terminal.real blkdeactivate /sbin/blkdeactivate lpmove /usr/sbin/lpmove pbmtonokia /usr/bin/pbmtonokia udevadm /sbin/udevadm ed /bin/ed aptd /usr/sbin/aptd gsnd /usr/bin/gsnd tcpdump /usr/sbin/tcpdump iecset /usr/bin/iecset opldecode /usr/bin/opldecode update-gsfontmap /usr/sbin/update-gsfontmap true /bin/true syslinux-legacy /usr/bin/syslinux-legacy prtstat /usr/bin/prtstat lp_solve /usr/bin/lp_solve locale-gen /usr/sbin/locale-gen bootctl /usr/bin/bootctl ppmdim /usr/bin/ppmdim ex /usr/bin/ex linkicc /usr/bin/linkicc word-list-compress /usr/bin/word-list-compress gnome-shell-perf-tool /usr/bin/gnome-shell-perf-tool mount.ntfs-3g /sbin/mount.ntfs-3g systemd-escape /bin/systemd-escape diff /usr/bin/diff update-manager /usr/bin/update-manager ischroot /usr/bin/ischroot ntfsclone /sbin/ntfsclone sbigtopgm /usr/bin/sbigtopgm sdiff /usr/bin/sdiff gnome-calculator /snap/bin/gnome-calculator dmesg /bin/dmesg hp-align /usr/bin/hp-align pidof /bin/pidof flipdiff /usr/bin/flipdiff iconvconfig /usr/sbin/iconvconfig xsetpointer /usr/bin/xsetpointer pgmtexture /usr/bin/pgmtexture amuFormat.sh /usr/bin/amuFormat.sh lnstat /usr/bin/lnstat bccmd /usr/bin/bccmd pdftoppm /usr/bin/pdftoppm pamstretch /usr/bin/pamstretch journalctl /bin/journalctl x86_64-linux-gnu-gcc-7 /usr/bin/x86_64-linux-gnu-gcc-7 cupsenable /usr/sbin/cupsenable pnmtopng /usr/bin/pnmtopng gpg-wks-server /usr/bin/gpg-wks-server remove-default-ispell /usr/sbin/remove-default-ispell pbmtextps /usr/bin/pbmtextps lavadecode /usr/bin/lavadecode apt-add-repository /usr/bin/apt-add-repository systemd /bin/systemd telnet.netkit /usr/bin/telnet.netkit dpkg-preconfigure /usr/sbin/dpkg-preconfigure grub-mkfont /usr/bin/grub-mkfont foo2hiperc-wrapper /usr/bin/foo2hiperc-wrapper foo2oak-wrapper /usr/bin/foo2oak-wrapper xdg-settings /usr/bin/xdg-settings foo2oak /usr/bin/foo2oak ifup /sbin/ifup wpa_action /sbin/wpa_action curl /usr/bin/curl lsblk /bin/lsblk gs /usr/bin/gs pkcon /usr/bin/pkcon pkill /usr/bin/pkill dhclient-script /sbin/dhclient-script acpi_available /sbin/acpi_available wpa_cli /sbin/wpa_cli ibus-table-createdb /usr/bin/ibus-table-createdb lesskey /usr/bin/lesskey pnmnoraw /usr/bin/pnmnoraw thinkjettopbm /usr/bin/thinkjettopbm psfstriptable /usr/bin/psfstriptable sbsign /usr/bin/sbsign avahi-resolve-address /usr/bin/avahi-resolve-address xprop /usr/bin/xprop locale-check /usr/bin/locale-check hp-logcapture /usr/bin/hp-logcapture bzcmp /bin/bzcmp hd /usr/bin/hd zmore /bin/zmore pon /usr/bin/pon cupsdisable /usr/sbin/cupsdisable gtf /usr/bin/gtf pax11publish /usr/bin/pax11publish awk /usr/bin/awk aa-exec /usr/bin/aa-exec switch_root /sbin/switch_root stream-im6 /usr/bin/stream-im6 tempfile /bin/tempfile mkdir /bin/mkdir pnmsplit /usr/bin/pnmsplit msgcmp /usr/bin/msgcmp sh.distrib /bin/sh.distrib sbverify /usr/bin/sbverify whatis /usr/bin/whatis bluetooth-sendto /usr/bin/bluetooth-sendto parecord /usr/bin/parecord psidtopgm /usr/bin/psidtopgm mt-gnu /bin/mt-gnu minfo /usr/bin/minfo mkfs.fat /sbin/mkfs.fat update-initramfs /usr/sbin/update-initramfs id /usr/bin/id mrd /usr/bin/mrd hp-colorcal /usr/bin/hp-colorcal sleep /bin/sleep ip /sbin/ip bsd-from /usr/bin/bsd-from syslinux /usr/bin/syslinux iw /sbin/iw gvfs-set-attribute /usr/bin/gvfs-set-attribute mawk /usr/bin/mawk pstopnm /usr/bin/pstopnm c89 /usr/bin/c89 ibus-daemon /usr/bin/ibus-daemon gdialog /usr/bin/gdialog aptdcon /usr/bin/aptdcon namei /usr/bin/namei chmod /bin/chmod dwp /usr/bin/dwp fallocate /usr/bin/fallocate alsaloop /usr/bin/alsaloop dvipdf /usr/bin/dvipdf msgfmt /usr/bin/msgfmt gatttool /usr/bin/gatttool dirmngr-client /usr/bin/dirmngr-client xdriinfo /usr/bin/xdriinfo chgrp /bin/chgrp kernel-install /usr/bin/kernel-install ntfsfallocate /bin/ntfsfallocate setmetamode /usr/bin/setmetamode xdg-email /usr/bin/xdg-email tabs /usr/bin/tabs ppmmix /usr/bin/ppmmix newusers /usr/sbin/newusers stream /usr/bin/stream e2fsck /sbin/e2fsck x86_64-linux-gnu-gprof /usr/bin/x86_64-linux-gnu-gprof strace-log-merge /usr/bin/strace-log-merge apparmor_status /usr/sbin/apparmor_status c99 /usr/bin/c99 unzip /usr/bin/unzip colcrt /usr/bin/colcrt bunzip2 /bin/bunzip2 showkey /usr/bin/showkey loginctl /bin/loginctl bridge /sbin/bridge debconf-show /usr/bin/debconf-show mkfs.vfat /sbin/mkfs.vfat delgroup /usr/sbin/delgroup pnmtotiff /usr/bin/pnmtotiff qrttoppm /usr/bin/qrttoppm halt /sbin/halt hciattach /usr/bin/hciattach apt-key /usr/bin/apt-key nsenter /usr/bin/nsenter biosdecode /usr/sbin/biosdecode gdisk /sbin/gdisk mtr /usr/bin/mtr pnmscale /usr/bin/pnmscale mount.lowntfs-3g /sbin/mount.lowntfs-3g amixer /usr/bin/amixer m2400w /usr/bin/m2400w Xorg /usr/bin/Xorg symcryptrun /usr/bin/symcryptrun notify-send /usr/bin/notify-send ld /usr/bin/ld mmcli /usr/bin/mmcli gcov-7 /usr/bin/gcov-7 pnmcat /usr/bin/pnmcat catman /usr/bin/catman ssh-add /usr/bin/ssh-add bzip2 /bin/bzip2 ionice /usr/bin/ionice scanimage /usr/bin/scanimage ln /bin/ln gvfs-mkdir /usr/bin/gvfs-mkdir pico /usr/bin/pico lp /usr/bin/lp ls /bin/ls mkhomedir_helper /sbin/mkhomedir_helper timedatectl /usr/bin/timedatectl ntfstruncate /bin/ntfstruncate xkill /usr/bin/xkill update-dictcommon-hunspell /usr/sbin/update-dictcommon-hunspell udisksctl /usr/bin/udisksctl lz /usr/bin/lz gvfs-monitor-dir /usr/bin/gvfs-monitor-dir grub-mkimage /usr/bin/grub-mkimage rasttopnm /usr/bin/rasttopnm mount.ntfs /sbin/mount.ntfs gnome-disks /usr/bin/gnome-disks arping /usr/bin/arping xbrlapi /usr/bin/xbrlapi ppmtoyuv /usr/bin/ppmtoyuv whoami /usr/bin/whoami x86_64-linux-gnu-gcc-nm /usr/bin/x86_64-linux-gnu-gcc-nm ppmntsc /usr/bin/ppmntsc rename.ul /usr/bin/rename.ul imagetops /usr/bin/imagetops ulockmgr_server /bin/ulockmgr_server blockdev /sbin/blockdev eject /usr/bin/eject speech-dispatcher /usr/bin/speech-dispatcher ptx /usr/bin/ptx ntfsresize /sbin/ntfsresize bash /bin/bash ssh /usr/bin/ssh mt /bin/mt mv /bin/mv foo2zjs-pstops /usr/bin/foo2zjs-pstops swapoff /sbin/swapoff add-apt-repository /usr/bin/add-apt-repository xvminitoppm /usr/bin/xvminitoppm bashbug /usr/bin/bashbug rcvboxadd /sbin/rcvboxadd efibootdump /bin/efibootdump VBoxClient /usr/bin/VBoxClient nc /bin/nc resizepart /usr/bin/resizepart nl /usr/bin/nl nm /usr/bin/nm pbmtomacp /usr/bin/pbmtomacp iceauth /usr/bin/iceauth ppmshadow /usr/bin/ppmshadow pldd /usr/bin/pldd mkfs.msdos /sbin/mkfs.msdos mogrify-im6 /usr/bin/mogrify-im6 ntfsinfo /bin/ntfsinfo vmwarectrl /usr/bin/vmwarectrl dnsmasq /usr/sbin/dnsmasq showconsolefont /usr/bin/showconsolefont import /usr/bin/import gcr-viewer /usr/bin/gcr-viewer pf2afm /usr/bin/pf2afm pnmconvol /usr/bin/pnmconvol ppmfade /usr/bin/ppmfade column /usr/bin/column sbvarsign /usr/bin/sbvarsign ntfs-3g /bin/ntfs-3g bzless /bin/bzless od /usr/bin/od pnmtofiasco /usr/bin/pnmtofiasco cupstestdsc /usr/bin/cupstestdsc gapplication /usr/bin/gapplication composite-im6 /usr/bin/composite-im6 chardet3 /usr/bin/chardet3 rtkitctl /usr/sbin/rtkitctl cracklib-unpacker /usr/sbin/cracklib-unpacker st4topgm /usr/bin/st4topgm uuidparse /usr/bin/uuidparse sum /usr/bin/sum pgmcrater /usr/bin/pgmcrater xzmore /usr/bin/xzmore hp-clean /usr/bin/hp-clean i386 /usr/bin/i386 ybmtopbm /usr/bin/ybmtopbm pwd /bin/pwd dirsplit /usr/bin/dirsplit editdiff /usr/bin/editdiff ipod-time-sync /usr/bin/ipod-time-sync composite-im6.q16 /usr/bin/composite-im6.q16 xdg-mime /usr/bin/xdg-mime grub-render-label /usr/bin/grub-render-label slxdecode /usr/bin/slxdecode run-with-aspell /usr/bin/run-with-aspell desktop-file-validate /usr/bin/desktop-file-validate ximtoppm /usr/bin/ximtoppm pnmpsnr /usr/bin/pnmpsnr update-fonts-scale /usr/sbin/update-fonts-scale md5sum.textutils /usr/bin/md5sum.textutils convert /usr/bin/convert pr /usr/bin/pr ps /bin/ps update-mime /usr/sbin/update-mime zforce /bin/zforce pinentry /usr/bin/pinentry check-language-support /usr/bin/check-language-support e2image /sbin/e2image fsfreeze /sbin/fsfreeze usb-devices /usr/bin/usb-devices hbpldecode /usr/bin/hbpldecode x86_64-linux-gnu-elfedit /usr/bin/x86_64-linux-gnu-elfedit gnome-session-custom-session /usr/bin/gnome-session-custom-session join /usr/bin/join plymouth /bin/plymouth splitfont /usr/bin/splitfont tail /usr/bin/tail sync /bin/sync gcc-7 /usr/bin/gcc-7 gnome-software-editor /usr/bin/gnome-software-editor sha1sum /usr/bin/sha1sum dbus-monitor /usr/bin/dbus-monitor ifquery /sbin/ifquery lpadmin /usr/sbin/lpadmin x86_64-linux-gnu-gcc-nm-7 /usr/bin/x86_64-linux-gnu-gcc-nm-7 ps2ps2 /usr/bin/ps2ps2 nano /bin/nano chpasswd /usr/sbin/chpasswd whoopsie-preferences /usr/bin/whoopsie-preferences filefrag /usr/sbin/filefrag sha384sum /usr/bin/sha384sum mklost+found /usr/sbin/mklost+found enc2xs /usr/bin/enc2xs systemd-stdio-bridge /usr/bin/systemd-stdio-bridge poff /usr/bin/poff rm /bin/rm cupstestppd /usr/bin/cupstestppd x86_64-linux-gnu-gcov /usr/bin/x86_64-linux-gnu-gcov accept /usr/sbin/accept thermald /usr/sbin/thermald helpztags /usr/bin/helpztags x86_64-linux-gnu-addr2line /usr/bin/x86_64-linux-gnu-addr2line winicontoppm /usr/bin/winicontoppm pbmtoepson /usr/bin/pbmtoepson pacat /usr/bin/pacat ssh-keyscan /usr/bin/ssh-keyscan update-grub-gfxpayload /usr/sbin/update-grub-gfxpayload min12xxw /usr/bin/min12xxw brltty /sbin/brltty dumpkeys /usr/bin/dumpkeys tload /usr/bin/tload nautilus /usr/bin/nautilus alsabat-test /usr/sbin/alsabat-test fusermount /bin/fusermount pnmtorast /usr/bin/pnmtorast systemd-tmpfiles /bin/systemd-tmpfiles alsa-info /usr/sbin/alsa-info sg /usr/bin/sg sh /bin/sh apport-cli /usr/bin/apport-cli view /usr/bin/view hp-levels /usr/bin/hp-levels cupsfilter /usr/sbin/cupsfilter foo2ddst-wrapper /usr/bin/foo2ddst-wrapper foo2ddst /usr/bin/foo2ddst ss /bin/ss cd-create-profile /usr/bin/cd-create-profile su /bin/su gst-device-monitor-1.0 /usr/bin/gst-device-monitor-1.0 zeisstopnm /usr/bin/zeisstopnm pam-auth-update /usr/sbin/pam-auth-update wdctl /bin/wdctl localedef /usr/bin/localedef ptardiff /usr/bin/ptardiff hp-testpage /usr/bin/hp-testpage mount.fuse /sbin/mount.fuse grub-install /usr/sbin/grub-install qpdldecode /usr/bin/qpdldecode tc /sbin/tc x86_64-linux-gnu-gcov-tool /usr/bin/x86_64-linux-gnu-gcov-tool pbmtoascii /usr/bin/pbmtoascii utmpdump /usr/bin/utmpdump split /usr/bin/split broadwayd /usr/bin/broadwayd pi3topbm /usr/bin/pi3topbm filterdiff /usr/bin/filterdiff VBoxService /usr/sbin/VBoxService gvfs-ls /usr/bin/gvfs-ls cpan /usr/bin/cpan iwconfig /sbin/iwconfig groupadd /usr/sbin/groupadd tr /usr/bin/tr gnome-power-statistics /usr/bin/gnome-power-statistics ppmqvga /usr/bin/ppmqvga update-desktop-database /usr/bin/update-desktop-database devlink /sbin/devlink bitmap /usr/bin/bitmap debconf-escape /usr/bin/debconf-escape pptpsetup /usr/sbin/pptpsetup x86_64-linux-gnu-gold /usr/bin/x86_64-linux-gnu-gold truncate /usr/bin/truncate ua /usr/bin/ua iptables-apply /usr/sbin/iptables-apply vigr /usr/sbin/vigr openvt /bin/openvt nm-connection-editor /usr/bin/nm-connection-editor mogrify-im6.q16 /usr/bin/mogrify-im6.q16 iwgetid /sbin/iwgetid rmdir /bin/rmdir spice-vdagentd /usr/sbin/spice-vdagentd gprof /usr/bin/gprof perl5.26-x86_64-linux-gnu /usr/bin/perl5.26-x86_64-linux-gnu uncompress /bin/uncompress rpcgen /usr/bin/rpcgen setvtrgb /sbin/setvtrgb ul /usr/bin/ul pygettext3 /usr/bin/pygettext3 spellintian /usr/bin/spellintian badblocks /sbin/badblocks pdfinfo /usr/bin/pdfinfo xload /usr/bin/xload pppoe-discovery /usr/sbin/pppoe-discovery ppdhtml /usr/bin/ppdhtml systemd-hwdb /bin/systemd-hwdb saned /usr/sbin/saned imgtoppm /usr/bin/imgtoppm pam_timestamp_check /usr/sbin/pam_timestamp_check uz /usr/bin/uz t1mac /usr/bin/t1mac identify-im6.q16 /usr/bin/identify-im6.q16 fc-query /usr/bin/fc-query echo /bin/echo vi /usr/bin/vi ippserver /usr/sbin/ippserver xdg-screensaver /usr/bin/xdg-screensaver atobm /usr/bin/atobm mapscrn /usr/bin/mapscrn transicc /usr/bin/transicc zipnote /usr/bin/zipnote systemd-analyze /usr/bin/systemd-analyze gnome-text-editor /usr/bin/gnome-text-editor update-pciids /usr/sbin/update-pciids tgatoppm /usr/bin/tgatoppm popcon-largest-unused /usr/sbin/popcon-largest-unused tset /usr/bin/tset pwunconv /usr/sbin/pwunconv pbmtozinc /usr/bin/pbmtozinc lexgrog /usr/bin/lexgrog wc /usr/bin/wc updatedb.mlocate /usr/bin/updatedb.mlocate ping /bin/ping pnmshear /usr/bin/pnmshear ppmtorgb3 /usr/bin/ppmtorgb3 groupdel /usr/sbin/groupdel h2ph /usr/bin/h2ph ld.gold /usr/bin/ld.gold x-terminal-emulator /usr/bin/x-terminal-emulator less /usr/bin/less update-dictcommon-aspell /usr/sbin/update-dictcommon-aspell nslookup /usr/bin/nslookup ssh-argv0 /usr/bin/ssh-argv0 ntfscluster /bin/ntfscluster create-cracklib-dict /usr/sbin/create-cracklib-dict paperconf /usr/bin/paperconf avahi-resolve-host-name /usr/bin/avahi-resolve-host-name conjure-im6 /usr/bin/conjure-im6 dmsetup /sbin/dmsetup ppmtoneo /usr/bin/ppmtoneo pstree /usr/bin/pstree xzegrep /usr/bin/xzegrep killall /usr/bin/killall montage-im6.q16 /usr/bin/montage-im6.q16 ckbcomp /usr/bin/ckbcomp pnmhistmap /usr/bin/pnmhistmap gtk-query-settings /usr/bin/gtk-query-settings pbmtoicon /usr/bin/pbmtoicon kbdinfo /usr/bin/kbdinfo ppmquantall /usr/bin/ppmquantall applygnupgdefaults /usr/sbin/applygnupgdefaults update-grub /usr/sbin/update-grub VBoxDRMClient /usr/bin/VBoxDRMClient dircolors /usr/bin/dircolors xz /usr/bin/xz ipptool /usr/bin/ipptool brltty-ttb /usr/bin/brltty-ttb ubuntu-core-launcher /usr/bin/ubuntu-core-launcher ppmrainbow /usr/bin/ppmrainbow setxkbmap /usr/bin/setxkbmap prezip-bin /usr/bin/prezip-bin xcursorgen /usr/bin/xcursorgen perlivp /usr/bin/perlivp x86_64-linux-gnu-objcopy /usr/bin/x86_64-linux-gnu-objcopy watch /usr/bin/watch leaftoppm /usr/bin/leaftoppm faillog /usr/bin/faillog ppmtobmp /usr/bin/ppmtobmp zipsplit /usr/bin/zipsplit plog /usr/bin/plog x86_64-linux-gnu-gcov-7 /usr/bin/x86_64-linux-gnu-gcov-7 gdm-screenshot /usr/bin/gdm-screenshot gpu-manager /usr/bin/gpu-manager update-default-ispell /usr/sbin/update-default-ispell ownership /usr/sbin/ownership gvfs-rm /usr/bin/gvfs-rm sldtoppm /usr/bin/sldtoppm mkfontscale /usr/bin/mkfontscale lorder /usr/bin/lorder gtbl /usr/bin/gtbl xconsole /usr/bin/xconsole gvfs-rename /usr/bin/gvfs-rename cpgr /usr/sbin/cpgr libnetcfg /usr/bin/libnetcfg systemd-detect-virt /usr/bin/systemd-detect-virt spd-say /usr/bin/spd-say nawk /usr/bin/nawk remove-shell /usr/sbin/remove-shell apport-unpack /usr/bin/apport-unpack mshowfat /usr/bin/mshowfat traceroute6.iputils /usr/bin/traceroute6.iputils ipcs /usr/bin/ipcs xdpyinfo /usr/bin/xdpyinfo pngtopnm /usr/bin/pngtopnm plymouthd /sbin/plymouthd ppmtowinicon /usr/bin/ppmtowinicon swapon /sbin/swapon ppmtoeyuv /usr/bin/ppmtoeyuv gcc-nm-7 /usr/bin/gcc-nm-7 pasuspender /usr/bin/pasuspender kmodsign /usr/bin/kmodsign grub-syslinux2cfg /usr/bin/grub-syslinux2cfg gvfs-info /usr/bin/gvfs-info pnmdepth /usr/bin/pnmdepth avahi-publish-address /usr/bin/avahi-publish-address lzma /usr/bin/lzma fonttosfnt /usr/bin/fonttosfnt upgrade-from-grub-legacy /usr/sbin/upgrade-from-grub-legacy xlogo /usr/bin/xlogo readlink /bin/readlink pftp /usr/bin/pftp dosfslabel /sbin/dosfslabel avahi-browse-domains /usr/bin/avahi-browse-domains arecordmidi /usr/bin/arecordmidi mmove /usr/bin/mmove xkbbell /usr/bin/xkbbell mdatopbm /usr/bin/mdatopbm foo2xqx /usr/bin/foo2xqx pbmupc /usr/bin/pbmupc select-default-ispell /usr/sbin/select-default-ispell tac /usr/bin/tac zsh5 /bin/zsh5 dfu-tool /usr/bin/dfu-tool cpio /bin/cpio slogin /usr/bin/slogin ppmtotga /usr/bin/ppmtotga ntfssecaudit /bin/ntfssecaudit cupsctl /usr/sbin/cupsctl mtools /usr/bin/mtools validlocale /usr/sbin/validlocale systemd-delta /usr/bin/systemd-delta troff /usr/bin/troff tar /bin/tar sprof /usr/bin/sprof cupsaccept /usr/sbin/cupsaccept sha256sum /usr/bin/sha256sum ppdpo /usr/bin/ppdpo isosize /sbin/isosize fsck.ext2 /sbin/fsck.ext2 gipddecode /usr/bin/gipddecode fsck.ext3 /sbin/fsck.ext3 fsck.ext4 /sbin/fsck.ext4 X11 /usr/bin/X11 mimeopen /usr/bin/mimeopen readprofile /usr/sbin/readprofile gsdj500 /usr/bin/gsdj500 apparmor_parser /sbin/apparmor_parser systemd-notify /bin/systemd-notify update-notifier /usr/bin/update-notifier logrotate /usr/sbin/logrotate gcc-ranlib /usr/bin/gcc-ranlib tbl /usr/bin/tbl xditview /usr/bin/xditview blkid /sbin/blkid lessecho /usr/bin/lessecho pydoc3.6 /usr/bin/pydoc3.6 gsettings /usr/bin/gsettings codepage /usr/bin/codepage visudo /usr/sbin/visudo parec /usr/bin/parec iwspy /sbin/iwspy pnmtoplainpnm /usr/bin/pnmtoplainpnm sotruss /usr/bin/sotruss faillock /usr/sbin/faillock pacmd /usr/bin/pacmd vipw /usr/sbin/vipw cupsreject /usr/sbin/cupsreject grub-file /usr/bin/grub-file mkfs /sbin/mkfs python3 /usr/bin/python3 NetworkManager /usr/sbin/NetworkManager genl /usr/sbin/genl xkbwatch /usr/bin/xkbwatch nm-applet /usr/bin/nm-applet pdfunite /usr/bin/pdfunite mcookie /usr/bin/mcookie sudoreplay /usr/bin/sudoreplay print /usr/bin/print mlabel /usr/bin/mlabel rmmod /sbin/rmmod pinentry-x11 /usr/bin/pinentry-x11 dh_perl_openssl /usr/bin/dh_perl_openssl gnome-control-center /usr/bin/gnome-control-center scriptreplay /usr/bin/scriptreplay snap /usr/bin/snap hp-makeuri /usr/bin/hp-makeuri h2xs /usr/bin/h2xs crontab /usr/bin/crontab hp-scan /usr/bin/hp-scan acpi_listen /usr/bin/acpi_listen rlogin /usr/bin/rlogin gnome-menus-blacklist /usr/sbin/gnome-menus-blacklist hp-setup /usr/bin/hp-setup pnmcut /usr/bin/pnmcut systemctl /bin/systemctl c++filt /usr/bin/c++filt apport-collect /usr/bin/apport-collect ip6tables /sbin/ip6tables mimetype /usr/bin/mimetype msgexec /usr/bin/msgexec tee /usr/bin/tee yuvsplittoppm /usr/bin/yuvsplittoppm ppmbrighten /usr/bin/ppmbrighten driverless /usr/bin/driverless systemd-path /usr/bin/systemd-path rstartd /usr/bin/rstartd lesspipe /usr/bin/lesspipe systemd-sysusers /bin/systemd-sysusers tune2fs /sbin/tune2fs pbmtowbmp /usr/bin/pbmtowbmp pkaction /usr/bin/pkaction e2freefrag /usr/sbin/e2freefrag pgmedge /usr/bin/pgmedge x86_64-linux-gnu-ld.bfd /usr/bin/x86_64-linux-gnu-ld.bfd l2ping /usr/bin/l2ping zramctl /sbin/zramctl bdftruncate /usr/bin/bdftruncate mformat /usr/bin/mformat poweroff /sbin/poweroff gemtopbm /usr/bin/gemtopbm pdfseparate /usr/bin/pdfseparate pod2man /usr/bin/pod2man open /bin/open pivot_root /sbin/pivot_root ldconfig /sbin/ldconfig whereis /usr/bin/whereis sputoppm /usr/bin/sputoppm geqn /usr/bin/geqn kill /bin/kill dpkg-deb /usr/bin/dpkg-deb skill /usr/bin/skill ntfsmove /bin/ntfsmove pnminterp-gen /usr/bin/pnminterp-gen t1asm /usr/bin/t1asm env /usr/bin/env wipefs /sbin/wipefs pnm2ppa /usr/bin/pnm2ppa ping4 /bin/ping4 head /usr/bin/head update-alternatives /usr/bin/update-alternatives ping6 /bin/ping6 appstreamcli /usr/bin/appstreamcli update-default-wordlist /usr/sbin/update-default-wordlist gvfs-mime /usr/bin/gvfs-mime eog /usr/bin/eog grub-mkrescue /usr/bin/grub-mkrescue ppmspread /usr/bin/ppmspread dbus-uuidgen /usr/bin/dbus-uuidgen stat /usr/bin/stat preconv /usr/bin/preconv mshortname /usr/bin/mshortname pgrep /usr/bin/pgrep gresource /usr/bin/gresource hp-info /usr/bin/hp-info zdiff /bin/zdiff ijs_pxljr /usr/bin/ijs_pxljr tgz /usr/bin/tgz ntfsdecrypt /usr/bin/ntfsdecrypt netkit-ftp /usr/bin/netkit-ftp xkeystone /usr/bin/xkeystone fc-cache /usr/bin/fc-cache busybox /bin/busybox xedit /usr/bin/xedit im-launch /usr/bin/im-launch fdisk /sbin/fdisk grub-mkrelpath /usr/bin/grub-mkrelpath dbus-send /usr/bin/dbus-send nologin /usr/sbin/nologin update-rc.d /usr/sbin/update-rc.d instmodsh /usr/bin/instmodsh gnome-www-browser /usr/bin/gnome-www-browser cppw /usr/sbin/cppw pdftocairo /usr/bin/pdftocairo fwupdmgr /usr/bin/fwupdmgr logger /usr/bin/logger printf /usr/bin/printf giftopnm /usr/bin/giftopnm nsupdate /usr/bin/nsupdate sgdisk /sbin/sgdisk ppmhist /usr/bin/ppmhist foo2qpdl-wrapper /usr/bin/foo2qpdl-wrapper gnome-disk-image-mounter /usr/bin/gnome-disk-image-mounter gcc-ranlib-7 /usr/bin/gcc-ranlib-7 pdf2dsc /usr/bin/pdf2dsc tic /usr/bin/tic gnome-shell-extension-tool /usr/bin/gnome-shell-extension-tool smproxy /usr/bin/smproxy zenity /usr/bin/zenity nfnl_osf /usr/sbin/nfnl_osf linux32 /usr/bin/linux32 foo2qpdl /usr/bin/foo2qpdl zipdetails /usr/bin/zipdetails gzip /bin/gzip apturl-gtk /usr/bin/apturl-gtk systemd-socket-activate /usr/bin/systemd-socket-activate oakdecode /usr/bin/oakdecode xkbprint /usr/bin/xkbprint psicc /usr/bin/psicc perli11ndoc /usr/bin/perli11ndoc eqn /usr/bin/eqn ppmtoilbm /usr/bin/ppmtoilbm install-printerdriver /usr/bin/install-printerdriver foo2xqx-wrapper /usr/bin/foo2xqx-wrapper pnmcolormap /usr/bin/pnmcolormap update-mime-database /usr/bin/update-mime-database evince /usr/bin/evince swaplabel /sbin/swaplabel xdg-user-dir /usr/bin/xdg-user-dir xdg-desktop-menu /usr/bin/xdg-desktop-menu tput /usr/bin/tput who /usr/bin/who make-first-existing-target /usr/bin/make-first-existing-target rbash /bin/rbash pactl /usr/bin/pactl xargs /usr/bin/xargs fsck.minix /sbin/fsck.minix interdiff /usr/bin/interdiff irqbalance-ui /usr/sbin/irqbalance-ui pwconv /usr/sbin/pwconv groupmod /usr/sbin/groupmod Xephyr /usr/bin/Xephyr xwdtopnm /usr/bin/xwdtopnm realpath /usr/bin/realpath display /usr/bin/display ppmtv /usr/bin/ppmtv foo2zjs-wrapper /usr/bin/foo2zjs-wrapper on_ac_power /usr/bin/on_ac_power tracepath /usr/bin/tracepath zipcloak /usr/bin/zipcloak cups-browsed /usr/sbin/cups-browsed setlogcons /usr/bin/setlogcons uuidgen /usr/bin/uuidgen gst-launch-1.0 /usr/bin/gst-launch-1.0 pam_tally2 /sbin/pam_tally2 rzsh /bin/rzsh ps2pdfwr /usr/bin/ps2pdfwr system-config-printer /usr/bin/system-config-printer im-config /usr/bin/im-config infobrowser /usr/bin/infobrowser rtstat /usr/bin/rtstat grub-mkdevicemap /usr/sbin/grub-mkdevicemap pcimodules /usr/bin/pcimodules recountdiff /usr/bin/recountdiff aplaymidi /usr/bin/aplaymidi intel-virtual-output /usr/bin/intel-virtual-output grub-mount /usr/bin/grub-mount msexpand /usr/bin/msexpand msgunfmt /usr/bin/msgunfmt runuser /sbin/runuser update-inetd /usr/sbin/update-inetd zic /usr/sbin/zic mkdosfs /sbin/mkdosfs gdb-add-index /usr/bin/gdb-add-index pdb3 /usr/bin/pdb3 linux64 /usr/bin/linux64 btmgmt /usr/bin/btmgmt lispmtopgm /usr/bin/lispmtopgm xdg-user-dirs-gtk-update /usr/bin/xdg-user-dirs-gtk-update zip /usr/bin/zip grepdiff /usr/bin/grepdiff import-im6.q16 /usr/bin/import-im6.q16 zjsdecode /usr/bin/zjsdecode gnome-session-inhibit /usr/bin/gnome-session-inhibit mesg /usr/bin/mesg pbmpage /usr/bin/pbmpage foo2hbpl2 /usr/bin/foo2hbpl2 pbmlife /usr/bin/pbmlife neotoppm /usr/bin/neotoppm xkbvleds /usr/bin/xkbvleds addgnupghome /usr/sbin/addgnupghome mattrib /usr/bin/mattrib lzgrep /usr/bin/lzgrep fstrim /sbin/fstrim getfacl /usr/bin/getfacl ntfs-3g.probe /bin/ntfs-3g.probe pnmenlarge /usr/bin/pnmenlarge ld.bfd /usr/bin/ld.bfd pinky /usr/bin/pinky apt-ftparchive /usr/bin/apt-ftparchive dmstats /sbin/dmstats fixparts /sbin/fixparts bsd-write /usr/bin/bsd-write mkfs.ext2 /sbin/mkfs.ext2 mkfs.ext3 /sbin/mkfs.ext3 fiascotopnm /usr/bin/fiascotopnm mkfs.ext4 /sbin/mkfs.ext4 tzconfig /usr/sbin/tzconfig ppmrelief /usr/bin/ppmrelief compare-im6.q16 /usr/bin/compare-im6.q16 ppmtolj /usr/bin/ppmtolj gvfs-monitor-file /usr/bin/gvfs-monitor-file telinit /sbin/telinit pi1toppm /usr/bin/pi1toppm x86_64-linux-gnu-size /usr/bin/x86_64-linux-gnu-size resize2fs /sbin/resize2fs reject /usr/sbin/reject rsync /usr/bin/rsync expr /usr/bin/expr mzip /usr/bin/mzip pnmindex /usr/bin/pnmindex unzipsfx /usr/bin/unzipsfx apturl /usr/bin/apturl update-icon-caches /usr/sbin/update-icon-caches rnano /bin/rnano gtk-launch /usr/bin/gtk-launch partprobe /sbin/partprobe cupsd /usr/sbin/cupsd rtcwake /usr/sbin/rtcwake x86_64-linux-gnu-gcov-dump /usr/bin/x86_64-linux-gnu-gcov-dump gettext /usr/bin/gettext gnome-session /usr/bin/gnome-session lwp-download /usr/bin/lwp-download pjtoppm /usr/bin/pjtoppm prove /usr/bin/prove xeyes /usr/bin/xeyes setcap /sbin/setcap iptables-save /sbin/iptables-save x86_64-linux-gnu-objdump /usr/bin/x86_64-linux-gnu-objdump pamoil /usr/bin/pamoil xclock /usr/bin/xclock p11-kit /usr/bin/p11-kit toe /usr/bin/toe lintian-info /usr/bin/lintian-info ppmnorm /usr/bin/ppmnorm pod2html /usr/bin/pod2html yelp /usr/bin/yelp xzdiff /usr/bin/xzdiff hp-probe /usr/bin/hp-probe getweb /usr/sbin/getweb logsave /sbin/logsave top /usr/bin/top VBoxClient-all /usr/bin/VBoxClient-all snapfuse /usr/bin/snapfuse 411toppm /usr/bin/411toppm getent /usr/bin/getent x86_64-linux-gnu-ranlib /usr/bin/x86_64-linux-gnu-ranlib wpa_supplicant /sbin/wpa_supplicant rview /usr/bin/rview iconv /usr/bin/iconv btmon /usr/bin/btmon rfcomm /usr/bin/rfcomm xwud /usr/bin/xwud gpasswd /usr/bin/gpasswd ppmmake /usr/bin/ppmmake xinit /usr/bin/xinit eutp /usr/bin/eutp free /usr/bin/free setvesablank /usr/sbin/setvesablank yuvtoppm /usr/bin/yuvtoppm pbmtoxbm /usr/bin/pbmtoxbm recode-sr-latin /usr/bin/recode-sr-latin avahi-set-host-name /usr/bin/avahi-set-host-name sbkeysync /usr/bin/sbkeysync mpartition /usr/bin/mpartition pkcheck /usr/bin/pkcheck pnmtile /usr/bin/pnmtile msgen /usr/bin/msgen gnome-keyring /usr/bin/gnome-keyring mcomp /usr/bin/mcomp groff /usr/bin/groff pppconfig /usr/sbin/pppconfig t1disasm /usr/bin/t1disasm lscpu /usr/bin/lscpu apt-config /usr/bin/apt-config ppmtompeg /usr/bin/ppmtompeg ppmtopj /usr/bin/ppmtopj ntfslabel /sbin/ntfslabel grub-mkconfig /usr/sbin/grub-mkconfig cmuwmtopbm /usr/bin/cmuwmtopbm pamfile /usr/bin/pamfile pmap /usr/bin/pmap nautilus-sendto /usr/bin/nautilus-sendto trust /usr/bin/trust infotocap /usr/bin/infotocap pkmon /usr/bin/pkmon gemtopnm /usr/bin/gemtopnm psfxtable /usr/bin/psfxtable grub-mkstandalone /usr/bin/grub-mkstandalone partx /usr/bin/partx usbhid-dump /usr/bin/usbhid-dump iptables /sbin/iptables py3versions /usr/bin/py3versions ip6tables-save /sbin/ip6tables-save renice /usr/bin/renice apt-cdrom /usr/bin/apt-cdrom modprobe /sbin/modprobe t1unmac /usr/bin/t1unmac sha512sum /usr/bin/sha512sum gst-typefind-1.0 /usr/bin/gst-typefind-1.0 fsck.fat /sbin/fsck.fat file /usr/bin/file git-upload-pack /usr/bin/git-upload-pack logname /usr/bin/logname nmtui-connect /usr/bin/nmtui-connect esc-m /usr/bin/esc-m grub-fstest /usr/bin/grub-fstest ps2epsi /usr/bin/ps2epsi hp-pkservice /usr/bin/hp-pkservice setfont /bin/setfont unexpand /usr/bin/unexpand alsabat /usr/bin/alsabat mtr-packet /usr/bin/mtr-packet python3.6 /usr/bin/python3.6 gvfs-move /usr/bin/gvfs-move dbus-update-activation-environment /usr/bin/dbus-update-activation-environment gnome-screenshot /usr/bin/gnome-screenshot hp-check /usr/bin/hp-check readelf /usr/bin/readelf py3compile /usr/bin/py3compile printenv /usr/bin/printenv dpkg /usr/bin/dpkg pgmtopbm /usr/bin/pgmtopbm listres /usr/bin/listres lsipc /usr/bin/lsipc dash /bin/dash lowntfs-3g /bin/lowntfs-3g import-im6 /usr/bin/import-im6 ldattach /usr/sbin/ldattach conjure /usr/bin/conjure vbox-uninstall-guest-additions /usr/sbin/vbox-uninstall-guest-additions mcopy /usr/bin/mcopy perldoc /usr/bin/perldoc vim.tiny /usr/bin/vim.tiny grpconv /usr/sbin/grpconv tty /usr/bin/tty find /usr/bin/find nisdomainname /bin/nisdomainname xqxdecode /usr/bin/xqxdecode shuf /usr/bin/shuf xclipboard /usr/bin/xclipboard ghostscript /usr/bin/ghostscript pamcut /usr/bin/pamcut showrgb /usr/bin/showrgb date /bin/date systemd-cat /usr/bin/systemd-cat xbiff /usr/bin/xbiff pdfimages /usr/bin/pdfimages zdump /usr/bin/zdump brltty-ctb /usr/bin/brltty-ctb hp-query /usr/bin/hp-query ubuntu-software /usr/bin/ubuntu-software losetup /sbin/losetup perlthanks /usr/bin/perlthanks gnome-keyring-daemon /usr/bin/gnome-keyring-daemon gedit /usr/bin/gedit ps2ascii /usr/bin/ps2ascii invoke-rc.d /usr/sbin/invoke-rc.d chat /usr/sbin/chat start-stop-daemon /sbin/start-stop-daemon gnome-shell-extension-prefs /usr/bin/gnome-shell-extension-prefs fold /usr/bin/fold x11perf /usr/bin/x11perf ppdc /usr/bin/ppdc pnmnorm /usr/bin/pnmnorm mgrtopbm /usr/bin/mgrtopbm setarch /usr/bin/setarch ppdi /usr/bin/ppdi ippusbxd /usr/sbin/ippusbxd zsh /usr/bin/zsh aplay /usr/bin/aplay soelim /usr/bin/soelim mkfs.ntfs /sbin/mkfs.ntfs umax_pp /usr/bin/umax_pp aconnect /usr/bin/aconnect pnminterp /usr/bin/pnminterp nproc /usr/bin/nproc deluser /usr/sbin/deluser pgmbentley /usr/bin/pgmbentley md5sum /usr/bin/md5sum gouldtoppm /usr/bin/gouldtoppm bwrap /usr/bin/bwrap aspell /usr/bin/aspell unix_chkpwd /sbin/unix_chkpwd hp-plugin-ubuntu /usr/bin/hp-plugin-ubuntu pslog /usr/bin/pslog iio-sensor-proxy /usr/sbin/iio-sensor-proxy calibrate_ppa /usr/bin/calibrate_ppa ranlib /usr/bin/ranlib ppmtoleaf /usr/bin/ppmtoleaf bluetoothd /usr/sbin/bluetoothd spice-vdagent /usr/bin/spice-vdagent rcvboxadd-service /sbin/rcvboxadd-service uuidd /usr/sbin/uuidd gamma4scanimage /usr/bin/gamma4scanimage pnmpad /usr/bin/pnmpad nmtui-edit /usr/bin/nmtui-edit rtacct /sbin/rtacct pbmtoplot /usr/bin/pbmtoplot volname /usr/bin/volname macptopbm /usr/bin/macptopbm unity-scope-loader /usr/bin/unity-scope-loader modinfo /sbin/modinfo loadkeys /usr/bin/loadkeys grub-mkpasswd-pbkdf2 /usr/bin/grub-mkpasswd-pbkdf2 lzcat /usr/bin/lzcat dpkg-split /usr/bin/dpkg-split debconf-copydb /usr/bin/debconf-copydb bzfgrep /bin/bzfgrep dh_bash-completion /usr/bin/dh_bash-completion nvidia-detector /usr/bin/nvidia-detector mknod /bin/mknod quirks-handler /usr/bin/quirks-handler xauth /usr/bin/xauth mkisofs /usr/bin/mkisofs ppmtoicr /usr/bin/ppmtoicr x86_64-linux-gnu-gcov-tool-7 /usr/bin/x86_64-linux-gnu-gcov-tool-7 dpkg-divert /usr/bin/dpkg-divert pnmtops /usr/bin/pnmtops xfontsel /usr/bin/xfontsel snapctl /usr/bin/snapctl mousetweaks /usr/bin/mousetweaks manpath /usr/bin/manpath nmtui-hostname /usr/bin/nmtui-hostname pnmhisteq /usr/bin/pnmhisteq seahorse /usr/bin/seahorse pnmcomp /usr/bin/pnmcomp reboot /sbin/reboot avahi-publish-service /usr/bin/avahi-publish-service gst-discoverer-1.0 /usr/bin/gst-discoverer-1.0 gpgsm /usr/bin/gpgsm dpkg-statoverride /usr/bin/dpkg-statoverride xrandr /usr/bin/xrandr cal /usr/bin/cal zless /bin/zless xlsfonts /usr/bin/xlsfonts whiptail /bin/whiptail kbxutil /usr/bin/kbxutil cat /bin/cat bzgrep /bin/bzgrep apt-extracttemplates /usr/bin/apt-extracttemplates ubuntu-bug /usr/bin/ubuntu-bug link /usr/bin/link monitor-sensor /usr/bin/monitor-sensor aseqnet /usr/bin/aseqnet debconf /usr/bin/debconf mutter /usr/bin/mutter update-default-aspell /usr/sbin/update-default-aspell mclasserase /usr/bin/mclasserase gvfs-tree /usr/bin/gvfs-tree vdir /bin/vdir foo2lava-wrapper /usr/bin/foo2lava-wrapper grotty /usr/bin/grotty foo2slx /usr/bin/foo2slx rtmon /sbin/rtmon netplan /usr/sbin/netplan hcitool /usr/bin/hcitool firefox /usr/bin/firefox systemd-cgtop /usr/bin/systemd-cgtop xkbevd /usr/bin/xkbevd avahi-resolve /usr/bin/avahi-resolve lessfile /usr/bin/lessfile getkeycodes /usr/bin/getkeycodes pphs /usr/bin/pphs encguess /usr/bin/encguess chfn /usr/bin/chfn ssh-copy-id /usr/bin/ssh-copy-id sgitopnm /usr/bin/sgitopnm pdftohtml /usr/bin/pdftohtml stty /bin/stty from /usr/bin/from mcat /usr/bin/mcat lsdiff /usr/bin/lsdiff ppmcolormask /usr/bin/ppmcolormask btattach /usr/bin/btattach diff3 /usr/bin/diff3 gunzip /bin/gunzip luit /usr/bin/luit arch /usr/bin/arch tzselect /usr/bin/tzselect rstart /usr/bin/rstart ispell-wrapper /usr/bin/ispell-wrapper depmod /sbin/depmod xbmtopbm /usr/bin/xbmtopbm strings /usr/bin/strings kbdrate /sbin/kbdrate animate-im6.q16 /usr/bin/animate-im6.q16 usb_modeswitch_dispatcher /usr/sbin/usb_modeswitch_dispatcher pod2text /usr/bin/pod2text grops /usr/bin/grops pkttyagent /usr/bin/pkttyagent start-pulseaudio-x11 /usr/bin/start-pulseaudio-x11 scp-dbus-service /usr/bin/scp-dbus-service neqn /usr/bin/neqn pam_extrausers_chkpwd /sbin/pam_extrausers_chkpwd foo2hp2600-wrapper /usr/bin/foo2hp2600-wrapper POST /usr/bin/POST gdk-pixbuf-thumbnailer /usr/bin/gdk-pixbuf-thumbnailer xmore /usr/bin/xmore factor /usr/bin/factor pnmcrop /usr/bin/pnmcrop espdiff /usr/games/espdiff setterm /usr/bin/setterm fuser /bin/fuser lzmore /usr/bin/lzmore vbox-greeter /usr/sbin/vbox-greeter nstat /usr/bin/nstat gnome-shell /usr/bin/gnome-shell xrdb /usr/bin/xrdb printer-profile /usr/bin/printer-profile resizecons /usr/bin/resizecons edit /usr/bin/edit mtvtoppm /usr/bin/mtvtoppm lpstat /usr/bin/lpstat lsusb /usr/bin/lsusb appres /usr/bin/appres pdftops /usr/bin/pdftops expiry /usr/bin/expiry sysctl /sbin/sysctl gencat /usr/bin/gencat pnmscalefixed /usr/bin/pnmscalefixed look /usr/bin/look x11perfcomp /usr/bin/x11perfcomp podchecker /usr/bin/podchecker catchsegv /usr/bin/catchsegv os-prober /usr/bin/os-prober ssh-agent /usr/bin/ssh-agent grub-set-default /usr/sbin/grub-set-default ppmshift /usr/bin/ppmshift pcxtoppm /usr/bin/pcxtoppm pager /usr/bin/pager x86_64 /usr/bin/x86_64 fc-validate /usr/bin/fc-validate bmtoa /usr/bin/bmtoa znew /bin/znew mount.vboxsf /sbin/mount.vboxsf foomatic-rip /usr/bin/foomatic-rip ico /usr/bin/ico funzip /usr/bin/funzip systemd-inhibit /bin/systemd-inhibit mount /bin/mount ldconfig.real /sbin/ldconfig.real tsort /usr/bin/tsort foo2hbpl2-wrapper /usr/bin/foo2hbpl2-wrapper mountpoint /bin/mountpoint ppmtopict /usr/bin/ppmtopict python3m /usr/bin/python3m HEAD /usr/bin/HEAD x86_64-linux-gnu-cpp /usr/bin/x86_64-linux-gnu-cpp apgbfm /usr/bin/apgbfm arecord /usr/bin/arecord evince-thumbnailer /usr/bin/evince-thumbnailer lcf /usr/bin/lcf foo2lava /usr/bin/foo2lava xzcat /usr/bin/xzcat hipstopgm /usr/bin/hipstopgm cracklib-packer /usr/sbin/cracklib-packer netcat /bin/netcat pkexec /usr/bin/pkexec x86_64-linux-gnu-gcc-ar-7 /usr/bin/x86_64-linux-gnu-gcc-ar-7 service /usr/sbin/service ps2txt /usr/bin/ps2txt dpkg-query /usr/bin/dpkg-query loadunimap /usr/bin/loadunimap printerbanner /usr/bin/printerbanner mscompress /usr/bin/mscompress lintian /usr/bin/lintian rletopnm /usr/bin/rletopnm sfdisk /sbin/sfdisk ldd /usr/bin/ldd xzless /usr/bin/xzless montage /usr/bin/montage isodump /usr/bin/isodump blkdiscard /sbin/blkdiscard jpegtopnm /usr/bin/jpegtopnm inputattach /usr/bin/inputattach unix_update /sbin/unix_update update-perl-sax-parsers /usr/bin/update-perl-sax-parsers raw /sbin/raw pnmrotate /usr/bin/pnmrotate groupmems /usr/sbin/groupmems pbmclean /usr/bin/pbmclean grpunconv /usr/sbin/grpunconv setfacl /usr/bin/setfacl isdv4-serial-inputattach /usr/bin/isdv4-serial-inputattach prezip /usr/bin/prezip avahi-publish /usr/bin/avahi-publish grep /bin/grep flock /usr/bin/flock editres /usr/bin/editres jpgicc /usr/bin/jpgicc upower /usr/bin/upower getcap /sbin/getcap pppd /usr/sbin/pppd canberra-gtk-play /usr/bin/canberra-gtk-play pgmtoppm /usr/bin/pgmtoppm x86_64-linux-gnu-gcov-dump-7 /usr/bin/x86_64-linux-gnu-gcov-dump-7 numfmt /usr/bin/numfmt fatlabel /sbin/fatlabel info /usr/bin/info fc-match /usr/bin/fc-match ipcmk /usr/bin/ipcmk gdbserver /usr/bin/gdbserver xpmtoppm /usr/bin/xpmtoppm gvfs-mount /usr/bin/gvfs-mount gvfs-cat /usr/bin/gvfs-cat hdparm /sbin/hdparm lspcmcia /sbin/lspcmcia gnome-software /usr/bin/gnome-software test /usr/bin/test ntfsrecover /bin/ntfsrecover display-im6.q16 /usr/bin/display-im6.q16 rcp /usr/bin/rcp iwpriv /sbin/iwpriv transset /usr/bin/transset pbmtext /usr/bin/pbmtext mlocate /usr/bin/mlocate glib-compile-schemas /usr/bin/glib-compile-schemas networkctl /bin/networkctl usb_modeswitch /usr/sbin/usb_modeswitch iwevent /sbin/iwevent networkd-dispatcher /usr/bin/networkd-dispatcher x86_64-linux-gnu-ld.gold /usr/bin/x86_64-linux-gnu-ld.gold lzcmp /usr/bin/lzcmp aspell-import /usr/bin/aspell-import run-mailcap /usr/bin/run-mailcap t1binary /usr/bin/t1binary pnmtotiffcmyk /usr/bin/pnmtotiffcmyk pbmtobbnbg /usr/bin/pbmtobbnbg ucf /usr/bin/ucf mkmanifest /usr/bin/mkmanifest gcov /usr/bin/gcov select-default-iwrap /usr/bin/select-default-iwrap gzexe /bin/gzexe grub-mklayout /usr/bin/grub-mklayout pgmramp /usr/bin/pgmramp msggrep /usr/bin/msggrep iucode_tool /usr/sbin/iucode_tool dconf /usr/bin/dconf ppmtouil /usr/bin/ppmtouil red /bin/red dpkg-reconfigure /usr/sbin/dpkg-reconfigure gst-play-1.0 /usr/bin/gst-play-1.0 foo2zjs-icc2ps /usr/bin/foo2zjs-icc2ps debian-distro-info /usr/bin/debian-distro-info ibus-setup /usr/bin/ibus-setup ps2pdf12 /usr/bin/ps2pdf12 newgrp /usr/bin/newgrp ps2pdf13 /usr/bin/ps2pdf13 sbsiglist /usr/bin/sbsiglist ps2pdf14 /usr/bin/ps2pdf14 hp-config_usb_printer /usr/bin/hp-config_usb_printer pbmpscale /usr/bin/pbmpscale make-ssl-cert /usr/sbin/make-ssl-cert eyuvtoppm /usr/bin/eyuvtoppm xtables-multi /sbin/xtables-multi e4crypt /usr/sbin/e4crypt grub-script-check /usr/bin/grub-script-check rev /usr/bin/rev deb-systemd-helper /usr/bin/deb-systemd-helper cmp /usr/bin/cmp hostnamectl /usr/bin/hostnamectl composite /usr/bin/composite init /sbin/init pnmtoddif /usr/bin/pnmtoddif arm2hpdl /usr/bin/arm2hpdl pnmremap /usr/bin/pnmremap ppdmerge /usr/bin/ppdmerge gjs-console /usr/bin/gjs-console runcon /usr/bin/runcon e2label /sbin/e2label usbmuxd /usr/sbin/usbmuxd pl2pm /usr/bin/pl2pm ppmcolors /usr/bin/ppmcolors pgmtofs /usr/bin/pgmtofs acpid /usr/sbin/acpid gnome-session-properties /usr/bin/gnome-session-properties ppmdist /usr/bin/ppmdist mren /usr/bin/mren mandb /usr/bin/mandb pptp /usr/sbin/pptp pnmalias /usr/bin/pnmalias combinediff /usr/bin/combinediff chattr /usr/bin/chattr grub-reboot /usr/sbin/grub-reboot write /usr/bin/write gnome-keyring-3 /usr/bin/gnome-keyring-3 mogrify /usr/bin/mogrify peekfd /usr/bin/peekfd dirname /usr/bin/dirname chrt /usr/bin/chrt mdeltree /usr/bin/mdeltree debconf-communicate /usr/bin/debconf-communicate pnmnlfilt /usr/bin/pnmnlfilt gold /usr/bin/gold fmt /usr/bin/fmt wbmptopbm /usr/bin/wbmptopbm pnmpaste /usr/bin/pnmpaste sha224sum /usr/bin/sha224sum qpdf /usr/bin/qpdf pgmhist /usr/bin/pgmhist delpart /usr/bin/delpart c_rehash /usr/bin/c_rehash col /usr/bin/col gvfs-copy /usr/bin/gvfs-copy display-im6 /usr/bin/display-im6 hipercdecode /usr/bin/hipercdecode sulogin /sbin/sulogin pdftotext /usr/bin/pdftotext viewres /usr/bin/viewres uname /bin/uname dumpe2fs /sbin/dumpe2fs chsh /usr/bin/chsh unlzma /usr/bin/unlzma killall5 /sbin/killall5 mkfs.cramfs /sbin/mkfs.cramfs ipcrm /usr/bin/ipcrm ppmlabel /usr/bin/ppmlabel agetty /sbin/agetty alsa /sbin/alsa ufw /usr/sbin/ufw arpd /usr/sbin/arpd msginit /usr/bin/msginit icontopbm /usr/bin/icontopbm x-www-browser /usr/bin/x-www-browser mxtar /usr/bin/mxtar gdbtui /usr/bin/gdbtui pccardctl /sbin/pccardctl lzmainfo /usr/bin/lzmainfo wpa_passphrase /usr/bin/wpa_passphrase cpp /usr/bin/cpp xev /usr/bin/xev addr2line /usr/bin/addr2line rsyslogd /usr/sbin/rsyslogd wget /usr/bin/wget adduser /usr/sbin/adduser nm-online /usr/bin/nm-online msgfilter /usr/bin/msgfilter xfd /usr/bin/xfd iptables-xml /usr/bin/iptables-xml ctstat /usr/bin/ctstat grub-editenv /usr/bin/grub-editenv bzmore /bin/bzmore sensible-pager /usr/bin/sensible-pager anacron /usr/sbin/anacron systemd-ask-password /bin/systemd-ask-password kbd_mode /bin/kbd_mode cgdisk /sbin/cgdisk gtk-update-icon-cache /usr/bin/gtk-update-icon-cache findmnt /bin/findmnt locale /usr/bin/locale gcc-ar-7 /usr/bin/gcc-ar-7 obexctl /usr/bin/obexctl xgc /usr/bin/xgc splitdiff /usr/bin/splitdiff unmkinitramfs /usr/bin/unmkinitramfs calendar /usr/bin/calendar gcov-tool /usr/bin/gcov-tool foo2slx-wrapper /usr/bin/foo2slx-wrapper mtoolstest /usr/bin/mtoolstest ubuntu-support-status /usr/bin/ubuntu-support-status static-sh /bin/static-sh ppmquant /usr/bin/ppmquant xhost /usr/bin/xhost x86_64-linux-gnu-cpp-7 /usr/bin/x86_64-linux-gnu-cpp-7 padsp /usr/bin/padsp gettext.sh /usr/bin/gettext.sh ppmcie /usr/bin/ppmcie browse /usr/bin/browse ppm3d /usr/bin/ppm3d chvt /bin/chvt bdftopcf /usr/bin/bdftopcf linux-boot-prober /usr/bin/linux-boot-prober insmod /sbin/insmod chcon /usr/bin/chcon pamon /usr/bin/pamon run-parts /bin/run-parts c99-gcc /usr/bin/c99-gcc update-fonts-alias /usr/sbin/update-fonts-alias orca-dm-wrapper /usr/bin/orca-dm-wrapper ypdomainname /bin/ypdomainname e4defrag /usr/sbin/e4defrag cksum /usr/bin/cksum ibus /usr/bin/ibus addgroup /usr/sbin/addgroup dpkg-trigger /usr/bin/dpkg-trigger zlib-flate /usr/bin/zlib-flate lspci /usr/bin/lspci pbmtogem /usr/bin/pbmtogem sudo /usr/bin/sudo gio-querymodules /usr/bin/gio-querymodules mkfontdir /usr/bin/mkfontdir ncal /usr/bin/ncal grog /usr/bin/grog pnmtorle /usr/bin/pnmtorle xzcmp /usr/bin/xzcmp gvfs-trash /usr/bin/gvfs-trash convert-im6 /usr/bin/convert-im6 kmod /bin/kmod mcheck /usr/bin/mcheck nmtui /usr/bin/nmtui lsmem /usr/bin/lsmem wall /usr/bin/wall foo2hiperc /usr/bin/foo2hiperc chcpu /sbin/chcpu mkfs.minix /sbin/mkfs.minix pnmtojpeg /usr/bin/pnmtojpeg conjure-im6.q16 /usr/bin/conjure-im6.q16 cancel /usr/bin/cancel x86_64-linux-gnu-gcc-ranlib-7 /usr/bin/x86_64-linux-gnu-gcc-ranlib-7 accessdb /usr/sbin/accessdb cups-genppdupdate /usr/sbin/cups-genppdupdate xgettext /usr/bin/xgettext vstp /usr/bin/vstp l2test /usr/bin/l2test lpc /usr/sbin/lpc x86_64-linux-gnu-c++filt /usr/bin/x86_64-linux-gnu-c++filt update-cracklib /usr/sbin/update-cracklib cautious-launcher /usr/bin/cautious-launcher lpq /usr/bin/lpq lpr /usr/bin/lpr debconf-set-selections /usr/bin/debconf-set-selections rmt /usr/sbin/rmt pbmtomda /usr/bin/pbmtomda ppmtoxpm /usr/bin/ppmtoxpm startx /usr/bin/startx getconf /usr/bin/getconf bluetoothctl /usr/bin/bluetoothctl oclock /usr/bin/oclock cut /usr/bin/cut system-config-printer-applet /usr/bin/system-config-printer-applet pgmnorm /usr/bin/pgmnorm pgmnoise /usr/bin/pgmnoise gpgconf /usr/bin/gpgconf dbus-launch /usr/bin/dbus-launch xcutsel /usr/bin/xcutsel ftp /usr/bin/ftp identify /usr/bin/identify sane-find-scanner /usr/bin/sane-find-scanner ppmtosixel /usr/bin/ppmtosixel pbmtox10bm /usr/bin/pbmtox10bm nroff /usr/bin/nroff uniq /usr/bin/uniq cvt /usr/bin/cvt enchant-lsmod /usr/bin/enchant-lsmod c89-gcc /usr/bin/c89-gcc precat /usr/bin/precat rediff /usr/bin/rediff which /usr/bin/which script /usr/bin/script compose /usr/bin/compose laptop-detect /usr/bin/laptop-detect GET /usr/bin/GET fstopgm /usr/bin/fstopgm apt-get /usr/bin/apt-get splain /usr/bin/splain sbattach /usr/bin/sbattach spd-conf /usr/bin/spd-conf gettextize /usr/bin/gettextize elfedit /usr/bin/elfedit pnmgamma /usr/bin/pnmgamma fc-cat /usr/bin/fc-cat gnome-terminal.wrapper /usr/bin/gnome-terminal.wrapper isovfy /usr/bin/isovfy irqbalance /usr/sbin/irqbalance ptargrep /usr/bin/ptargrep fsck /sbin/fsck grpck /usr/sbin/grpck isdv4-serial-debugger /usr/bin/isdv4-serial-debugger ippfind /usr/bin/ippfind telnet /usr/bin/telnet perl5.26.1 /usr/bin/perl5.26.1 bzegrep /bin/bzegrep update-locale /usr/sbin/update-locale aseqdump /usr/bin/aseqdump setupcon /bin/setupcon ntfsundelete /sbin/ntfsundelete strace /usr/bin/strace touch /usr/bin/touch pnmquant /usr/bin/pnmquant identify-im6 /usr/bin/identify-im6 gdbus /usr/bin/gdbus mksquashfs /usr/bin/mksquashfs lastb /usr/bin/lastb umount /bin/umount pnmtopalm /usr/bin/pnmtopalm pnmmargin /usr/bin/pnmmargin delv /usr/bin/delv nice /usr/bin/nice snice /usr/bin/snice mkswap /sbin/mkswap gnome-language-selector /usr/bin/gnome-language-selector gtk-builder-tool /usr/bin/gtk-builder-tool grub-macbless /usr/sbin/grub-macbless msgmerge /usr/bin/msgmerge pbmtomgr /usr/bin/pbmtomgr systemd-run /usr/bin/systemd-run g3topbm /usr/bin/g3topbm apt-sortpkgs /usr/bin/apt-sortpkgs pam_tally /sbin/pam_tally msguniq /usr/bin/msguniq updatedb /usr/bin/updatedb session-migration /usr/bin/session-migration gpgparsemail /usr/bin/gpgparsemail base32 /usr/bin/base32 gvfs-save /usr/bin/gvfs-save gnome-characters /snap/bin/gnome-characters more /bin/more ispell-autobuildhash /usr/sbin/ispell-autobuildhash boltctl /usr/bin/boltctl animate-im6 /usr/bin/animate-im6 locate /usr/bin/locate mkfs.bfs /sbin/mkfs.bfs pbmtoybm /usr/bin/pbmtoybm csplit /usr/bin/csplit pbmtopsg3 /usr/bin/pbmtopsg3 animate /usr/bin/animate VBoxControl /usr/bin/VBoxControl evince-previewer /usr/bin/evince-previewer rawtopgm /usr/bin/rawtopgm fgrep /bin/fgrep pbmtopgm /usr/bin/pbmtopgm apt-cache /usr/bin/apt-cache grub-menulst2cfg /usr/bin/grub-menulst2cfg lzfgrep /usr/bin/lzfgrep unicode_stop /usr/bin/unicode_stop apm_available /sbin/apm_available pbmtopi3 /usr/bin/pbmtopi3 cups-calibrate /usr/bin/cups-calibrate piconv /usr/bin/piconv cracklib-format /usr/sbin/cracklib-format kerneloops-submit /usr/bin/kerneloops-submit rfkill /usr/sbin/rfkill git-upload-archive /usr/bin/git-upload-archive shred /usr/bin/shred ttfread /usr/bin/ttfread hwclock /sbin/hwclock paste /usr/bin/paste rsh /usr/bin/rsh zfgrep /bin/zfgrep libwacom-list-local-devices /usr/bin/libwacom-list-local-devices git-receive-pack /usr/bin/git-receive-pack parsechangelog /usr/bin/parsechangelog pam_getenv /usr/sbin/pam_getenv pgmenhance /usr/bin/pgmenhance tifftopnm /usr/bin/tifftopnm timeout /usr/bin/timeout alsatplg /usr/bin/alsatplg json_pp /usr/bin/json_pp fsck.msdos /sbin/fsck.msdos infocmp /usr/bin/infocmp update-grub2 /usr/sbin/update-grub2 atktopbm /usr/bin/atktopbm xdg-open /usr/bin/xdg-open aa-status /usr/sbin/aa-status w.procps /usr/bin/w.procps gnome-help /usr/bin/gnome-help ModemManager /usr/sbin/ModemManager sftp /usr/bin/sftp gpg-connect-agent /usr/bin/gpg-connect-agent ifdown /sbin/ifdown xvidtune /usr/bin/xvidtune gnome-font-viewer /usr/bin/gnome-font-viewer git-shell /usr/bin/git-shell regdbdump /sbin/regdbdump gpgsplit /usr/bin/gpgsplit pstree.x11 /usr/bin/pstree.x11 x86_64-linux-gnu-gcc /usr/bin/x86_64-linux-gnu-gcc gcov-tool-7 /usr/bin/gcov-tool-7 base64 /usr/bin/base64 rctest /usr/bin/rctest unwrapdiff /usr/bin/unwrapdiff do-release-upgrade /usr/bin/do-release-upgrade hex2hcd /usr/bin/hex2hcd usb_printerid /usr/bin/usb_printerid hostid /usr/bin/hostid mkfifo /usr/bin/mkfifo systemd-umount /usr/bin/systemd-umount distro-info /usr/bin/distro-info zcat /bin/zcat pfbtopfa /usr/bin/pfbtopfa pnmtofits /usr/bin/pnmtofits install /usr/bin/install cpp-7 /usr/bin/cpp-7 umount.udisks2 /sbin/umount.udisks2 dosfsck /sbin/dosfsck expand /usr/bin/expand x86_64-linux-gnu-strip /usr/bin/x86_64-linux-gnu-strip iucode-tool /usr/sbin/iucode-tool hp-plugin /usr/bin/hp-plugin xstdcmap /usr/bin/xstdcmap lastlog /usr/bin/lastlog linux-update-symlinks /usr/bin/linux-update-symlinks shadowconfig /sbin/shadowconfig crc32 /usr/bin/crc32 lsmod /sbin/lsmod fc-list /usr/bin/fc-list ptar /usr/bin/ptar useradd /usr/sbin/useradd Xwayland /usr/bin/Xwayland xsm /usr/bin/xsm cd-it8 /usr/bin/cd-it8 aa-enabled /usr/bin/aa-enabled fc-scan /usr/bin/fc-scan shutdown /sbin/shutdown pbmtog3 /usr/bin/pbmtog3 dbus-cleanup-sockets /usr/bin/dbus-cleanup-sockets pdfsig /usr/bin/pdfsig foo2hp /usr/bin/foo2hp mtype /usr/bin/mtype hp-doctor /usr/bin/hp-doctor bluemoon /usr/bin/bluemoon fdformat /usr/sbin/fdformat ureadahead /sbin/ureadahead montage-im6 /usr/bin/montage-im6 uptime /usr/bin/uptime genisoimage /usr/bin/genisoimage migrate-pubring-from-classic-gpg /usr/bin/migrate-pubring-from-classic-gpg sort /usr/bin/sort systemd-mount /usr/bin/systemd-mount rgb3toppm /usr/bin/rgb3toppm groups /usr/bin/groups xsubpp /usr/bin/xsubpp pgmslice /usr/bin/pgmslice pdffonts /usr/bin/pdffonts anytopnm /usr/bin/anytopnm gnome-logs /snap/bin/gnome-logs pdb3.6 /usr/bin/pdb3.6 xdg-user-dirs-update /usr/bin/xdg-user-dirs-update psfgettable /usr/bin/psfgettable pbmtoatk /usr/bin/pbmtoatk getopt /usr/bin/getopt dirmngr /usr/bin/dirmngr sensible-browser /usr/bin/sensible-browser lpoptions /usr/bin/lpoptions xinput /usr/bin/xinput stream-im6.q16 /usr/bin/stream-im6.q16 runlevel /sbin/runlevel ubuntu-distro-info /usr/bin/ubuntu-distro-info lzdiff /usr/bin/lzdiff dbus-run-session /usr/bin/dbus-run-session objcopy /usr/bin/objcopy dehtmldiff /usr/bin/dehtmldiff pbmreduce /usr/bin/pbmreduce stdbuf /usr/bin/stdbuf lpinfo /usr/sbin/lpinfo pbmtogo /usr/bin/pbmtogo setpci /usr/bin/setpci xlsclients /usr/bin/xlsclients false /bin/false xmag /usr/bin/xmag apt-mark /usr/bin/apt-mark paperconfig /usr/sbin/paperconfig systemd-tty-ask-password-agent /bin/systemd-tty-ask-password-agent taskset /usr/bin/taskset select-editor /usr/bin/select-editor xman /usr/bin/xman ginstall-info /usr/bin/ginstall-info update-info-dir /usr/sbin/update-info-dir file-roller /usr/bin/file-roller linux-check-removal /usr/bin/linux-check-removal hostname /bin/hostname addpart /usr/bin/addpart reset /usr/bin/reset pnminvert /usr/bin/pnminvert xkbcomp /usr/bin/xkbcomp userdel /usr/sbin/userdel paplay /usr/bin/paplay installkernel /sbin/installkernel aspell-autobuildhash /usr/sbin/aspell-autobuildhash gcc-ar /usr/bin/gcc-ar ppmtomap /usr/bin/ppmtomap chown /bin/chown linux-version /usr/bin/linux-version pwck /usr/sbin/pwck slabtop /usr/bin/slabtop python3.6m /usr/bin/python3.6m xrefresh /usr/bin/xrefresh ppmflash /usr/bin/ppmflash bzexe /bin/bzexe lshw /usr/bin/lshw rgrep /usr/bin/rgrep pnmtoxwd /usr/bin/pnmtoxwd file2brl /usr/bin/file2brl xwininfo /usr/bin/xwininfo mbadblocks /usr/bin/mbadblocks xwd /usr/bin/xwd devdump /usr/bin/devdump fixcvsdiff /usr/bin/fixcvsdiff xmessage /usr/bin/xmessage ubuntu-drivers /usr/bin/ubuntu-drivers zipgrep /usr/bin/zipgrep perlbug /usr/bin/perlbug x86_64-linux-gnu-ar /usr/bin/x86_64-linux-gnu-ar pdfdetach /usr/bin/pdfdetach x86_64-linux-gnu-as /usr/bin/x86_64-linux-gnu-as mkzftree /usr/bin/mkzftree sensible-editor /usr/bin/sensible-editor pppoeconf /usr/sbin/pppoeconf lwp-mirror /usr/bin/lwp-mirror ubuntu-report /usr/bin/ubuntu-report zipinfo /usr/bin/zipinfo fsck.cramfs /sbin/fsck.cramfs pbmtoppa /usr/bin/pbmtoppa nmcli /usr/bin/nmcli setkeycodes /usr/bin/setkeycodes pwdx /usr/bin/pwdx xxd /usr/bin/xxd rdma /usr/bin/rdma rawtoppm /usr/bin/rawtoppm size /usr/bin/size brltty-setup /sbin/brltty-setup compare-im6 /usr/bin/compare-im6 chgpasswd /usr/sbin/chgpasswd openssl /usr/bin/openssl last /usr/bin/last pam_extrausers_update /sbin/pam_extrausers_update pygettext3.6 /usr/bin/pygettext3.6 xsetroot /usr/bin/xsetroot grub-mknetdir /usr/bin/grub-mknetdir bzip2recover /bin/bzip2recover x86_64-linux-gnu-readelf /usr/bin/x86_64-linux-gnu-readelf ddstdecode /usr/bin/ddstdecode diffstat /usr/bin/diffstat ps2ps /usr/bin/ps2ps gvfs-less /usr/bin/gvfs-less avahi-daemon /usr/sbin/avahi-daemon ciptool /usr/bin/ciptool lslogins /usr/bin/lslogins xlsatoms /usr/bin/xlsatoms foo2zjs /usr/bin/foo2zjs bmptopnm /usr/bin/bmptopnm chroot /usr/sbin/chroot debugfs /sbin/debugfs xsetmode /usr/bin/xsetmode ppmtopuzz /usr/bin/ppmtopuzz nc.openbsd /bin/nc.openbsd deb-systemd-invoke /usr/bin/deb-systemd-invoke pbmto10x /usr/bin/pbmto10x pdf2ps /usr/bin/pdf2ps fgconsole /bin/fgconsole lsb_release /usr/bin/lsb_release x-session-manager /usr/bin/x-session-manager fitstopnm /usr/bin/fitstopnm u-d-c-print-pci-ids /sbin/u-d-c-print-pci-ids screendump /usr/bin/screendump ntfsusermap /bin/ntfsusermap pbmtolj /usr/bin/pbmtolj lsattr /usr/bin/lsattr ppmtopcx /usr/bin/ppmtopcx iptables-restore /sbin/iptables-restore sessreg /usr/bin/sessreg gcc /usr/bin/gcc t1ascii /usr/bin/t1ascii pnmarith /usr/bin/pnmarith apropos /usr/bin/apropos unxz /usr/bin/unxz ppmtogif /usr/bin/ppmtogif gcov-dump-7 /usr/bin/gcov-dump-7 gnome-session-quit /usr/bin/gnome-session-quit crda /sbin/crda pulseaudio /usr/bin/pulseaudio pbmtocmuwm /usr/bin/pbmtocmuwm bmptoppm /usr/bin/bmptoppm install-info /usr/bin/install-info ntfscat /bin/ntfscat ctrlaltdel /sbin/ctrlaltdel chacl /usr/bin/chacl gdb /usr/bin/gdb vpddecode /usr/sbin/vpddecode fstab-decode /sbin/fstab-decode captoinfo /usr/bin/captoinfo mkinitramfs /usr/sbin/mkinitramfs ucs2any /usr/bin/ucs2any editor /usr/bin/editor zgrep /bin/zgrep ppmtoacad /usr/bin/ppmtoacad psfaddtable /usr/bin/psfaddtable ubuntu-advantage /usr/bin/ubuntu-advantage grub-ntldr-img /usr/bin/grub-ntldr-img man /usr/bin/man busctl /usr/bin/busctl time /usr/bin/time fix-qdf /usr/bin/fix-qdf perl /usr/bin/perl pamstack /usr/bin/pamstack m2300w-wrapper /usr/bin/m2300w-wrapper chardetect3 /usr/bin/chardetect3 setsid /usr/bin/setsid preunzip /usr/bin/preunzip pbmmake /usr/bin/pbmmake host /usr/bin/host pbmtoptx /usr/bin/pbmtoptx lsns /usr/bin/lsns gcov-dump /usr/bin/gcov-dump mdel /usr/bin/mdel ngettext /usr/bin/ngettext unicode_start /bin/unicode_start xset /usr/bin/xset cupsaddsmb /usr/sbin/cupsaddsmb alsaucm /usr/bin/alsaucm gsbj /usr/bin/gsbj gdmflexiserver /usr/bin/gdmflexiserver convert-im6.q16 /usr/bin/convert-im6.q16 strip /usr/bin/strip lsof /usr/bin/lsof fc-pattern /usr/bin/fc-pattern sdptool /usr/bin/sdptool ppmtojpeg /usr/bin/ppmtojpeg gstreamer-codec-install /usr/bin/gstreamer-codec-install aa-remove-unknown /usr/sbin/aa-remove-unknown dmidecode /usr/sbin/dmidecode capsh /sbin/capsh pinentry-gnome3 /usr/bin/pinentry-gnome3 unlink /usr/bin/unlink pydoc3 /usr/bin/pydoc3 mkntfs /sbin/mkntfs ppmtopgm /usr/bin/ppmtopgm mcd /usr/bin/mcd brltty-trtxt /usr/bin/brltty-trtxt pnmsmooth /usr/bin/pnmsmooth pppdump /usr/sbin/pppdump speaker-test /usr/bin/speaker-test grub-bios-setup /usr/sbin/grub-bios-setup clear_console /usr/bin/clear_console zcmp /bin/zcmp update-usbids /usr/sbin/update-usbids ppmtopi1 /usr/bin/ppmtopi1 avahi-autoipd /usr/sbin/avahi-autoipd msgattrib /usr/bin/msgattrib rendercheck /usr/bin/rendercheck savelog /usr/bin/savelog hp-firmware /usr/bin/hp-firmware cfdisk /sbin/cfdisk traceroute6 /usr/bin/traceroute6 m2300w /usr/bin/m2300w gdm3 /usr/sbin/gdm3 pinentry-curses /usr/bin/pinentry-curses ntfscp /sbin/ntfscp apport-bug /usr/bin/apport-bug clear /usr/bin/clear software-properties-gtk /usr/bin/software-properties-gtk gsdj /usr/bin/gsdj watchgnupg /usr/bin/watchgnupg lslocks /usr/bin/lslocks lprm /usr/bin/lprm tipc /sbin/tipc parted /sbin/parted dig /usr/bin/dig mdu /usr/bin/mdu rmt-tar /usr/sbin/rmt-tar chage /usr/bin/chage envsubst /usr/bin/envsubst efibootmgr /bin/efibootmgr add-shell /usr/sbin/add-shell dir /bin/dir py3clean /usr/bin/py3clean unattended-upgrade /usr/bin/unattended-upgrade bzcat /bin/bzcat corelist /usr/bin/corelist xgamma /usr/bin/xgamma sirtopnm /usr/bin/sirtopnm vmstat /usr/bin/vmstat msgcat /usr/bin/msgcat gcore /usr/bin/gcore patch /usr/bin/patch ppmtoyuvsplit /usr/bin/ppmtoyuvsplit users /usr/bin/users spctoppm /usr/bin/spctoppm lintian-lab-tool /usr/bin/lintian-lab-tool x86_64-linux-gnu-strings /usr/bin/x86_64-linux-gnu-strings basename /usr/bin/basename whoopsie /usr/bin/whoopsie mdig /usr/bin/mdig prlimit /usr/bin/prlimit xcmsdb /usr/bin/xcmsdb x86_64-linux-gnu-gcc-ranlib /usr/bin/x86_64-linux-gnu-gcc-ranlib systemd-machine-id-setup /bin/systemd-machine-id-setup gpgv /usr/bin/gpgv debconf-apt-progress /usr/bin/debconf-apt-progress systemd-resolve /usr/bin/systemd-resolve update-ca-certificates /usr/sbin/update-ca-certificates pgmoil /usr/bin/pgmoil hciconfig /bin/hciconfig gpg-agent /usr/bin/gpg-agent ipod-read-sysinfo-extended /usr/bin/ipod-read-sysinfo-extended mdir /usr/bin/mdir make /usr/bin/make gio /usr/bin/gio eps2eps /usr/bin/eps2eps passwd /usr/bin/passwd git /usr/bin/git bzdiff /bin/bzdiff scp /usr/bin/scp popularity-contest /usr/sbin/popularity-contest xvinfo /usr/bin/xvinfo mtrace /usr/bin/mtrace lsinitramfs /usr/bin/lsinitramfs gst-inspect-1.0 /usr/bin/gst-inspect-1.0 mktemp /bin/mktemp pgmkernel /usr/bin/pgmkernel dhclient /sbin/dhclient )
typeset -a _comp_assocs=( '' )
typeset -A _compautos=( _call_program +X )
typeset -a _comp_options=( bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_errreturn NO_globassign NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_posixbuiltins NO_posixidentifiers NO_shwordsplit NO_shglob NO_warnnestedvar NO_warncreateglobal )
typeset -a comppostfuncs=(  )
typeset -a compprefuncs=(  )
typeset -A _comps=( - _precommand -array-value- _value -assign-parameter- _assign -brace-parameter- _brace_parameter -command- _autocd -command-line- _normal -condition- _condition -default- _default -equal- _equal -first- _first -math- _math -parameter- _parameter -redirect- _redirect -redirect-,-default-,-default- _files '-redirect-,<,bunzip2' _bzip2 '-redirect-,<,bzip2' _bzip2 '-redirect-,<,compress' _compress '-redirect-,<,gunzip' _gzip '-redirect-,<,gzip' _gzip '-redirect-,<,uncompress' _compress '-redirect-,<,unxz' _xz '-redirect-,<,xz' _xz '-redirect-,>,bzip2' _bzip2 '-redirect-,>,compress' _compress '-redirect-,>,gzip' _gzip '-redirect-,>,xz' _xz -subscript- _subscript -tilde- _tilde -value- _value -value-,-default-,-command- _zargs -value-,-default-,-default- _value -value-,ADB_TRACE,-default- _adb -value-,ANDROID_LOG_TAGS,-default- _adb -value-,ANDROID_SERIAL,-default- _adb -value-,ANT_ARGS,-default- _ant -value-,CFLAGS,-default- _gcc -value-,CPPFLAGS,-default- _gcc -value-,CXXFLAGS,-default- _gcc -value-,DISPLAY,-default- _x_display -value-,GREP_OPTIONS,-default- _grep -value-,GZIP,-default- _gzip -value-,LANG,-default- _locales -value-,LANGUAGE,-default- _locales -value-,LDFLAGS,-default- _gcc -value-,LD_DEBUG,-default- _ld_debug -value-,LESS,-default- _less -value-,LESSCHARSET,-default- _less -value-,LPDEST,-default- _printers -value-,MPD_HOST,-default _mpc -value-,P4CLIENT,-default- _perforce -value-,P4MERGE,-default- _perforce -value-,P4PORT,-default- _perforce -value-,P4USER,-default- _perforce -value-,PERLDOC,-default- _perldoc -value-,PRINTER,-default- _printers -value-,PROMPT,-default- _ps1234 -value-,PROMPT2,-default- _ps1234 -value-,PROMPT3,-default- _ps1234 -value-,PROMPT4,-default- _ps1234 -value-,PS1,-default- _ps1234 -value-,PS2,-default- _ps1234 -value-,PS3,-default- _ps1234 -value-,PS4,-default- _ps1234 -value-,RPROMPT,-default- _ps1234 -value-,RPROMPT2,-default- _ps1234 -value-,RPS1,-default- _ps1234 -value-,RPS2,-default- _ps1234 -value-,SPROMPT,-default- _ps1234 -value-,TERM,-default- _terminals -value-,TERMINFO_DIRS,-default- _dir_list -value-,TZ,-default- _time_zone -value-,VALGRIND_OPTS,-default- _valgrind -value-,WWW_HOME,-default- _urls -value-,XML_CATALOG_FILES,-default- _xmlsoft -value-,XZ_DEFAULTS,-default- _xz -value-,XZ_OPT,-default- _xz -vared- _in_vared -zcalc-line- _zcalc_line . _source 5g _go 5l _go 6g _go 6l _go 8g _go 8l _go Mail _mail Mosaic _webbrowser SuSEconfig _SUSEconfig _git_log_prettily _git a2dismod _a2utils a2dissite _a2utils a2enmod _a2utils a2ensite _a2utils a2ps _a2ps aaaa _hosts aap _aap acpi _acpi acpitool _acpitool acroread _acroread adb _adb add-zle-hook-widget _add-zle-hook-widget add-zsh-hook _add-zsh-hook admin _sccs ali _mh alias _alias amaya _webbrowser analyseplugin _analyseplugin animate _imagemagick anno _mh ant _ant antiword _antiword aodh _openstack aoss _precommand apache2ctl _apachectl apachectl _apachectl apm _apm appletviewer _java apropos _man apt _apt apt-cache _apt apt-cdrom _apt apt-config _apt apt-file _apt-file apt-get _apt apt-mark _apt apt-move _apt-move apt-show-versions _apt-show-versions aptitude _aptitude apvlv _pdf arena _webbrowser arp _arp arping _arping at _at atq _at atrm _at attr _attr augtool _augeas auto-apt _auto-apt autoload _typeset awk _awk axi-cache _axi-cache barbican _openstack basename _basename bash _sh batch _at baz _baz beadm _beadm beep _beep bg _jobs_bg bibtex _bibtex bindkey _bindkey bison _bison bmake _make bogofilter _bogofilter bogotune _bogofilter bogoutil _bogofilter bootctl _bootctl bpython _bpython bpython-gtk _bpython bpython-urwid _bpython bpython2 _bpython bpython2-gtk _bpython bpython2-urwid _bpython bpython3 _bpython bpython3-gtk _bpython bpython3-urwid _bpython brctl _brctl bsdconfig _bsdconfig bsdgrep _grep bsdinstall _bsdinstall btdownloadcurses _bittorrent btdownloadgui _bittorrent btdownloadheadless _bittorrent btlaunchmany _bittorrent btlaunchmanycurses _bittorrent btmakemetafile _bittorrent btreannounce _bittorrent btrename _bittorrent btrfs _btrfs bts _bts btshowmetainfo _bittorrent bttrack _bittorrent bug _bug buildhash _ispell builtin _builtin bunzip2 _bzip2 burst _mh busctl _busctl bzcat _bzip2 bzip2 _bzip2 bzip2recover _bzip2 bzr _bzr c++ _gcc cabal _cabal cal _cal calendar _calendar cat _cat catchsegv _precommand cc _gcc ccal _ccal cd _cd cdbs-edit-patch _cdbs-edit-patch cdc _sccs cdcd _cdcd cdr _cdr cdrdao _cdrdao cdrecord _cdrecord ceilometer _openstack certtool _gnutls cftp _twisted chage _users chdir _cd chflags _chflags chfn _users chgrp _chown chimera _webbrowser chkconfig _chkconfig chmod _chmod chown _chown chpass _chsh chrt _chrt chsh _chsh ci _rcs cifsiostat _sysstat cinder _openstack ckeygen _twisted clang _gcc clang++ _gcc clay _clay clear _nothing cloudkitty _openstack cmp _cmp co _rcs comb _sccs combine _imagemagick combinediff _patchutils comm _comm command _command comp _mh compadd _compadd compdef _compdef composite _imagemagick compress _compress conch _twisted config.status _configure configure _configure convert _imagemagick coreadm _coreadm cowsay _cowsay cowthink _cowsay cp _cp cpio _cpio cplay _cplay cpupower _cpupower crsh _cssh cryptsetup _cryptsetup cscope _cscope csh _sh cssh _cssh csup _csup cu _cu curl _curl cut _cut cvs _cvs cvsup _cvsup cygcheck _cygcheck cygcheck.exe _cygcheck cygpath _cygpath cygpath.exe _cygpath cygrunsrv _cygrunsrv cygrunsrv.exe _cygrunsrv cygserver _cygserver cygserver.exe _cygserver cygstart _cygstart cygstart.exe _cygstart d _dirs dak _dak darcs _darcs date _date dbus-monitor _dbus dbus-send _dbus dch _debchange dchroot _dchroot dchroot-dsa _dchroot-dsa dcop _dcop dcopclient _dcop dcopfind _dcop dcopobject _dcop dcopref _dcop dcopstart _dcop dcut _dcut dd _dd debchange _debchange debcheckout _debcheckout debdiff _debdiff debfoster _debfoster debsign _debsign declare _typeset defaults _defaults delta _sccs designate _openstack devtodo _devtodo df _df dhclient _dhclient dhclient3 _dhclient dhcpinfo _dhcpinfo dict _dict diff _diff diffstat _diffstat dig _dig dillo _webbrowser dircmp _directories dirs _dirs disable _disable disown _jobs_fg display _imagemagick dist _mh django-admin _django django-admin.py _django dladm _dladm dlocate _dlocate dmake _make dmesg _dmesg dmidecode _dmidecode dnf _dnf dnf-2 _dnf dnf-3 _dnf doas _doas domainname _yp dosdel _floppy dosread _floppy dpatch-edit-patch _dpatch-edit-patch dpkg _dpkg dpkg-buildpackage _dpkg-buildpackage dpkg-cross _dpkg-cross dpkg-deb _dpkg dpkg-query _dpkg dpkg-reconfigure _dpkg dpkg-repack _dpkg-repack dpkg-source _dpkg_source dput _dput dsh _dsh dtrace _dtrace du _du dumpadm _dumpadm dumper _dumper dumper.exe _dumper dupload _dupload dvibook _dvi dviconcat _dvi dvicopy _dvi dvidvi _dvi dvipdf _dvi dvips _dvi dviselect _dvi dvitodvi _dvi dvitype _dvi dwb _webbrowser eatmydata _precommand ecasound _ecasound echotc _echotc echoti _echoti egrep _grep elfdump _elfdump elinks _elinks elm _elm emulate _emulate enable _enable enscript _enscript entr _entr env _env epdfview _pdf epsffit _psutils erb _ruby espeak _espeak etags _etags ethtool _ethtool eu-nm _nm eu-readelf _readelf eval _precommand eview _vim evim _vim evince _evince exec _precommand explodepkg _pkgtool export _typeset express _webbrowser extcheck _java extractres _psutils fakeroot _fakeroot false _nothing fc _fc fc-list _xft_fonts fc-match _xft_fonts feh _feh fetch _fetch fetchmail _fetchmail ffmpeg _ffmpeg fg _jobs_fg fgrep _grep figlet _figlet filterdiff _patchutils find _find findaffix _ispell finger _finger fink _fink firefox _mozilla fixdlsrps _psutils fixfmps _psutils fixmacps _psutils fixpsditps _psutils fixpspps _psutils fixscribeps _psutils fixtpps _psutils fixwfwps _psutils fixwpps _psutils fixwwps _psutils flasher _flasher flex _flex flex++ _flex flipdiff _patchutils flist _mh flists _mh float _typeset flowadm _flowadm fmadm _fmadm fmt _fmt fmttest _mh fned _zed fnext _mh folder _mh folders _mh fortune _fortune forw _mh fprev _mh freebsd-make _make freebsd-update _freebsd-update freezer _openstack fsh _fsh fstat _fstat ftp _hosts functions _typeset fuser _fuser fusermount _fusermount fw_update _fw_update fwhois _whois g++ _gcc galeon _webbrowser gawk _awk gbasename _basename gcc _gcc gccd _git gccgo _go gchmod _chmod gcmp _cmp gcomm _comm gcore _gcore gcp _cp gdate _date gdb _gdb gdiff _diff gdnolock _git gdu _du gdv _git gegrep _grep genisoimage _genisoimage get _sccs getafm _psutils getclip _getclip getclip.exe _getclip getconf _getconf getent _getent getfacl _getfacl getfacl.exe _getfacl getfattr _attr getmail _getmail getopts _vars gex _vim gfgrep _grep gfind _find ggf _git ggfl _git ggl _git ggp _git ggpnp _git ggrep _grep ggu _git ggv _gnome-gv ghostscript _gs ghostview _pspdf gid _id git _git git-buildpackage _git-buildpackage git-cvsserver _git git-receive-pack _git git-shell _git git-upload-archive _git git-upload-pack _git gitk _git gjoin _join glance _openstack gln _ln global _global glocate _locate gls _ls gm _graphicsmagick gmake _make gmd5sum _md5sum gmkdir _mkdir gmplayer _mplayer gnl _nl gnocchi _openstack gnome-gv _gnome-gv gnupod_INIT _gnupod gnupod_INIT.pl _gnupod gnupod_addsong _gnupod gnupod_addsong.pl _gnupod gnupod_check _gnupod gnupod_check.pl _gnupod gnupod_search _gnupod gnupod_search.pl _gnupod gnutls-cli _gnutls gnutls-cli-debug _gnutls god _od gofmt _go gpasswd _gpasswd gpatch _patch gpg _gpg gpg-zip _gpg gpg2 _gpg gpgv _gpg gphoto2 _gphoto2 gprof _gprof gqview _gqview gradle _gradle gradlew _gradle grail _webbrowser grep _grep grep-excuses _grep-excuses grepdiff _patchutils grm _rm groff _groff groupadd _user_admin groupdel _groups groupmod _user_admin groups _users growisofs _growisofs gs _gs gsbj _pspdf gsdj _pspdf gsdj500 _pspdf gsed _sed gsettings _gsettings gslj _pspdf gslp _pspdf gsnd _pspdf gsort _sort gstat _gstat gtar _tar gtouch _touch guilt _guilt guilt-add _guilt guilt-applied _guilt guilt-delete _guilt guilt-files _guilt guilt-fold _guilt guilt-fork _guilt guilt-header _guilt guilt-help _guilt guilt-import _guilt guilt-import-commit _guilt guilt-init _guilt guilt-new _guilt guilt-next _guilt guilt-patchbomb _guilt guilt-pop _guilt guilt-prev _guilt guilt-push _guilt guilt-rebase _guilt guilt-refresh _guilt guilt-rm _guilt guilt-series _guilt guilt-status _guilt guilt-top _guilt guilt-unapplied _guilt guniq _uniq gunzip _gzip gv _gv gview _vim gvim _vim gvimdiff _vim gwc _wc gwho _who gxargs _xargs gzcat _gzip gzegrep _grep gzfgrep _grep gzgrep _grep gzilla _webbrowser gzip _gzip hash _hash hdiutil _hdiutil head _head heat _openstack help _sccs hg _hg hilite _precommand history _fc host _hosts hostnamectl _hostnamectl hotjava _webbrowser htop _htop hwinfo _hwinfo iceweasel _mozilla icombine _ispell iconv _iconv iconvconfig _iconvconfig id _id identify _imagemagick ifconfig _ifconfig ifdown _net_interfaces iftop _iftop ifup _net_interfaces ijoin _ispell import _imagemagick inc _mh includeres _psutils inetadm _inetadm info _texinfo infocmp _terminals initctl _initctl insmod _modutils install-info _texinfo installpkg _pkgtool integer _typeset interdiff _patchutils invoke-rc.d _invoke-rc.d ionice _ionice iostat _iostat ip _ip ipadm _ipadm ipset _ipset iptables _iptables iptables-restore _iptables iptables-save _iptables irb _ruby ironic _openstack irssi _irssi isag _sysstat ispell _ispell iwconfig _iwconfig jadetex _tex jar _java jarsigner _java java _java javac _java javadoc _java javah _java javap _java jdb _java jexec _jexec jls _jls jobs _jobs_builtin joe _joe join _join jot _jot journalctl _journalctl kernel-install _kernel-install keystone _openstack keytool _java kfmclient _kfmclient kill _kill killall _killall killall5 _killall kioclient _kfmclient kldload _kld kldunload _kld knock _knock konqueror _webbrowser kpartx _kpartx kpdf _pdf ksh _sh kvno _kvno last _last lastb _last latex _tex latexmk _tex ldd _ldd less _less let _math lftp _ncftp lha _lha light _webbrowser lighty-disable-mod _lighttpd lighty-enable-mod _lighttpd limit _limit links _links lintian _lintian lintian-info _lintian linux _uml lldb _lldb llvm-g++ _gcc llvm-gcc _gcc ln _ln loadkeys _loadkeys local _typeset locale _locale localectl _localectl localedef _localedef locate _locate log _nothing loginctl _loginctl logname _nothing look _look lore _twisted losetup _losetup lp _lp lpadmin _lp lpinfo _lp lpoptions _lp lpq _lp lpr _lp lprm _lp lpstat _lp ls _ls lsblk _lsblk lscfg _lscfg lsdev _lsdev lsdiff _patchutils lslv _lslv lsmod _modutils lsof _lsof lspv _lspv lsusb _lsusb lsvg _lsvg ltrace _ltrace lynx _lynx lzcat _xz lzma _xz lzop _lzop m-a _module-assistant madison _madison magnum _openstack mail _mail mailx _mail make _make make-kpkg _make-kpkg makeinfo _texinfo makepkg _pkgtool man _man manage.py _django manhole _twisted manila _openstack mark _mh matlab _matlab mattrib _mtools mcd _mtools mcopy _mtools md5sum _md5sum mdadm _mdadm mdel _mtools mdeltree _mtools mdir _mtools mdu _mtools members _members mencal _mencal mere _mere merge _rcs mergechanges _mergechanges metaflac _metaflac mformat _mtools mgv _pspdf mhfixmsg _mh mhlist _mh mhmail _mh mhn _mh mhparam _mh mhpath _mh mhshow _mh mhstore _mh mii-tool _mii-tool mistral _openstack mixerctl _mixerctl mkdir _mkdir mkisofs _growisofs mkshortcut _mkshortcut mkshortcut.exe _mkshortcut mktunes _gnupod mktunes.pl _gnupod mkzsh _mkzsh mkzsh.exe _mkzsh mlabel _mtools mlocate _locate mmd _mtools mmm _webbrowser mmount _mtools mmove _mtools modinfo _modutils modprobe _modutils module _module module-assistant _module-assistant mogrify _imagemagick monasca _openstack mondoarchive _mondo montage _imagemagick moosic _moosic mosh _mosh mount _mount mozilla _mozilla mozilla-firefox _mozilla mozilla-xremote-client _mozilla mpc _mpc mplayer _mplayer mpstat _sysstat mrd _mtools mread _mtools mren _mtools msgchk _mh mt _mt mtn _monotone mtoolstest _mtools mtr _mtr mtype _mtools munchlist _ispell mupdf _pdf murano _openstack mush _mail mutt _mutt mx _hosts mysql _mysql_utils mysqladmin _mysql_utils mysqldiff _mysqldiff mysqldump _mysql_utils mysqlimport _mysql_utils mysqlshow _mysql_utils nail _mail native2ascii _java nautilus _nautilus nawk _awk nc _netcat ncal _cal ncftp _ncftp ncl _nedit nedit _nedit nedit-nc _nedit netcat _netcat netrik _webbrowser netscape _netscape netstat _netstat networkctl _networkctl neutron _openstack new _mh newgrp _groups next _mh ngrep _ngrep nice _nice nkf _nkf nl _nl nm _nm nmap _nmap nmblookup _samba nmcli _nmcli nocorrect _precommand noglob _precommand nohup _precommand notmuch _notmuch nova _openstack npm _npm ns _hosts nslookup _nslookup ntalk _other_accounts nvim _vim objdump _objdump od _od odme _object_classes odmget _object_classes odmshow _object_classes ogg123 _vorbis oggdec _vorbis oggenc _vorbis ogginfo _vorbis okular _okular omz _omz open _open openstack _openstack opera _webbrowser opera-next _webbrowser osc _osc p4 _perforce p4d _perforce pacat _pulseaudio pack _pack packf _mh pacmd _pulseaudio pactl _pulseaudio padsp _pulseaudio paplay _pulseaudio parec _pulseaudio parecord _pulseaudio parsehdlist _urpmi passwd _users paste _paste pasuspender _pulseaudio patch _patch pax _pax pbuilder _pbuilder pcat _pack pcred _pids pdf2dsc _pdf pdf2ps _pdf pdffonts _pdf pdfimages _pdf pdfinfo _pdf pdfjadetex _tex pdflatex _tex pdfopt _pdf pdftex _tex pdftexi2dvi _texinfo pdftk _pdftk pdftopbm _pdf pdftops _pdf pdftotext _pdf perl _perl perldoc _perldoc pfctl _pfctl pfexec _pfexec pfiles _pids pflags _pids pgrep _pgrep php _php pick _mh picocom _picocom pidof _pidof pidstat _sysstat pigz _gzip pine _pine pinef _pine ping _ping piuparts _piuparts pkg _pkg5 pkg-config _pkg-config pkg_add _bsd_pkg pkg_create _bsd_pkg pkg_delete _bsd_pkg pkg_info _bsd_pkg pkgadd _pkgadd pkginfo _pkginfo pkgrm _pkgrm pkgtool _pkgtool pkill _pgrep pldd _pids pmake _make pman _perl_modules pmap _pids pmcat _perl_modules pmdesc _perl_modules pmeth _perl_modules pmexp _perl_modules pmfunc _perl_modules pmload _perl_modules pmls _perl_modules pmpath _perl_modules pmvers _perl_modules podgrep _perl_modules podpath _perl_modules podtoc _perl_modules poff _pon policytool _java pon _pon popd _directory_stack portaudit _portaudit portlint _portlint portmaster _portmaster portsnap _portsnap postconf _postfix postqueue _postfix postsuper _postfix powerd _powerd prcs _prcs prev _mh print _print printenv _printenv printf _print procstat _procstat prompt _prompt prove _prove prs _sccs prstat _prstat prt _sccs prun _pids ps _ps ps2ascii _pspdf ps2epsi _postscript ps2pdf _postscript ps2pdf12 _postscript ps2pdf13 _postscript ps2pdf14 _postscript ps2pdfwr _postscript ps2ps _postscript psbook _psutils pscp _pscp pscp.exe _pscp psed _sed psig _pids psmerge _psutils psmulti _postscript psnup _psutils psresize _psutils psselect _psutils pstack _pids pstoedit _pspdf pstop _pids pstops _psutils pstotgif _pspdf pswrap _postscript ptree _ptree pulseaudio _pulseaudio pump _pump pushd _cd putclip _putclip putclip.exe _putclip pwait _pids pwdx _pids pyhtmlizer _twisted qdbus _qdbus qiv _qiv qtplay _qtplay querybts _bug quilt _quilt r _fc raggle _raggle rake _rake ranlib _ranlib rar _rar rc _sh rcctl _rcctl rcp _rlogin rcs _rcs rcsdiff _rcs rdesktop _rdesktop read _read readelf _readelf readonly _typeset readshortcut _readshortcut readshortcut.exe _readshortcut rebootin _rebootin refile _mh rehash _hash reload _initctl removepkg _pkgtool remsh _rlogin renice _renice repl _mh reportbug _bug reprepro _reprepro restart _initctl retawq _webbrowser rgview _vim rgvim _vim ri _ri rlogin _rlogin rm _rm rmadison _madison rmdel _sccs rmdir _directories rmf _mh rmic _java rmid _java rmiregistry _java rmm _mh rmmod _modutils route _route rpm _rpm rpmbuild _rpmbuild rrdtool _rrdtool rsh _rlogin rsync _rsync rtin _tin rubber _rubber rubber-info _rubber rubber-pipe _rubber ruby _ruby run-help _run-help rup _hosts rusage _precommand rview _vim rvim _vim rwho _hosts rxvt _urxvt s2p _sed sabcmd _sablotron sact _sccs sadf _sysstat sahara _openstack sar _sysstat savecore _savecore scan _mh sccs _sccs sccsdiff _sccs sched _sched schedtool _schedtool schroot _schroot scl _scl scp _ssh screen _screen script _script scriptreplay _script sed _sed senlin _openstack serialver _java service _service set _set setfacl _setfacl setfacl.exe _setfacl setfattr _attr setopt _setopt setsid _precommand setxkbmap _setxkbmap sftp _ssh sh _sh shift _arrays show _mh showchar _psutils showmount _showmount sisu _sisu skipstone _webbrowser slitex _tex slocate _locate slogin _ssh slrn _slrn smbclient _samba smbcontrol _samba smbstatus _samba smit _smit smitty _smit snap _snap snoop _snoop soa _hosts socket _socket sockstat _sockstat softwareupdate _softwareupdate sort _sort sortm _mh source _source spamassassin _spamassassin splitdiff _patchutils sqlite _sqlite sqlite3 _sqlite sqsh _sqsh sr _surfraw srptool _gnutls ss _ss ssh _ssh ssh-add _ssh ssh-agent _ssh ssh-copy-id _ssh ssh-keygen _ssh sshfs _sshfs star _tar start _initctl stat _stat status _initctl stg _stgit stop _initctl strace _strace strace64 _strace strftime _strftime strip _strip stty _stty su _su sudo _sudo sudoedit _sudo surfraw _surfraw sv _runit svcadm _svcadm svccfg _svccfg svcprop _svcprop svcs _svcs svn _subversion svn-buildpackage _svn-buildpackage svnadmin _subversion svnadmin-static _subversion swaks _swaks swift _swift swiftc _swift sync _nothing sysctl _sysctl sysrc _sysrc systat _systat system_profiler _system_profiler systemctl _systemctl systemd-analyze _systemd-analyze systemd-ask-password _systemd systemd-cat _systemd systemd-cgls _systemd systemd-cgtop _systemd systemd-delta _systemd-delta systemd-detect-virt _systemd systemd-inhibit _systemd-inhibit systemd-machine-id-setup _systemd systemd-notify _systemd systemd-resolve _systemd-resolve systemd-run _systemd-run systemd-tmpfiles _systemd-tmpfiles systemd-tty-ask-password-agent _systemd tacker _openstack tail _tail talk _other_accounts tap2deb _twisted tap2rpm _twisted tapconvert _twisted tar _tar tardy _tardy tcp_open _tcpsys tcpdump _tcpdump tcptraceroute _tcptraceroute tcsh _sh tda _devtodo tdd _devtodo tde _devtodo tdr _devtodo telnet _telnet tex _tex texi2any _texinfo texi2dvi _texinfo texi2pdf _texinfo texindex _texinfo tg _topgit tidy _tidy tig _git time _precommand timedatectl _timedatectl times _nothing tin _tin tkconch _twisted tkinfo _texinfo tla _tla tmux _tmux todo _devtodo todo.sh _todo.sh toilet _toilet top _top totdconfig _totd touch _touch tpb _tpb tpconfig _tpconfig tpkg-debarch _toolchain-source tpkg-install _toolchain-source tpkg-install-libc _toolchain-source tpkg-make _toolchain-source tpkg-update _toolchain-source tput _tput tr _tr tracepath _tracepath tracepath6 _tracepath traceroute _hosts trap _trap tree _tree trial _twisted trove _openstack true _nothing truss _truss tryaffix _ispell ttyctl _ttyctl tunctl _uml tune2fs _tune2fs tunes2pod _gnupod tunes2pod.pl _gnupod twidge _twidge twistd _twisted txt _hosts type _which typeset _typeset ubuntu-report _ubuntu-report udevadm _udevadm ulimit _ulimit uml_mconsole _uml uml_moo _uml uml_switch _uml umount _mount unace _unace unalias _aliases uname _uname uncompress _compress unexpand _unexpand unfunction _functions unget _sccs unhash _unhash uniq _uniq unison _unison units _units unlimit _limits unlzma _xz unpack _pack unpigz _gzip unrar _rar unset _vars unsetopt _setopt unwrapdiff _patchutils unxz _xz unzip _zip update-alternatives _update-alternatives update-rc.d _update-rc.d upgradepkg _pkgtool urpme _urpmi urpmf _urpmi urpmi _urpmi urpmi.addmedia _urpmi urpmi.removemedia _urpmi urpmi.update _urpmi urpmq _urpmi urxvt _urxvt urxvt256c _urxvt urxvt256c-ml _urxvt urxvt256c-mlc _urxvt urxvt256cc _urxvt urxvtc _urxvt uscan _uscan useradd _user_admin userdel _users usermod _user_admin uzbl _uzbl uzbl-browser _uzbl uzbl-tabbed _uzbl val _sccs valgrind _valgrind vared _vared vcsh _vcsh vim _vim vim-addons _vim-addons vimdiff _vim virsh _libvirt virt-admin _libvirt virt-host-validate _libvirt virt-pki-validate _libvirt virt-xml-validate _libvirt vitrage _openstack vmstat _vmstat vncserver _vnc vncviewer _vnc vorbiscomment _vorbiscomment vserver _vserver vux _vux vuxctl _vux w _w w3m _w3m wait _wait wajig _wajig wanna-build _wanna-build watch _watch watcher _openstack wc _wc wget _wget what _sccs whatis _man whence _which where _which whereis _whereis which _which who _who whoami _nothing whois _whois whom _mh wiggle _wiggle wodim _cdrecord wpa_cli _wpa_cli write _users_on www _webbrowser xargs _xargs xauth _xauth xautolock _xautolock xclip _xclip xdpyinfo _x_utils xdvi _xdvi xelatex _tex xetex _tex xev _x_utils xfd _x_utils xfig _xfig xfontsel _x_utils xfreerdp _rdesktop xhost _x_utils xkill _x_utils xli _xloadimage xloadimage _xloadimage xlsatoms _x_utils xlsclients _x_utils xmllint _xmlsoft xmms2 _xmms2 xmodmap _xmodmap xmosaic _webbrowser xon _x_utils xournal _xournal xpdf _xpdf xping _hosts xprop _x_utils xrandr _xrandr xrdb _x_utils xscreensaver-command _xscreensaver xset _xset xsetbg _xloadimage xsetroot _x_utils xsltproc _xmlsoft xterm _xterm xtightvncviewer _vnc xtp _imagemagick xv _xv xview _xloadimage xvnc4viewer _vnc xvncviewer _vnc xwd _x_utils xwininfo _x_utils xwit _xwit xwud _x_utils xxd _xxd xz _xz xzcat _xz yafc _yafc yast _yast yast2 _yast ypbind _yp ypcat _yp ypmatch _yp yppasswd _yp yppoll _yp yppush _yp ypserv _yp ypset _yp ypwhich _yp ypxfr _yp ytalk _other_accounts yum _yum zargs _zargs zathura _pspdf zcalc _zcalc zcat _zcat zcompile _zcompile zcp _zmv zdelattr _zattr zdump _zdump zed _zed zegrep _grep zen _webbrowser zf_chgrp _chown zf_chown _chown zf_ln _ln zf_mkdir _mkdir zf_rm _rm zf_rmdir _directories zfgrep _grep zfs _zfs zgetattr _zattr zgrep _grep zip _zip zipinfo _zip zle _zle zlistattr _zattr zln _zmv zlogin _zlogin zmail _mail zmodload _zmodload zmv _zmv zone _hosts zoneadm _zoneadm zpool _zpool zpty _zpty zsetattr _zattr zsh _zsh zsh-mime-handler _zsh-mime-handler zsocket _zsocket zstat _stat zstyle _zstyle ztodo _ztodo zun _openstack zxpdf _xpdf zypper _zypper )
typeset -a debian_missing_features=(  )
typeset -a dirstack=( /home/install )
typeset -A dis_aliases=( )
typeset -A dis_functions=( )
typeset -A dis_galiases=( )
typeset -A dis_saliases=( )
typeset -A FG=( 000 $'%{\C-[[38;5;000m%}' 001 $'%{\C-[[38;5;001m%}' 002 $'%{\C-[[38;5;002m%}' 003 $'%{\C-[[38;5;003m%}' 004 $'%{\C-[[38;5;004m%}' 005 $'%{\C-[[38;5;005m%}' 006 $'%{\C-[[38;5;006m%}' 007 $'%{\C-[[38;5;007m%}' 008 $'%{\C-[[38;5;008m%}' 009 $'%{\C-[[38;5;009m%}' 010 $'%{\C-[[38;5;010m%}' 011 $'%{\C-[[38;5;011m%}' 012 $'%{\C-[[38;5;012m%}' 013 $'%{\C-[[38;5;013m%}' 014 $'%{\C-[[38;5;014m%}' 015 $'%{\C-[[38;5;015m%}' 016 $'%{\C-[[38;5;016m%}' 017 $'%{\C-[[38;5;017m%}' 018 $'%{\C-[[38;5;018m%}' 019 $'%{\C-[[38;5;019m%}' 020 $'%{\C-[[38;5;020m%}' 021 $'%{\C-[[38;5;021m%}' 022 $'%{\C-[[38;5;022m%}' 023 $'%{\C-[[38;5;023m%}' 024 $'%{\C-[[38;5;024m%}' 025 $'%{\C-[[38;5;025m%}' 026 $'%{\C-[[38;5;026m%}' 027 $'%{\C-[[38;5;027m%}' 028 $'%{\C-[[38;5;028m%}' 029 $'%{\C-[[38;5;029m%}' 030 $'%{\C-[[38;5;030m%}' 031 $'%{\C-[[38;5;031m%}' 032 $'%{\C-[[38;5;032m%}' 033 $'%{\C-[[38;5;033m%}' 034 $'%{\C-[[38;5;034m%}' 035 $'%{\C-[[38;5;035m%}' 036 $'%{\C-[[38;5;036m%}' 037 $'%{\C-[[38;5;037m%}' 038 $'%{\C-[[38;5;038m%}' 039 $'%{\C-[[38;5;039m%}' 040 $'%{\C-[[38;5;040m%}' 041 $'%{\C-[[38;5;041m%}' 042 $'%{\C-[[38;5;042m%}' 043 $'%{\C-[[38;5;043m%}' 044 $'%{\C-[[38;5;044m%}' 045 $'%{\C-[[38;5;045m%}' 046 $'%{\C-[[38;5;046m%}' 047 $'%{\C-[[38;5;047m%}' 048 $'%{\C-[[38;5;048m%}' 049 $'%{\C-[[38;5;049m%}' 050 $'%{\C-[[38;5;050m%}' 051 $'%{\C-[[38;5;051m%}' 052 $'%{\C-[[38;5;052m%}' 053 $'%{\C-[[38;5;053m%}' 054 $'%{\C-[[38;5;054m%}' 055 $'%{\C-[[38;5;055m%}' 056 $'%{\C-[[38;5;056m%}' 057 $'%{\C-[[38;5;057m%}' 058 $'%{\C-[[38;5;058m%}' 059 $'%{\C-[[38;5;059m%}' 060 $'%{\C-[[38;5;060m%}' 061 $'%{\C-[[38;5;061m%}' 062 $'%{\C-[[38;5;062m%}' 063 $'%{\C-[[38;5;063m%}' 064 $'%{\C-[[38;5;064m%}' 065 $'%{\C-[[38;5;065m%}' 066 $'%{\C-[[38;5;066m%}' 067 $'%{\C-[[38;5;067m%}' 068 $'%{\C-[[38;5;068m%}' 069 $'%{\C-[[38;5;069m%}' 070 $'%{\C-[[38;5;070m%}' 071 $'%{\C-[[38;5;071m%}' 072 $'%{\C-[[38;5;072m%}' 073 $'%{\C-[[38;5;073m%}' 074 $'%{\C-[[38;5;074m%}' 075 $'%{\C-[[38;5;075m%}' 076 $'%{\C-[[38;5;076m%}' 077 $'%{\C-[[38;5;077m%}' 078 $'%{\C-[[38;5;078m%}' 079 $'%{\C-[[38;5;079m%}' 080 $'%{\C-[[38;5;080m%}' 081 $'%{\C-[[38;5;081m%}' 082 $'%{\C-[[38;5;082m%}' 083 $'%{\C-[[38;5;083m%}' 084 $'%{\C-[[38;5;084m%}' 085 $'%{\C-[[38;5;085m%}' 086 $'%{\C-[[38;5;086m%}' 087 $'%{\C-[[38;5;087m%}' 088 $'%{\C-[[38;5;088m%}' 089 $'%{\C-[[38;5;089m%}' 090 $'%{\C-[[38;5;090m%}' 091 $'%{\C-[[38;5;091m%}' 092 $'%{\C-[[38;5;092m%}' 093 $'%{\C-[[38;5;093m%}' 094 $'%{\C-[[38;5;094m%}' 095 $'%{\C-[[38;5;095m%}' 096 $'%{\C-[[38;5;096m%}' 097 $'%{\C-[[38;5;097m%}' 098 $'%{\C-[[38;5;098m%}' 099 $'%{\C-[[38;5;099m%}' 100 $'%{\C-[[38;5;100m%}' 101 $'%{\C-[[38;5;101m%}' 102 $'%{\C-[[38;5;102m%}' 103 $'%{\C-[[38;5;103m%}' 104 $'%{\C-[[38;5;104m%}' 105 $'%{\C-[[38;5;105m%}' 106 $'%{\C-[[38;5;106m%}' 107 $'%{\C-[[38;5;107m%}' 108 $'%{\C-[[38;5;108m%}' 109 $'%{\C-[[38;5;109m%}' 110 $'%{\C-[[38;5;110m%}' 111 $'%{\C-[[38;5;111m%}' 112 $'%{\C-[[38;5;112m%}' 113 $'%{\C-[[38;5;113m%}' 114 $'%{\C-[[38;5;114m%}' 115 $'%{\C-[[38;5;115m%}' 116 $'%{\C-[[38;5;116m%}' 117 $'%{\C-[[38;5;117m%}' 118 $'%{\C-[[38;5;118m%}' 119 $'%{\C-[[38;5;119m%}' 120 $'%{\C-[[38;5;120m%}' 121 $'%{\C-[[38;5;121m%}' 122 $'%{\C-[[38;5;122m%}' 123 $'%{\C-[[38;5;123m%}' 124 $'%{\C-[[38;5;124m%}' 125 $'%{\C-[[38;5;125m%}' 126 $'%{\C-[[38;5;126m%}' 127 $'%{\C-[[38;5;127m%}' 128 $'%{\C-[[38;5;128m%}' 129 $'%{\C-[[38;5;129m%}' 130 $'%{\C-[[38;5;130m%}' 131 $'%{\C-[[38;5;131m%}' 132 $'%{\C-[[38;5;132m%}' 133 $'%{\C-[[38;5;133m%}' 134 $'%{\C-[[38;5;134m%}' 135 $'%{\C-[[38;5;135m%}' 136 $'%{\C-[[38;5;136m%}' 137 $'%{\C-[[38;5;137m%}' 138 $'%{\C-[[38;5;138m%}' 139 $'%{\C-[[38;5;139m%}' 140 $'%{\C-[[38;5;140m%}' 141 $'%{\C-[[38;5;141m%}' 142 $'%{\C-[[38;5;142m%}' 143 $'%{\C-[[38;5;143m%}' 144 $'%{\C-[[38;5;144m%}' 145 $'%{\C-[[38;5;145m%}' 146 $'%{\C-[[38;5;146m%}' 147 $'%{\C-[[38;5;147m%}' 148 $'%{\C-[[38;5;148m%}' 149 $'%{\C-[[38;5;149m%}' 150 $'%{\C-[[38;5;150m%}' 151 $'%{\C-[[38;5;151m%}' 152 $'%{\C-[[38;5;152m%}' 153 $'%{\C-[[38;5;153m%}' 154 $'%{\C-[[38;5;154m%}' 155 $'%{\C-[[38;5;155m%}' 156 $'%{\C-[[38;5;156m%}' 157 $'%{\C-[[38;5;157m%}' 158 $'%{\C-[[38;5;158m%}' 159 $'%{\C-[[38;5;159m%}' 160 $'%{\C-[[38;5;160m%}' 161 $'%{\C-[[38;5;161m%}' 162 $'%{\C-[[38;5;162m%}' 163 $'%{\C-[[38;5;163m%}' 164 $'%{\C-[[38;5;164m%}' 165 $'%{\C-[[38;5;165m%}' 166 $'%{\C-[[38;5;166m%}' 167 $'%{\C-[[38;5;167m%}' 168 $'%{\C-[[38;5;168m%}' 169 $'%{\C-[[38;5;169m%}' 170 $'%{\C-[[38;5;170m%}' 171 $'%{\C-[[38;5;171m%}' 172 $'%{\C-[[38;5;172m%}' 173 $'%{\C-[[38;5;173m%}' 174 $'%{\C-[[38;5;174m%}' 175 $'%{\C-[[38;5;175m%}' 176 $'%{\C-[[38;5;176m%}' 177 $'%{\C-[[38;5;177m%}' 178 $'%{\C-[[38;5;178m%}' 179 $'%{\C-[[38;5;179m%}' 180 $'%{\C-[[38;5;180m%}' 181 $'%{\C-[[38;5;181m%}' 182 $'%{\C-[[38;5;182m%}' 183 $'%{\C-[[38;5;183m%}' 184 $'%{\C-[[38;5;184m%}' 185 $'%{\C-[[38;5;185m%}' 186 $'%{\C-[[38;5;186m%}' 187 $'%{\C-[[38;5;187m%}' 188 $'%{\C-[[38;5;188m%}' 189 $'%{\C-[[38;5;189m%}' 190 $'%{\C-[[38;5;190m%}' 191 $'%{\C-[[38;5;191m%}' 192 $'%{\C-[[38;5;192m%}' 193 $'%{\C-[[38;5;193m%}' 194 $'%{\C-[[38;5;194m%}' 195 $'%{\C-[[38;5;195m%}' 196 $'%{\C-[[38;5;196m%}' 197 $'%{\C-[[38;5;197m%}' 198 $'%{\C-[[38;5;198m%}' 199 $'%{\C-[[38;5;199m%}' 200 $'%{\C-[[38;5;200m%}' 201 $'%{\C-[[38;5;201m%}' 202 $'%{\C-[[38;5;202m%}' 203 $'%{\C-[[38;5;203m%}' 204 $'%{\C-[[38;5;204m%}' 205 $'%{\C-[[38;5;205m%}' 206 $'%{\C-[[38;5;206m%}' 207 $'%{\C-[[38;5;207m%}' 208 $'%{\C-[[38;5;208m%}' 209 $'%{\C-[[38;5;209m%}' 210 $'%{\C-[[38;5;210m%}' 211 $'%{\C-[[38;5;211m%}' 212 $'%{\C-[[38;5;212m%}' 213 $'%{\C-[[38;5;213m%}' 214 $'%{\C-[[38;5;214m%}' 215 $'%{\C-[[38;5;215m%}' 216 $'%{\C-[[38;5;216m%}' 217 $'%{\C-[[38;5;217m%}' 218 $'%{\C-[[38;5;218m%}' 219 $'%{\C-[[38;5;219m%}' 220 $'%{\C-[[38;5;220m%}' 221 $'%{\C-[[38;5;221m%}' 222 $'%{\C-[[38;5;222m%}' 223 $'%{\C-[[38;5;223m%}' 224 $'%{\C-[[38;5;224m%}' 225 $'%{\C-[[38;5;225m%}' 226 $'%{\C-[[38;5;226m%}' 227 $'%{\C-[[38;5;227m%}' 228 $'%{\C-[[38;5;228m%}' 229 $'%{\C-[[38;5;229m%}' 230 $'%{\C-[[38;5;230m%}' 231 $'%{\C-[[38;5;231m%}' 232 $'%{\C-[[38;5;232m%}' 233 $'%{\C-[[38;5;233m%}' 234 $'%{\C-[[38;5;234m%}' 235 $'%{\C-[[38;5;235m%}' 236 $'%{\C-[[38;5;236m%}' 237 $'%{\C-[[38;5;237m%}' 238 $'%{\C-[[38;5;238m%}' 239 $'%{\C-[[38;5;239m%}' 240 $'%{\C-[[38;5;240m%}' 241 $'%{\C-[[38;5;241m%}' 242 $'%{\C-[[38;5;242m%}' 243 $'%{\C-[[38;5;243m%}' 244 $'%{\C-[[38;5;244m%}' 245 $'%{\C-[[38;5;245m%}' 246 $'%{\C-[[38;5;246m%}' 247 $'%{\C-[[38;5;247m%}' 248 $'%{\C-[[38;5;248m%}' 249 $'%{\C-[[38;5;249m%}' 250 $'%{\C-[[38;5;250m%}' 251 $'%{\C-[[38;5;251m%}' 252 $'%{\C-[[38;5;252m%}' 253 $'%{\C-[[38;5;253m%}' 254 $'%{\C-[[38;5;254m%}' 255 $'%{\C-[[38;5;255m%}' )
typeset -A fg=( black $'\C-[[30m' blue $'\C-[[34m' cyan $'\C-[[36m' default $'\C-[[39m' green $'\C-[[32m' grey $'\C-[[30m' magenta $'\C-[[35m' red $'\C-[[31m' white $'\C-[[37m' yellow $'\C-[[33m' )
typeset -A fg_bold=( black $'\C-[[01;30m' blue $'\C-[[01;34m' cyan $'\C-[[01;36m' default $'\C-[[01;39m' green $'\C-[[01;32m' grey $'\C-[[01;30m' magenta $'\C-[[01;35m' red $'\C-[[01;31m' white $'\C-[[01;37m' yellow $'\C-[[01;33m' )
typeset -A fg_no_bold=( black $'\C-[[22;30m' blue $'\C-[[22;34m' cyan $'\C-[[22;36m' default $'\C-[[22;39m' green $'\C-[[22;32m' grey $'\C-[[22;30m' magenta $'\C-[[22;35m' red $'\C-[[22;31m' white $'\C-[[22;37m' yellow $'\C-[[22;33m' )
typeset -a fignore=(  )
typeset -a fpath=( /home/install/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting /home/install/.oh-my-zsh/plugins/git /home/install/.oh-my-zsh/functions /home/install/.oh-my-zsh/completions /home/install/.oh-my-zsh/cache/completions /usr/local/share/zsh/site-functions /usr/share/zsh/vendor-functions /usr/share/zsh/vendor-completions /usr/share/zsh/functions/Calendar /usr/share/zsh/functions/Chpwd /usr/share/zsh/functions/Completion /usr/share/zsh/functions/Completion/AIX /usr/share/zsh/functions/Completion/BSD /usr/share/zsh/functions/Completion/Base /usr/share/zsh/functions/Completion/Cygwin /usr/share/zsh/functions/Completion/Darwin /usr/share/zsh/functions/Completion/Debian /usr/share/zsh/functions/Completion/Linux /usr/share/zsh/functions/Completion/Mandriva /usr/share/zsh/functions/Completion/Redhat /usr/share/zsh/functions/Completion/Solaris /usr/share/zsh/functions/Completion/Unix /usr/share/zsh/functions/Completion/X /usr/share/zsh/functions/Completion/Zsh /usr/share/zsh/functions/Completion/openSUSE /usr/share/zsh/functions/Exceptions /usr/share/zsh/functions/MIME /usr/share/zsh/functions/Math /usr/share/zsh/functions/Misc /usr/share/zsh/functions/Newuser /usr/share/zsh/functions/Prompts /usr/share/zsh/functions/TCP /usr/share/zsh/functions/VCS_Info /usr/share/zsh/functions/VCS_Info/Backends /usr/share/zsh/functions/Zftp /usr/share/zsh/functions/Zle )
typeset -A functions=( _git_log_prettily $'\tif ! [ -z $1 ]\n\tthen\n\t\tgit log --pretty=$1\n\tfi' _x_colormapid 'builtin autoload -XU' _arg_compile 'builtin autoload -XU' _fuse_values 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-in-shell-word $'\t_zsh_highlight_call_widget .select-in-shell-word -- "$@"' _omz::pr::clean $'\t(\n\t\tset -e\n\t\tbuiltin cd -q "$ZSH"\n\t\tlocal fmt branches\n\t\tfmt="%(color:bold blue)%(align:18,right)%(refname:short)%(end)%(color:reset) %(color:dim bold red)%(objectname:short)%(color:reset) %(color:yellow)%(contents:subject)" \n\t\tbranches="$(command git for-each-ref --sort=-committerdate --color --format="$fmt" "refs/heads/ohmyzsh/pull-*")" \n\t\tif [[ -z "$branches" ]]\n\t\tthen\n\t\t\t_omz::log info "there are no Pull Request branches to remove."\n\t\t\treturn\n\t\tfi\n\t\techo "$branches\\n"\n\t\t_omz::confirm "do you want remove these Pull Request branches? [Y/n] "\n\t\t[[ "$REPLY" != [yY$\'\\n\'] ]] && return\n\t\t_omz::log info "removing all Oh My Zsh Pull Request branches..."\n\t\tcommand git branch --list \'ohmyzsh/pull-*\' | while read branch\n\t\tdo\n\t\t\tcommand git branch -D "$branch"\n\t\tdone\n\t)' _xset 'builtin autoload -XU' _gnu_generic 'builtin autoload -XU' _zsh_highlight_preexec_hook $'\ttypeset -g _ZSH_HIGHLIGHT_PRIOR_BUFFER= \n\ttypeset -gi _ZSH_HIGHLIGHT_PRIOR_CURSOR= ' _getclip 'builtin autoload -XU' _enscript 'builtin autoload -XU' _ispell 'builtin autoload -XU' _fetch 'builtin autoload -XU' _find_net_interfaces 'builtin autoload -XU' _omz_diag_dump_os_specific_version $'\tlocal osname osver version_file version_files\n\tcase "$OSTYPE" in\n\t\t(darwin*) osname=$(command sw_vers -productName) \n\t\t\tosver=$(command sw_vers -productVersion) \n\t\t\tbuiltin echo "OS Version: $osname $osver build $(sw_vers -buildVersion)" ;;\n\t\t(cygwin) command systeminfo | command head -n 4 | command tail -n 2 ;;\n\tesac\n\tif builtin which lsb_release > /dev/null\n\tthen\n\t\tbuiltin echo "OS Release: $(command lsb_release -s -d)"\n\tfi\n\tversion_files=(/etc/*-release(N) /etc/*-version(N) /etc/*_version(N)) \n\tfor version_file in $version_files\n\tdo\n\t\tbuiltin echo "$version_file:"\n\t\tcommand cat "$version_file"\n\t\tbuiltin echo\n\tdone' _zsh_highlight_widget_orig-s0.0000050000-r18109-visual-line-mode $'\t_zsh_highlight_call_widget .visual-line-mode -- "$@"' _zsh_highlight_load_highlighters $'\tsetopt localoptions noksharrays bareglobqual\n\t[[ -d "$1" ]] || {\n\t\tprint -r -- "zsh-syntax-highlighting: highlighters directory ${(qq)1} not found." >&2\n\t\treturn 1\n\t}\n\tlocal highlighter highlighter_dir\n\tfor highlighter_dir in $1/*/(/)\n\tdo\n\t\thighlighter="${highlighter_dir:t}" \n\t\t[[ -f "$highlighter_dir${highlighter}-highlighter.zsh" ]] && . "$highlighter_dir${highlighter}-highlighter.zsh"\n\t\tif type "_zsh_highlight_highlighter_${highlighter}_paint" &> /dev/null && type "_zsh_highlight_highlighter_${highlighter}_predicate" &> /dev/null\n\t\tthen\n\t\t\t\n\t\telif type "_zsh_highlight_${highlighter}_highlighter" &> /dev/null && type "_zsh_highlight_${highlighter}_highlighter_predicate" &> /dev/null\n\t\tthen\n\t\t\tif false\n\t\t\tthen\n\t\t\t\tprint -r -- "zsh-syntax-highlighting: warning: ${(qq)highlighter} highlighter uses deprecated entry point names; please ask its maintainer to update it: https://github.com/zsh-users/zsh-syntax-highlighting/issues/329" >&2\n\t\t\tfi\n\t\t\teval "_zsh_highlight_highlighter_${(q)highlighter}_paint() { _zsh_highlight_${(q)highlighter}_highlighter \\"\\$@\\" }"\n\t\t\teval "_zsh_highlight_highlighter_${(q)highlighter}_predicate() { _zsh_highlight_${(q)highlighter}_highlighter_predicate \\"\\$@\\" }"\n\t\telse\n\t\t\tprint -r -- "zsh-syntax-highlighting: ${(qq)highlighter} highlighter should define both required functions \'_zsh_highlight_highlighter_${highlighter}_paint\' and \'_zsh_highlight_highlighter_${highlighter}_predicate\' in ${(qq):-"$highlighter_dir${highlighter}-highlighter.zsh"}." >&2\n\t\tfi\n\tdone' _zsh_highlight_widget_orig-s0.0000050000-r18109-send-break $'\t_zsh_highlight_call_widget .send-break -- "$@"' _next_tags 'builtin autoload -XU' _darcs 'builtin autoload -XU' _bzr 'builtin autoload -XU' _xv 'builtin autoload -XU' _quilt 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-yank $'\t_zsh_highlight_call_widget .vi-yank -- "$@"' _xz 'builtin autoload -XU' _history_modifiers 'builtin autoload -XU' spectrum_bls $'\tsetopt localoptions nopromptsubst\n\tlocal ZSH_SPECTRUM_TEXT=${ZSH_SPECTRUM_TEXT:-Arma virumque cano Troiae qui primus ab oris} \n\tfor code in {000..255}\n\tdo\n\t\tprint -P -- "$code: ${BG[$code]}${ZSH_SPECTRUM_TEXT}%{$reset_color%}"\n\tdone' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-find-next-char $'\t_zsh_highlight_call_widget .vi-find-next-char -- "$@"' _ionice 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-list-choices $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-list-choices -- "$@"' _piuparts 'builtin autoload -XU' _zsh_highlight_main__precmd_hook $'\tsetopt localoptions\n\tif eval \'[[ -o warnnestedvar ]]\' 2> /dev/null\n\tthen\n\t\tunsetopt warnnestedvar\n\tfi\n\t_zsh_highlight_main__command_type_cache=() ' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-replace $'\t_zsh_highlight_call_widget .vi-replace -- "$@"' _espeak 'builtin autoload -XU' _nkf 'builtin autoload -XU' _svn-buildpackage 'builtin autoload -XU' _zsh_highlight_main__is_global_alias $'\tif zmodload -e zsh/parameter\n\tthen\n\t\t(( ${+galiases[$arg]} ))\n\telif [[ $arg == \'=\'* ]]\n\tthen\n\t\treturn 1\n\telse\n\t\talias -L -g -- "$1" > /dev/null\n\tfi' _zsh_highlight_cursor_moved $'\t[[ -n $CURSOR ]] && [[ -n ${_ZSH_HIGHLIGHT_PRIOR_CURSOR-} ]] && (($_ZSH_HIGHLIGHT_PRIOR_CURSOR != $CURSOR))' _dpatch-edit-patch 'builtin autoload -XU' _yp 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_expand_word $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_expand_word -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-goto-column $'\t_zsh_highlight_call_widget .vi-goto-column -- "$@"' _toilet 'builtin autoload -XU' git_commits_ahead $'\tif __git_prompt_git rev-parse --git-dir &> /dev/null\n\tthen\n\t\tlocal commits="$(__git_prompt_git rev-list --count @{upstream}..HEAD 2>/dev/null)" \n\t\tif [[ -n "$commits" && "$commits" != 0 ]]\n\t\tthen\n\t\t\techo "$ZSH_THEME_GIT_COMMITS_AHEAD_PREFIX$commits$ZSH_THEME_GIT_COMMITS_AHEAD_SUFFIX"\n\t\tfi\n\tfi' _omz::changelog $'\tlocal version=${1:-HEAD} format=${3:-"--text"} \n\tif (\n\t\t\tbuiltin cd -q "$ZSH"\n\t\t\t! command git show-ref --verify refs/heads/$version && ! command git show-ref --verify refs/tags/$version && ! command git rev-parse --verify "${version}^{commit}"\n\t\t) &> /dev/null\n\tthen\n\t\tcat >&2 <<EOF\nUsage: ${(j: :)${(s.::.)0#_}} [version]\n\nNOTE: <version> must be a valid branch, tag or commit.\nEOF\n\t\treturn 1\n\tfi\n\t"$ZSH/tools/changelog.sh" "$version" "${2:-}" "$format"' _psutils 'builtin autoload -XU' _zsh_highlight_main__resolve_alias $'\tif zmodload -e zsh/parameter\n\tthen\n\t\tREPLY=${aliases[$arg]} \n\telse\n\t\tREPLY="${"$(alias -- $arg)"#*=}" \n\tfi' _compadd 'builtin autoload -XU' _main_complete $'\tlocal IFS=$\' \\t\\n\\0\' \n\teval "$_comp_setup"\n\tlocal func funcs ret=1 tmp _compskip format nm call match min max i num _completers _completer _completer_num curtag _comp_force_list _matchers _matcher _c_matcher _matcher_num _comp_tags _comp_mesg mesg str context state state_descr line opt_args val_args curcontext="$curcontext" _last_nmatches=-1 _last_menu_style _def_menu_style _menu_style sel _tags_level=0 _saved_exact="${compstate[exact]}" _saved_lastprompt="${compstate[last_prompt]}" _saved_list="${compstate[list]}" _saved_insert="${compstate[insert]}" _saved_colors="$ZLS_COLORS" _saved_colors_set=${+ZLS_COLORS} _ambiguous_color=\'\' \n\tlocal _comp_priv_prefix\n\tunset _comp_priv_prefix\n\tlocal -a precommands\n\ttypeset -U _lastdescr _comp_ignore _comp_colors\n\t{\n\t\t[[ -z "$curcontext" ]] && curcontext=::: \n\t\tzstyle -s ":completion:${curcontext}:" insert-tab tmp || tmp=yes \n\t\tif [[ ( "$tmp" = *pending(|[[:blank:]]*) && PENDING -gt 0 ) || ( "$tmp" = *pending=(#b)([0-9]##)(|[[:blank:]]*) && PENDING -ge $match[1] ) ]]\n\t\tthen\n\t\t\tcompstate[insert]=tab \n\t\t\treturn 0\n\t\tfi\n\t\tif [[ "$compstate[insert]" = tab* ]]\n\t\tthen\n\t\t\tif [[ "$tmp" = (|*[[:blank:]])(yes|true|on|1)(|[[:blank:]]*) ]]\n\t\t\tthen\n\t\t\t\tif [[ "$curcontext" != :* || -z "$compstate[vared]" ]] || zstyle -t ":completion:vared${curcontext}:" insert-tab\n\t\t\t\tthen\n\t\t\t\t\treturn 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tcompstate[insert]="${compstate[insert]//tab /}" \n\t\tfi\n\t\tif [[ "$compstate[pattern_match]" = "*" && "$_lastcomp[unambiguous]" = "$PREFIX" && -n "$_lastcomp[unambiguous_cursor]" ]]\n\t\tthen\n\t\t\tinteger upos="$_lastcomp[unambiguous_cursor]" \n\t\t\tSUFFIX="$PREFIX[upos,-1]$SUFFIX" \n\t\t\tPREFIX="$PREFIX[1,upos-1]" \n\t\tfi\n\t\tif [[ -z "$compstate[quote]" ]]\n\t\tthen\n\t\t\tif [[ -o equals ]] && compset -P 1 \'=\'\n\t\t\tthen\n\t\t\t\tcompstate[context]=equal \n\t\t\telif [[ "$PREFIX" != */* && "$PREFIX[1]" = \'~\' ]]\n\t\t\tthen\n\t\t\t\tcompset -p 1\n\t\t\t\tcompstate[context]=tilde \n\t\t\tfi\n\t\tfi\n\t\t_setup default\n\t\t_def_menu_style=("$_last_menu_style[@]") \n\t\t_last_menu_style=() \n\t\tif zstyle -s ":completion:${curcontext}:default" list-prompt tmp\n\t\tthen\n\t\t\tLISTPROMPT="$tmp" \n\t\t\tzmodload -i zsh/complist\n\t\tfi\n\t\tif zstyle -s ":completion:${curcontext}:default" select-prompt tmp\n\t\tthen\n\t\t\tMENUPROMPT="$tmp" \n\t\t\tzmodload -i zsh/complist\n\t\tfi\n\t\tif zstyle -s ":completion:${curcontext}:default" select-scroll tmp\n\t\tthen\n\t\t\tMENUSCROLL="$tmp" \n\t\t\tzmodload -i zsh/complist\n\t\tfi\n\t\tif (( $# ))\n\t\tthen\n\t\t\tif [[ "$1" = - ]]\n\t\t\tthen\n\t\t\t\tif [[ $# -lt 3 ]]\n\t\t\t\tthen\n\t\t\t\t\t_completers=() \n\t\t\t\telse\n\t\t\t\t\t_completers=("$2") \n\t\t\t\t\tcall=yes \n\t\t\t\tfi\n\t\t\telse\n\t\t\t\t_completers=("$@") \n\t\t\tfi\n\t\telse\n\t\t\tzstyle -a ":completion:${curcontext}:" completer _completers || _completers=(_complete _ignored) \n\t\tfi\n\t\t_completer_num=1 \n\t\tinteger SECONDS=0 \n\t\tTRAPINT () {\n\t\t\tzle -M "Killed by signal in ${funcstack[2]} after ${SECONDS}s"\n\t\t\tzle -R\n\t\t\treturn 130\n\t\t}\n\t\tTRAPQUIT () {\n\t\t\tzle -M "Killed by signal in ${funcstack[2]} after ${SECONDS}s"\n\t\t\tzle -R\n\t\t\treturn 131\n\t\t}\n\t\tfuncs=("$compprefuncs[@]") \n\t\tcompprefuncs=() \n\t\tfor func in "$funcs[@]"\n\t\tdo\n\t\t\t"$func"\n\t\tdone\n\t\tfor tmp in "$_completers[@]"\n\t\tdo\n\t\t\tif [[ -n "$call" ]]\n\t\t\tthen\n\t\t\t\t_completer="${tmp}" \n\t\t\telif [[ "$tmp" = *:-* ]]\n\t\t\tthen\n\t\t\t\t_completer="${${tmp%:*}[2,-1]//_/-}${tmp#*:}" \n\t\t\t\ttmp="${tmp%:*}" \n\t\t\telif [[ $tmp = *:* ]]\n\t\t\tthen\n\t\t\t\t_completer="${tmp#*:}" \n\t\t\t\ttmp="${tmp%:*}" \n\t\t\telse\n\t\t\t\t_completer="${tmp[2,-1]//_/-}" \n\t\t\tfi\n\t\t\tcurcontext="${curcontext/:[^:]#:/:${_completer}:}" \n\t\t\tzstyle -t ":completion:${curcontext}:" show-completer && zle -R "Trying completion for :completion:${curcontext}"\n\t\t\tzstyle -a ":completion:${curcontext}:" matcher-list _matchers || _matchers=(\'\') \n\t\t\t_matcher_num=1 \n\t\t\t_matcher=\'\' \n\t\t\tfor _c_matcher in "$_matchers[@]"\n\t\t\tdo\n\t\t\t\tif [[ "$_c_matcher" == +* ]]\n\t\t\t\tthen\n\t\t\t\t\t_matcher="$_matcher $_c_matcher[2,-1]" \n\t\t\t\telse\n\t\t\t\t\t_matcher="$_c_matcher" \n\t\t\t\tfi\n\t\t\t\t_comp_mesg= \n\t\t\t\tif [[ -n "$call" ]]\n\t\t\t\tthen\n\t\t\t\t\tif "${(@)argv[3,-1]}"\n\t\t\t\t\tthen\n\t\t\t\t\t\tret=0 \n\t\t\t\t\t\tbreak 2\n\t\t\t\t\tfi\n\t\t\t\telif "$tmp"\n\t\t\t\tthen\n\t\t\t\t\tret=0 \n\t\t\t\t\tbreak 2\n\t\t\t\tfi\n\t\t\t\t(( _matcher_num++ ))\n\t\t\tdone\n\t\t\t[[ -n "$_comp_mesg" ]] && break\n\t\t\t(( _completer_num++ ))\n\t\tdone\n\t\tcurcontext="${curcontext/:[^:]#:/::}" \n\t\tif [[ $compstate[old_list] = keep ]]\n\t\tthen\n\t\t\tnm=$_lastcomp[nmatches] \n\t\telse\n\t\t\tnm=$compstate[nmatches] \n\t\tfi\n\t\tif [[ $compstate[old_list] = keep || nm -gt 1 ]]\n\t\tthen\n\t\t\t[[ _last_nmatches -ge 0 && _last_nmatches -ne nm ]] && _menu_style=("$_last_menu_style[@]" "$_menu_style[@]") \n\t\t\ttmp=$(( compstate[list_lines] + BUFFERLINES + 1 )) \n\t\t\t_menu_style=("$_menu_style[@]" "$_def_menu_style[@]") \n\t\t\tif [[ "$compstate[list]" = *list && tmp -gt LINES && ( -n "$_menu_style[(r)select=long-list]" || -n "$_menu_style[(r)(yes|true|on|1)=long-list]" ) ]]\n\t\t\tthen\n\t\t\t\tcompstate[insert]=menu \n\t\t\telif [[ "$compstate[insert]" = "$_saved_insert" ]]\n\t\t\tthen\n\t\t\t\tif [[ -n "$compstate[insert]" && -n "$_menu_style[(r)(yes|true|1|on)=long]" && tmp -gt LINES ]]\n\t\t\t\tthen\n\t\t\t\t\tcompstate[insert]=menu \n\t\t\t\telse\n\t\t\t\t\tsel=("${(@M)_menu_style:#(yes|true|1|on)*}") \n\t\t\t\t\tif (( $#sel ))\n\t\t\t\t\tthen\n\t\t\t\t\t\tmin=9999999 \n\t\t\t\t\t\tfor i in "$sel[@]"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [[ "$i" = *\\=[0-9]* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum="${i#*\\=}" \n\t\t\t\t\t\t\t\t[[ num -lt 0 ]] && num=0 \n\t\t\t\t\t\t\telif [[ "$i" != *\\=* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum=0 \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnum=9999999 \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t[[ num -lt min ]] && min="$num" \n\t\t\t\t\t\t\t(( min )) || break\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\tsel=("${(@M)_menu_style:#(no|false|0|off)*}") \n\t\t\t\t\tif (( $#sel ))\n\t\t\t\t\tthen\n\t\t\t\t\t\tmax=9999999 \n\t\t\t\t\t\tfor i in "$sel[@]"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [[ "$i" = *\\=[0-9]* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum="${i#*\\=}" \n\t\t\t\t\t\t\t\t[[ num -lt 0 ]] && num=0 \n\t\t\t\t\t\t\telif [[ "$i" != *\\=* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum=0 \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnum=9999999 \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t[[ num -lt max ]] && max="$num" \n\t\t\t\t\t\t\t(( max )) || break\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ ( -n "$min" && nm -ge min && ( -z "$max" || nm -lt max ) ) || ( -n "$_menu_style[(r)auto*]" && "$compstate[insert]" = automenu ) ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcompstate[insert]=menu \n\t\t\t\t\telif [[ -n "$max" && nm -ge max ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcompstate[insert]=unambiguous \n\t\t\t\t\telif [[ -n "$_menu_style[(r)auto*]" && "$compstate[insert]" != automenu ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcompstate[insert]=automenu-unambiguous \n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ "$compstate[insert]" = *menu* ]]\n\t\t\tthen\n\t\t\t\t[[ "$MENUSELECT" = 00 ]] && MENUSELECT=0 \n\t\t\t\tif [[ -n "$_menu_style[(r)no-select*]" ]]\n\t\t\t\tthen\n\t\t\t\t\tunset MENUSELECT\n\t\t\t\telif [[ -n "$_menu_style[(r)select=long*]" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ tmp -gt LINES ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tzmodload -i zsh/complist\n\t\t\t\t\t\tMENUSELECT=00 \n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ "$MENUSELECT" != 00 ]]\n\t\t\t\tthen\n\t\t\t\t\tsel=("${(@M)_menu_style:#select*}") \n\t\t\t\t\tif (( $#sel ))\n\t\t\t\t\tthen\n\t\t\t\t\t\tmin=9999999 \n\t\t\t\t\t\tfor i in "$sel[@]"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [[ "$i" = *\\=[0-9]* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum="${i#*\\=}" \n\t\t\t\t\t\t\t\t[[ num -lt 0 ]] && num=0 \n\t\t\t\t\t\t\telif [[ "$i" != *\\=* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnum=0 \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnum=9999999 \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t[[ num -lt min ]] && min="$num" \n\t\t\t\t\t\t\t(( min )) || break\n\t\t\t\t\t\tdone\n\t\t\t\t\t\tzmodload -i zsh/complist\n\t\t\t\t\t\tMENUSELECT="$min" \n\t\t\t\t\telse\n\t\t\t\t\t\tunset MENUSELECT\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ -n "$MENUSELECT" ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ -n "$_menu_style[(r)interactive*]" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tMENUMODE=interactive \n\t\t\t\t\telif [[ -n "$_menu_style[(r)search*]" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tif [[ -n "$_menu_style[(r)*backward*]" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tMENUMODE=search-backward \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tMENUMODE=search-forward \n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\tunset MENUMODE\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ nm -lt 1 && -n "$_comp_mesg" ]]\n\t\tthen\n\t\t\tcompstate[insert]=\'\' \n\t\t\tcompstate[list]=\'list force\' \n\t\telif [[ nm -eq 0 && -z "$_comp_mesg" && $#_lastdescr -ne 0 && $compstate[old_list] != keep ]] && zstyle -s ":completion:${curcontext}:warnings" format format\n\t\tthen\n\t\t\tcompstate[list]=\'list force\' \n\t\t\tcompstate[insert]=\'\' \n\t\t\ttmp=("\\`${(@)^_lastdescr:#}\'") \n\t\t\tcase $#tmp in\n\t\t\t\t(1) str="$tmp[1]"  ;;\n\t\t\t\t(2) str="$tmp[1] or $tmp[2]"  ;;\n\t\t\t\t(*) str="${(j:, :)tmp[1,-2]}, or $tmp[-1]"  ;;\n\t\t\tesac\n\t\t\t_setup warnings\n\t\t\tzformat -f mesg "$format" "d:$str" "D:${(F)${(@)_lastdescr:#}}"\n\t\t\tcompadd -x "$mesg"\n\t\tfi\n\t\tif [[ -n "$_ambiguous_color" ]]\n\t\tthen\n\t\t\tlocal toquote=\'[=\\(\\)\\|~^?*[\\]#<>]\' \n\t\t\tlocal prefix=${${compstate[unambiguous]}[1,${compstate[unambiguous_cursor]}-1]} \n\t\t\t[[ -n $prefix ]] && _comp_colors+=("=(#i)${prefix[1,-2]//?/(}${prefix[1,-2]//(#m)?/${MATCH/$~toquote/\\\\$MATCH}|)}${prefix[-1]//(#m)$~toquote/\\\\$MATCH}(#b)(?|)*==$_ambiguous_color") \n\t\tfi\n\t\t[[ "$_comp_force_list" = always || ( "$_comp_force_list" = ?* && nm -ge _comp_force_list ) ]] && compstate[list]="${compstate[list]//messages} force" \n\t} always {\n\t\tif [[ "$compstate[old_list]" = keep ]]\n\t\tthen\n\t\t\tif [[ $_saved_colors_set = 1 ]]\n\t\t\tthen\n\t\t\t\tZLS_COLORS="$_saved_colors" \n\t\t\telse\n\t\t\t\tunset ZLS_COLORS\n\t\t\tfi\n\t\telif (( $#_comp_colors ))\n\t\tthen\n\t\t\tZLS_COLORS="${(j.:.)_comp_colors}" \n\t\telse\n\t\t\tunset ZLS_COLORS\n\t\tfi\n\t}\n\tfuncs=("$comppostfuncs[@]") \n\tcomppostfuncs=() \n\tfor func in "$funcs[@]"\n\tdo\n\t\t"$func"\n\tdone\n\t_lastcomp=("${(@kv)compstate}") \n\t_lastcomp[nmatches]=$nm \n\t_lastcomp[completer]="$_completer" \n\t_lastcomp[prefix]="$PREFIX" \n\t_lastcomp[suffix]="$SUFFIX" \n\t_lastcomp[iprefix]="$IPREFIX" \n\t_lastcomp[isuffix]="$ISUFFIX" \n\t_lastcomp[qiprefix]="$QIPREFIX" \n\t_lastcomp[qisuffix]="$QISUFFIX" \n\t_lastcomp[tags]="$_comp_tags" \n\treturn ret' _generic 'builtin autoload -XU' _systemd-inhibit 'builtin autoload -XU' _uzbl 'builtin autoload -XU' _rpmbuild 'builtin autoload -XU' _webbrowser 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-beginning-of-history $'\t_zsh_highlight_call_widget .beginning-of-history -- "$@"' git_prompt_status $'\t[[ "$(__git_prompt_git config --get oh-my-zsh.hide-status 2>/dev/null)" = 1 ]] && return\n\tlocal -A prefix_constant_map\n\tprefix_constant_map=(\'\\?\\? \' \'UNTRACKED\' \'A  \' \'ADDED\' \'M  \' \'ADDED\' \'MM \' \'MODIFIED\' \' M \' \'MODIFIED\' \'AM \' \'MODIFIED\' \' T \' \'MODIFIED\' \'R  \' \'RENAMED\' \' D \' \'DELETED\' \'D  \' \'DELETED\' \'UU \' \'UNMERGED\' \'ahead\' \'AHEAD\' \'behind\' \'BEHIND\' \'diverged\' \'DIVERGED\' \'stashed\' \'STASHED\') \n\tlocal -A constant_prompt_map\n\tconstant_prompt_map=(\'UNTRACKED\' "$ZSH_THEME_GIT_PROMPT_UNTRACKED" \'ADDED\' "$ZSH_THEME_GIT_PROMPT_ADDED" \'MODIFIED\' "$ZSH_THEME_GIT_PROMPT_MODIFIED" \'RENAMED\' "$ZSH_THEME_GIT_PROMPT_RENAMED" \'DELETED\' "$ZSH_THEME_GIT_PROMPT_DELETED" \'UNMERGED\' "$ZSH_THEME_GIT_PROMPT_UNMERGED" \'AHEAD\' "$ZSH_THEME_GIT_PROMPT_AHEAD" \'BEHIND\' "$ZSH_THEME_GIT_PROMPT_BEHIND" \'DIVERGED\' "$ZSH_THEME_GIT_PROMPT_DIVERGED" \'STASHED\' "$ZSH_THEME_GIT_PROMPT_STASHED") \n\tlocal status_constants\n\tstatus_constants=(UNTRACKED ADDED MODIFIED RENAMED DELETED STASHED UNMERGED AHEAD BEHIND DIVERGED) \n\tlocal status_text\n\tstatus_text="$(__git_prompt_git status --porcelain -b 2> /dev/null)" \n\tif [[ $? -eq 128 ]]\n\tthen\n\t\treturn 1\n\tfi\n\tlocal -A statuses_seen\n\tif __git_prompt_git rev-parse --verify refs/stash &> /dev/null\n\tthen\n\t\tstatuses_seen[STASHED]=1 \n\tfi\n\tlocal status_lines\n\tstatus_lines=("${(@f)${status_text}}") \n\tif [[ "$status_lines[1]" =~ "^## [^ ]+ \\[(.*)\\]" ]]\n\tthen\n\t\tlocal branch_statuses\n\t\tbranch_statuses=("${(@s/,/)match}") \n\t\tfor branch_status in $branch_statuses\n\t\tdo\n\t\t\tif [[ ! $branch_status =~ "(behind|diverged|ahead) ([0-9]+)?" ]]\n\t\t\tthen\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tlocal last_parsed_status=$prefix_constant_map[$match[1]] \n\t\t\tstatuses_seen[$last_parsed_status]=$match[2] \n\t\tdone\n\tfi\n\tfor status_prefix in ${(k)prefix_constant_map}\n\tdo\n\t\tlocal status_constant="${prefix_constant_map[$status_prefix]}" \n\t\tlocal status_regex=$\'(^|\\n)\'"$status_prefix" \n\t\tif [[ "$status_text" =~ $status_regex ]]\n\t\tthen\n\t\t\tstatuses_seen[$status_constant]=1 \n\t\tfi\n\tdone\n\tlocal status_prompt\n\tfor status_constant in $status_constants\n\tdo\n\t\tif (( ${+statuses_seen[$status_constant]} ))\n\t\tthen\n\t\t\tlocal next_display=$constant_prompt_map[$status_constant] \n\t\t\tstatus_prompt="$next_display$status_prompt" \n\t\tfi\n\tdone\n\techo $status_prompt' git_commits_behind $'\tif __git_prompt_git rev-parse --git-dir &> /dev/null\n\tthen\n\t\tlocal commits="$(__git_prompt_git rev-list --count HEAD..@{upstream} 2>/dev/null)" \n\t\tif [[ -n "$commits" && "$commits" != 0 ]]\n\t\tthen\n\t\t\techo "$ZSH_THEME_GIT_COMMITS_BEHIND_PREFIX$commits$ZSH_THEME_GIT_COMMITS_BEHIND_SUFFIX"\n\t\tfi\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-overwrite-mode $'\t_zsh_highlight_call_widget .overwrite-mode -- "$@"' _moosic 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-repeat-find $'\t_zsh_highlight_call_widget .vi-repeat-find -- "$@"' _correct_word 'builtin autoload -XU' _busctl 'builtin autoload -XU' _bittorrent 'builtin autoload -XU' omz_urldecode $'\temulate -L zsh\n\tlocal encoded_url=$1 \n\tlocal caller_encoding=$langinfo[CODESET] \n\tlocal LC_ALL=C \n\texport LC_ALL\n\tlocal tmp=${encoded_url:gs/+/ /} \n\ttmp=${tmp:gs/\\\\/\\\\\\\\/} \n\ttmp=${tmp:gs/%/\\\\x/} \n\tlocal decoded="$(printf -- "$tmp")" \n\tlocal -a safe_encodings\n\tsafe_encodings=(UTF-8 utf8 US-ASCII) \n\tif [[ -z ${safe_encodings[(r)$caller_encoding]} ]]\n\tthen\n\t\tdecoded=$(echo -E "$decoded" | iconv -f UTF-8 -t $caller_encoding) \n\t\tif [[ $? != 0 ]]\n\t\tthen\n\t\t\techo "Error converting string from UTF-8 to $caller_encoding" >&2\n\t\t\treturn 1\n\t\tfi\n\tfi\n\techo -E "$decoded"' _dmesg 'builtin autoload -XU' has_typed_input $'\temulate -L zsh\n\tzmodload zsh/zselect\n\tlocal termios\n\ttermios=$(stty --save 2>/dev/null)  || return 1\n\t{\n\t\tstty -icanon\n\t\tzselect -t 0 -r 0\n\t\treturn $?\n\t} always {\n\t\tstty $termios\n\t}' _feh 'builtin autoload -XU' _dchroot-dsa 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-blank-word $'\t_zsh_highlight_call_widget .vi-backward-blank-word -- "$@"' _calendar 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_next_tags $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_next_tags -- "$@"' _command 'builtin autoload -XU' _netstat 'builtin autoload -XU' compinit 'builtin autoload -XU' d $'\tif [[ -n $1 ]]\n\tthen\n\t\tdirs "$@"\n\telse\n\t\tdirs -v | head -n 10\n\tfi' _systemctl 'builtin autoload -XU' _pax 'builtin autoload -XU' _zsh_highlight $'\tlocal ret=$? \n\ttypeset -r ret\n\t(( ${+region_highlight} )) || {\n\t\techo \'zsh-syntax-highlighting: error: $region_highlight is not defined\' >&2\n\t\techo \'zsh-syntax-highlighting: (Check whether zsh-syntax-highlighting was installed according to the instructions.)\' >&2\n\t\treturn $ret\n\t}\n\t(( ${+zsh_highlight__memo_feature} )) || {\n\t\tregion_highlight+=(" 0 0 fg=red, memo=zsh-syntax-highlighting") \n\t\tcase ${region_highlight[-1]} in\n\t\t\t("0 0 fg=red") integer -gr zsh_highlight__memo_feature=0  ;;\n\t\t\t("0 0 fg=red memo=zsh-syntax-highlighting") integer -gr zsh_highlight__memo_feature=1  ;;\n\t\t\t(" 0 0 fg=red, memo=zsh-syntax-highlighting")  ;&\n\t\t\t(*) if is-at-least 5.8.1.1 $ZSH_VERSION.0.0\n\t\t\t\tthen\n\t\t\t\t\tinteger -gr zsh_highlight__memo_feature=1 \n\t\t\t\telse\n\t\t\t\t\tinteger -gr zsh_highlight__memo_feature=0 \n\t\t\t\tfi ;;\n\t\tesac\n\t\tregion_highlight[-1]=() \n\t}\n\tif (( zsh_highlight__memo_feature ))\n\tthen\n\t\tregion_highlight=("${(@)region_highlight:#*memo=zsh-syntax-highlighting*}") \n\telse\n\t\tregion_highlight=() \n\tfi\n\tif [[ $WIDGET == zle-isearch-update ]] && {\n\t\t\t$zsh_highlight__pat_static_bug || ! (( $+ISEARCHMATCH_ACTIVE ))\n\t\t}\n\tthen\n\t\treturn $ret\n\tfi\n\tlocal -A zsyh_user_options\n\tif zmodload -e zsh/parameter\n\tthen\n\t\tzsyh_user_options=("${(kv)options[@]}") \n\telse\n\t\tlocal canonical_options onoff option raw_options\n\t\traw_options=(${(f)"$(emulate -R zsh; set -o)"}) \n\t\tcanonical_options=(${${${(M)raw_options:#*off}%% *}#no} ${${(M)raw_options:#*on}%% *}) \n\t\tfor option in "${canonical_options[@]}"\n\t\tdo\n\t\t\t[[ -o $option ]]\n\t\t\tcase $? in\n\t\t\t\t(0) zsyh_user_options+=($option on)  ;;\n\t\t\t\t(1) zsyh_user_options+=($option off)  ;;\n\t\t\t\t(*) echo "zsh-syntax-highlighting: warning: \'[[ -o $option ]]\' returned $?" ;;\n\t\t\tesac\n\t\tdone\n\tfi\n\ttypeset -r zsyh_user_options\n\temulate -L zsh\n\tsetopt localoptions warncreateglobal nobashrematch\n\tlocal REPLY\n\t[[ -n ${ZSH_HIGHLIGHT_MAXLENGTH:-} ]] && [[ $#BUFFER -gt $ZSH_HIGHLIGHT_MAXLENGTH ]] && return $ret\n\t(( KEYS_QUEUED_COUNT > 0 )) && return $ret\n\t(( PENDING > 0 )) && return $ret\n\t{\n\t\tlocal cache_place\n\t\tlocal -a region_highlight_copy\n\t\tlocal highlighter\n\t\tfor highlighter in $ZSH_HIGHLIGHT_HIGHLIGHTERS\n\t\tdo\n\t\t\tcache_place="_zsh_highlight__highlighter_${highlighter}_cache" \n\t\t\ttypeset -ga ${cache_place}\n\t\t\tif ! type "_zsh_highlight_highlighter_${highlighter}_predicate" >&/dev/null\n\t\t\tthen\n\t\t\t\techo "zsh-syntax-highlighting: warning: disabling the ${(qq)highlighter} highlighter as it has not been loaded" >&2\n\t\t\t\tZSH_HIGHLIGHT_HIGHLIGHTERS=(${ZSH_HIGHLIGHT_HIGHLIGHTERS:#${highlighter}}) \n\t\t\telif "_zsh_highlight_highlighter_${highlighter}_predicate"\n\t\t\tthen\n\t\t\t\tregion_highlight_copy=("${region_highlight[@]}") \n\t\t\t\tregion_highlight=() \n\t\t\t\t{\n\t\t\t\t\t"_zsh_highlight_highlighter_${highlighter}_paint"\n\t\t\t\t} always {\n\t\t\t\t\t: ${(AP)cache_place::="${region_highlight[@]}"}\n\t\t\t\t}\n\t\t\t\tregion_highlight=("${region_highlight_copy[@]}") \n\t\t\tfi\n\t\t\tregion_highlight+=("${(@P)cache_place}") \n\t\tdone\n\t\t() {\n\t\t\t(( REGION_ACTIVE )) || return\n\t\t\tinteger min max\n\t\t\tif (( MARK > CURSOR ))\n\t\t\tthen\n\t\t\t\tmin=$CURSOR max=$MARK \n\t\t\telse\n\t\t\t\tmin=$MARK max=$CURSOR \n\t\t\tfi\n\t\t\tif (( REGION_ACTIVE == 1 ))\n\t\t\tthen\n\t\t\t\t[[ $KEYMAP = vicmd ]] && (( max++ ))\n\t\t\telif (( REGION_ACTIVE == 2 ))\n\t\t\tthen\n\t\t\t\tlocal needle=$\'\\n\' \n\t\t\t\t(( min = ${BUFFER[(Ib:min:)$needle]} ))\n\t\t\t\t(( max = ${BUFFER[(ib:max:)$needle]} - 1 ))\n\t\t\tfi\n\t\t\t_zsh_highlight_apply_zle_highlight region standout "$min" "$max"\n\t\t}\n\t\t(( $+YANK_ACTIVE )) && (( YANK_ACTIVE )) && _zsh_highlight_apply_zle_highlight paste standout "$YANK_START" "$YANK_END"\n\t\t(( $+ISEARCHMATCH_ACTIVE )) && (( ISEARCHMATCH_ACTIVE )) && _zsh_highlight_apply_zle_highlight isearch underline "$ISEARCHMATCH_START" "$ISEARCHMATCH_END"\n\t\t(( $+SUFFIX_ACTIVE )) && (( SUFFIX_ACTIVE )) && _zsh_highlight_apply_zle_highlight suffix bold "$SUFFIX_START" "$SUFFIX_END"\n\t\treturn $ret\n\t} always {\n\t\ttypeset -g _ZSH_HIGHLIGHT_PRIOR_BUFFER="$BUFFER" \n\t\ttypeset -gi _ZSH_HIGHLIGHT_PRIOR_CURSOR=$CURSOR \n\t}' _omz::plugin::load $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <plugin> [...]" >&2\n\t\treturn 1\n\tfi\n\tlocal plugin base has_completion=0 \n\tfor plugin in "$@"\n\tdo\n\t\tif [[ -d "$ZSH_CUSTOM/plugins/$plugin" ]]\n\t\tthen\n\t\t\tbase="$ZSH_CUSTOM/plugins/$plugin" \n\t\telif [[ -d "$ZSH/plugins/$plugin" ]]\n\t\tthen\n\t\t\tbase="$ZSH/plugins/$plugin" \n\t\telse\n\t\t\t_omz::log warn "plugin \'$plugin\' not found"\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ ! -f "$base/_$plugin" && ! -f "$base/$plugin.plugin.zsh" ]]\n\t\tthen\n\t\t\t_omz::log warn "\'$plugin\' is not a valid plugin"\n\t\t\tcontinue\n\t\telif (( ! ${fpath[(Ie)$base]} ))\n\t\tthen\n\t\t\tfpath=("$base" $fpath) \n\t\tfi\n\t\tlocal -a comp_files\n\t\tcomp_files=($base/_*(N)) \n\t\thas_completion=$(( $#comp_files > 0 )) \n\t\tif [[ -f "$base/$plugin.plugin.zsh" ]]\n\t\tthen\n\t\t\tsource "$base/$plugin.plugin.zsh"\n\t\tfi\n\tdone\n\tif (( has_completion ))\n\tthen\n\t\tcompinit -D -d "$_comp_dumpfile"\n\tfi' _x_font 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-change-eol $'\t_zsh_highlight_call_widget .vi-change-eol -- "$@"' _subversion 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_most_recent_file $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_most_recent_file -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-find-prev-char $'\t_zsh_highlight_call_widget .vi-find-prev-char -- "$@"' _ccal 'builtin autoload -XU' _parameters $'\tlocal expl pattern fakes faked tmp pfilt\n\tif compset -P \'*:\'\n\tthen\n\t\t_history_modifiers p\n\t\treturn\n\tfi\n\tpattern=(-g \\*) \n\tzparseopts -D -K -E g:=pattern\n\tfakes=() \n\tfaked=() \n\tif zstyle -a ":completion:${curcontext}:" fake-parameters tmp\n\tthen\n\t\tfor i in "$tmp[@]"\n\t\tdo\n\t\t\tif [[ "$i" = *:* ]]\n\t\t\tthen\n\t\t\t\tfaked=("$faked[@]" "$i") \n\t\t\telse\n\t\t\t\tfakes=("$fakes[@]" "$i") \n\t\t\tfi\n\t\tdone\n\tfi\n\tzstyle -t ":completion:${curcontext}:parameters" prefix-needed && [[ $PREFIX != [_.]* ]] && pfilt=\'[^_.]\' \n\t_wanted parameters expl parameter compadd "$@" -Q - "${(@M)${(@k)parameters[(R)${pattern[2]}~*local*]}:#${~pfilt}*}" "$fakes[@]" "${(@)${(@M)faked:#${~pattern[2]}}%%:*}"' _menu 'builtin autoload -XU' _printenv 'builtin autoload -XU' omz_urlencode $'\temulate -L zsh\n\tlocal -a opts\n\tzparseopts -D -E -a opts r m P\n\tlocal in_str="$@" \n\tlocal url_str="" \n\tlocal spaces_as_plus\n\tif [[ -z $opts[(r)-P] ]]\n\tthen\n\t\tspaces_as_plus=1 \n\tfi\n\tlocal str="$in_str" \n\tlocal encoding=$langinfo[CODESET] \n\tlocal safe_encodings\n\tsafe_encodings=(UTF-8 utf8 US-ASCII) \n\tif [[ -z ${safe_encodings[(r)$encoding]} ]]\n\tthen\n\t\tstr=$(echo -E "$str" | iconv -f $encoding -t UTF-8) \n\t\tif [[ $? != 0 ]]\n\t\tthen\n\t\t\techo "Error converting string from $encoding to UTF-8" >&2\n\t\t\treturn 1\n\t\tfi\n\tfi\n\tlocal i byte ord LC_ALL=C \n\texport LC_ALL\n\tlocal reserved=\';/?:@&=+$,\' \n\tlocal mark=\'_.!~*\'\'()-\' \n\tlocal dont_escape="[A-Za-z0-9" \n\tif [[ -z $opts[(r)-r] ]]\n\tthen\n\t\tdont_escape+=$reserved \n\tfi\n\tif [[ -z $opts[(r)-m] ]]\n\tthen\n\t\tdont_escape+=$mark \n\tfi\n\tdont_escape+="]" \n\tlocal url_str="" \n\tfor ((i = 1; i <= ${#str}; ++i )) do\n\t\tbyte="$str[i]" \n\t\tif [[ "$byte" =~ "$dont_escape" ]]\n\t\tthen\n\t\t\turl_str+="$byte" \n\t\telse\n\t\t\tif [[ "$byte" == " " && -n $spaces_as_plus ]]\n\t\t\tthen\n\t\t\t\turl_str+="+" \n\t\t\telse\n\t\t\t\tord=$(( [##16] #byte )) \n\t\t\t\turl_str+="%$ord" \n\t\t\tfi\n\t\tfi\n\tdone\n\techo -E "$url_str"' _zsh_highlight_highlighter_brackets_predicate $'\t[[ $WIDGET == zle-line-finish ]] || _zsh_highlight_cursor_moved || _zsh_highlight_buffer_modified' _zsh_highlight_widget_orig-s0.0000050000-r18109-read-command $'\t_zsh_highlight_call_widget .read-command -- "$@"' _mplayer 'builtin autoload -XU' _omz_diag_dump_echo_file_w_header $'\tlocal file=$1 \n\tif [[ -f $file || -h $file ]]\n\tthen\n\t\tbuiltin echo "========== $file =========="\n\t\tif [[ -h $file ]]\n\t\tthen\n\t\t\tbuiltin echo "==========    ( => ${file:A} )   =========="\n\t\tfi\n\t\tcommand cat $file\n\t\tbuiltin echo "========== end $file =========="\n\t\tbuiltin echo\n\telif [[ -d $file ]]\n\tthen\n\t\tbuiltin echo "File \'$file\' is a directory"\n\telif [[ ! -e $file ]]\n\tthen\n\t\tbuiltin echo "File \'$file\' does not exist"\n\telse\n\t\tcommand ls -lad "$file"\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-char $'\t_zsh_highlight_call_widget .backward-char -- "$@"' _complete_help_generic 'builtin autoload -XU' _lldb 'builtin autoload -XU' _pbm 'builtin autoload -XU' _groups 'builtin autoload -XU' _cygcheck 'builtin autoload -XU' _describe 'builtin autoload -XU' _vux 'builtin autoload -XU' clipcopy $'\t_retry_clipboard_detection_or_fail clipcopy "$@"' _deb_packages 'builtin autoload -XU' _read_comp 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_backtick $'\tlocal buf highlight style=back-quoted-argument-unclosed style_end \n\tlocal -i arg1=$1 end_ i=$1 last offset=0 start subshell_has_end=0 \n\tlocal -a highlight_zone highlights offsets\n\treply=() \n\tlast=$(( arg1 + 1 )) \n\twhile i=$arg[(ib:i+1:)[\\\\\\\\\\`]] \n\tdo\n\t\tif (( i > $#arg ))\n\t\tthen\n\t\t\tbuf=$buf$arg[last,i] \n\t\t\toffsets[i-arg1-offset]=\'\' \n\t\t\t(( i-- ))\n\t\t\tsubshell_has_end=$(( has_end && (start_pos + i == len) )) \n\t\t\tbreak\n\t\tfi\n\t\tif [[ $arg[i] == \'\\\' ]]\n\t\tthen\n\t\t\t(( i++ ))\n\t\t\tif [[ $arg[i] == (\'$\'|\'`\'|\'\\\') ]]\n\t\t\tthen\n\t\t\t\tbuf=$buf$arg[last,i-2] \n\t\t\t\t(( offset++ ))\n\t\t\t\toffsets[i-arg1-offset]=$offset \n\t\t\telse\n\t\t\t\tbuf=$buf$arg[last,i-1] \n\t\t\tfi\n\t\telse\n\t\t\tstyle=back-quoted-argument \n\t\t\tstyle_end=back-quoted-argument-delimiter \n\t\t\tbuf=$buf$arg[last,i-1] \n\t\t\toffsets[i-arg1-offset]=\'\' \n\t\t\tbreak\n\t\tfi\n\t\tlast=$i \n\tdone\n\t_zsh_highlight_main_highlighter_highlight_list 0 \'\' $subshell_has_end $buf\n\tfor start end_ highlight in $reply\n\tdo\n\t\tstart=$(( start_pos + arg1 + start + offsets[(Rb:start:)?*] )) \n\t\tend_=$(( start_pos + arg1 + end_ + offsets[(Rb:end_:)?*] )) \n\t\thighlights+=($start $end_ $highlight) \n\t\tif [[ $highlight == back-quoted-argument-unclosed && $style == back-quoted-argument ]]\n\t\tthen\n\t\t\tstyle_end=unknown-token \n\t\tfi\n\tdone\n\treply=($(( start_pos + arg1 - 1 )) $(( start_pos + i )) $style $(( start_pos + arg1 - 1 )) $(( start_pos + arg1 )) back-quoted-argument-delimiter $highlights) \n\tif (( $#style_end ))\n\tthen\n\t\treply+=($(( start_pos + i - 1)) $(( start_pos + i )) $style_end) \n\tfi\n\tREPLY=$i ' _cygpath 'builtin autoload -XU' _vim-addons 'builtin autoload -XU' _dirs 'builtin autoload -XU' _redirect 'builtin autoload -XU' _combination 'builtin autoload -XU' _wait 'builtin autoload -XU' _omz_diag_dump_check_core_commands $'\tbuiltin echo "Core command check:"\n\tlocal redefined name builtins externals reserved_words\n\tredefined=() \n\treserved_words=(do done esac then elif else fi for case if while function repeat time until select coproc nocorrect foreach end \'!\' \'[[\' \'{\' \'}\') \n\tbuiltins=(alias autoload bg bindkey break builtin bye cd chdir command comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues continue dirs disable disown echo echotc echoti emulate enable eval exec exit false fc fg functions getln getopts hash jobs kill let limit log logout noglob popd print printf pushd pushln pwd r read rehash return sched set setopt shift source suspend test times trap true ttyctl type ulimit umask unalias unfunction unhash unlimit unset unsetopt vared wait whence where which zcompile zle zmodload zparseopts zregexparse zstyle) \n\tif is-at-least 5.1\n\tthen\n\t\treserved_word+=(declare export integer float local readonly typeset) \n\telse\n\t\tbuiltins+=(declare export integer float local readonly typeset) \n\tfi\n\tbuiltins_fatal=(builtin command local) \n\texternals=(zsh) \n\tfor name in $reserved_words\n\tdo\n\t\tif [[ $(builtin whence -w $name) != "$name: reserved" ]]\n\t\tthen\n\t\t\tbuiltin echo "reserved word \'$name\' has been redefined"\n\t\t\tbuiltin which $name\n\t\t\tredefined+=$name \n\t\tfi\n\tdone\n\tfor name in $builtins\n\tdo\n\t\tif [[ $(builtin whence -w $name) != "$name: builtin" ]]\n\t\tthen\n\t\t\tbuiltin echo "builtin \'$name\' has been redefined"\n\t\t\tbuiltin which $name\n\t\t\tredefined+=$name \n\t\tfi\n\tdone\n\tfor name in $externals\n\tdo\n\t\tif [[ $(builtin whence -w $name) != "$name: command" ]]\n\t\tthen\n\t\t\tbuiltin echo "command \'$name\' has been redefined"\n\t\t\tbuiltin which $name\n\t\t\tredefined+=$name \n\t\tfi\n\tdone\n\tif [[ -n "$redefined" ]]\n\tthen\n\t\tbuiltin echo "SOME CORE COMMANDS HAVE BEEN REDEFINED: $redefined"\n\telse\n\t\tbuiltin echo "All core commands are defined normally"\n\tfi' _bootctl 'builtin autoload -XU' _read 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_correct_word $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_correct_word -- "$@"' compdef $'\tlocal opt autol type func delete eval new i ret=0 cmd svc \n\tlocal -a match mbegin mend\n\temulate -L zsh\n\tsetopt extendedglob\n\tif (( ! $# ))\n\tthen\n\t\tprint -u2 "$0: I need arguments"\n\t\treturn 1\n\tfi\n\twhile getopts "anpPkKde" opt\n\tdo\n\t\tcase "$opt" in\n\t\t\t(a) autol=yes  ;;\n\t\t\t(n) new=yes  ;;\n\t\t\t([pPkK]) if [[ -n "$type" ]]\n\t\t\t\tthen\n\t\t\t\t\tprint -u2 "$0: type already set to $type"\n\t\t\t\t\treturn 1\n\t\t\t\tfi\n\t\t\t\tif [[ "$opt" = p ]]\n\t\t\t\tthen\n\t\t\t\t\ttype=pattern \n\t\t\t\telif [[ "$opt" = P ]]\n\t\t\t\tthen\n\t\t\t\t\ttype=postpattern \n\t\t\t\telif [[ "$opt" = K ]]\n\t\t\t\tthen\n\t\t\t\t\ttype=widgetkey \n\t\t\t\telse\n\t\t\t\t\ttype=key \n\t\t\t\tfi ;;\n\t\t\t(d) delete=yes  ;;\n\t\t\t(e) eval=yes  ;;\n\t\tesac\n\tdone\n\tshift OPTIND-1\n\tif (( ! $# ))\n\tthen\n\t\tprint -u2 "$0: I need arguments"\n\t\treturn 1\n\tfi\n\tif [[ -z "$delete" ]]\n\tthen\n\t\tif [[ -z "$eval" ]] && [[ "$1" = *\\=* ]]\n\t\tthen\n\t\t\twhile (( $# ))\n\t\t\tdo\n\t\t\t\tif [[ "$1" = *\\=* ]]\n\t\t\t\tthen\n\t\t\t\t\tcmd="${1%%\\=*}" \n\t\t\t\t\tsvc="${1#*\\=}" \n\t\t\t\t\tfunc="$_comps[${_services[(r)$svc]:-$svc}]" \n\t\t\t\t\t[[ -n ${_services[$svc]} ]] && svc=${_services[$svc]} \n\t\t\t\t\t[[ -z "$func" ]] && func="${${_patcomps[(K)$svc][1]}:-${_postpatcomps[(K)$svc][1]}}" \n\t\t\t\t\tif [[ -n "$func" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\t_comps[$cmd]="$func" \n\t\t\t\t\t\t_services[$cmd]="$svc" \n\t\t\t\t\telse\n\t\t\t\t\t\tprint -u2 "$0: unknown command or service: $svc"\n\t\t\t\t\t\tret=1 \n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tprint -u2 "$0: invalid argument: $1"\n\t\t\t\t\tret=1 \n\t\t\t\tfi\n\t\t\t\tshift\n\t\t\tdone\n\t\t\treturn ret\n\t\tfi\n\t\tfunc="$1" \n\t\t[[ -n "$autol" ]] && autoload -Uz "$func"\n\t\tshift\n\t\tcase "$type" in\n\t\t\t(widgetkey) while [[ -n $1 ]]\n\t\t\t\tdo\n\t\t\t\t\tif [[ $# -lt 3 ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tprint -u2 "$0: compdef -K requires <widget> <comp-widget> <key>"\n\t\t\t\t\t\treturn 1\n\t\t\t\t\tfi\n\t\t\t\t\t[[ $1 = _* ]] || 1="_$1" \n\t\t\t\t\t[[ $2 = .* ]] || 2=".$2" \n\t\t\t\t\t[[ $2 = .menu-select ]] && zmodload -i zsh/complist\n\t\t\t\t\tzle -C "$1" "$2" "$func"\n\t\t\t\t\tif [[ -n $new ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbindkey "$3" | IFS=$\' \\t\' read -A opt\n\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] && bindkey "$3" "$1"\n\t\t\t\t\telse\n\t\t\t\t\t\tbindkey "$3" "$1"\n\t\t\t\t\tfi\n\t\t\t\t\tshift 3\n\t\t\t\tdone ;;\n\t\t\t(key) if [[ $# -lt 2 ]]\n\t\t\t\tthen\n\t\t\t\t\tprint -u2 "$0: missing keys"\n\t\t\t\t\treturn 1\n\t\t\t\tfi\n\t\t\t\tif [[ $1 = .* ]]\n\t\t\t\tthen\n\t\t\t\t\t[[ $1 = .menu-select ]] && zmodload -i zsh/complist\n\t\t\t\t\tzle -C "$func" "$1" "$func"\n\t\t\t\telse\n\t\t\t\t\t[[ $1 = menu-select ]] && zmodload -i zsh/complist\n\t\t\t\t\tzle -C "$func" ".$1" "$func"\n\t\t\t\tfi\n\t\t\t\tshift\n\t\t\t\tfor i\n\t\t\t\tdo\n\t\t\t\t\tif [[ -n $new ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbindkey "$i" | IFS=$\' \\t\' read -A opt\n\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] || continue\n\t\t\t\t\tfi\n\t\t\t\t\tbindkey "$i" "$func"\n\t\t\t\tdone ;;\n\t\t\t(*) while (( $# ))\n\t\t\t\tdo\n\t\t\t\t\tif [[ "$1" = -N ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttype=normal \n\t\t\t\t\telif [[ "$1" = -p ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttype=pattern \n\t\t\t\t\telif [[ "$1" = -P ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttype=postpattern \n\t\t\t\t\telse\n\t\t\t\t\t\tcase "$type" in\n\t\t\t\t\t\t\t(pattern) if [[ $1 = (#b)(*)=(*) ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t_patcomps[$match[1]]="=$match[2]=$func" \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t_patcomps[$1]="$func" \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\t\t(postpattern) if [[ $1 = (#b)(*)=(*) ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t_postpatcomps[$match[1]]="=$match[2]=$func" \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t_postpatcomps[$1]="$func" \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\t\t(*) if [[ "$1" = *\\=* ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tcmd="${1%%\\=*}" \n\t\t\t\t\t\t\t\t\tsvc=yes \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tcmd="$1" \n\t\t\t\t\t\t\t\t\tsvc= \n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\tif [[ -z "$new" || -z "${_comps[$1]}" ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t_comps[$cmd]="$func" \n\t\t\t\t\t\t\t\t\t[[ -n "$svc" ]] && _services[$cmd]="${1#*\\=}" \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tfi\n\t\t\t\t\tshift\n\t\t\t\tdone ;;\n\t\tesac\n\telse\n\t\tcase "$type" in\n\t\t\t(pattern) unset "_patcomps[$^@]" ;;\n\t\t\t(postpattern) unset "_postpatcomps[$^@]" ;;\n\t\t\t(key) print -u2 "$0: cannot restore key bindings"\n\t\t\t\treturn 1 ;;\n\t\t\t(*) unset "_comps[$^@]" ;;\n\t\tesac\n\tfi' _dsh 'builtin autoload -XU' _acroread 'builtin autoload -XU' _apachectl 'builtin autoload -XU' _print 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_list $'\tinteger start_pos end_pos=0 buf_offset=$1 has_end=$3 \n\tlocal alias_style param_style last_arg arg buf=$4 highlight_glob=true saw_assignment=false style \n\tlocal in_array_assignment=false \n\tinteger in_param=0 len=$#buf \n\tlocal -a in_alias match mbegin mend list_highlights\n\tlocal -A seen_alias\n\treadonly parameter_name_pattern=\'([A-Za-z_][A-Za-z0-9_]*|[0-9]+)\' \n\tlist_highlights=() \n\tlocal braces_stack=$2 \n\tlocal this_word next_word=\':start::start_of_pipeline:\' \n\tinteger in_redirection\n\tlocal proc_buf="$buf" \n\tlocal -a args\n\tif [[ $zsyh_user_options[interactivecomments] == on ]]\n\tthen\n\t\targs=(${(zZ+c+)buf}) \n\telse\n\t\targs=(${(z)buf}) \n\tfi\n\tif [[ $braces_stack == \'S\' ]] && (( $+args[3] && ! $+args[4] )) && [[ $args[3] == $\'\\x29\' ]] && [[ $args[1] == *\'<\'* ]] && _zsh_highlight_main__is_redirection $args[1]\n\tthen\n\t\thighlight_glob=false \n\tfi\n\twhile (( $#args ))\n\tdo\n\t\tlast_arg=$arg \n\t\targ=$args[1] \n\t\tshift args\n\t\tif (( $#in_alias ))\n\t\tthen\n\t\t\t(( in_alias[1]-- ))\n\t\t\tin_alias=($in_alias[$in_alias[(i)<1->],-1]) \n\t\t\tif (( $#in_alias == 0 ))\n\t\t\tthen\n\t\t\t\tseen_alias=() \n\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos $alias_style\n\t\t\telse\n\t\t\t\t() {\n\t\t\t\t\tlocal alias_name\n\t\t\t\t\tfor alias_name in ${(k)seen_alias[(R)<$#in_alias->]}\n\t\t\t\t\tdo\n\t\t\t\t\t\tseen_alias=("${(@kv)seen_alias[(I)^$alias_name]}") \n\t\t\t\t\tdone\n\t\t\t\t}\n\t\t\tfi\n\t\tfi\n\t\tif (( in_param ))\n\t\tthen\n\t\t\t(( in_param-- ))\n\t\t\tif (( in_param == 0 ))\n\t\t\tthen\n\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos $param_style\n\t\t\t\tparam_style="" \n\t\t\tfi\n\t\tfi\n\t\tif (( in_redirection == 0 ))\n\t\tthen\n\t\t\tthis_word=$next_word \n\t\t\tnext_word=\':regular:\' \n\t\telif (( !in_param ))\n\t\tthen\n\t\t\t(( --in_redirection ))\n\t\tfi\n\t\tstyle=unknown-token \n\t\tif [[ $this_word == *\':start:\'* ]]\n\t\tthen\n\t\t\tin_array_assignment=false \n\t\t\tif [[ $arg == \'noglob\' ]]\n\t\t\tthen\n\t\t\t\thighlight_glob=false \n\t\t\tfi\n\t\tfi\n\t\tif (( $#in_alias == 0 && in_param == 0 ))\n\t\tthen\n\t\t\t[[ "$proc_buf" = (#b)(#s)(\'\'([ $\'\\t\']|[\\\\]$\'\\n\')#)(?|)* ]]\n\t\t\tinteger offset="${#match[1]}" \n\t\t\t(( start_pos = end_pos + offset ))\n\t\t\t(( end_pos = start_pos + $#arg ))\n\t\t\t[[ $arg == \';\' && ${match[3]} == $\'\\n\' ]] && arg=$\'\\n\' \n\t\t\tproc_buf="${proc_buf[offset + $#arg + 1,len]}" \n\t\tfi\n\t\tif [[ $zsyh_user_options[interactivecomments] == on && $arg[1] == $histchars[3] ]]\n\t\tthen\n\t\t\tif [[ $this_word == *(\':regular:\'|\':start:\')* ]]\n\t\t\tthen\n\t\t\t\tstyle=comment \n\t\t\telse\n\t\t\t\tstyle=unknown-token \n\t\t\tfi\n\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos $style\n\t\t\tin_redirection=1 \n\t\t\tcontinue\n\t\tfi\n\t\tif [[ $this_word == *\':start:\'* ]] && ! (( in_redirection ))\n\t\tthen\n\t\t\t_zsh_highlight_main__type "$arg" "$(( ! ${+seen_alias[$arg]} ))"\n\t\t\tlocal res="$REPLY" \n\t\t\tif [[ $res == "alias" ]]\n\t\t\tthen\n\t\t\t\tif [[ $arg == ?*=* ]]\n\t\t\t\tthen\n\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos unknown-token\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\tseen_alias[$arg]=$#in_alias \n\t\t\t\t_zsh_highlight_main__resolve_alias $arg\n\t\t\t\tlocal -a alias_args\n\t\t\t\tif [[ $zsyh_user_options[interactivecomments] == on ]]\n\t\t\t\tthen\n\t\t\t\t\talias_args=(${(zZ+c+)REPLY}) \n\t\t\t\telse\n\t\t\t\t\talias_args=(${(z)REPLY}) \n\t\t\t\tfi\n\t\t\t\targs=($alias_args $args) \n\t\t\t\tif (( $#in_alias == 0 ))\n\t\t\t\tthen\n\t\t\t\t\talias_style=alias \n\t\t\t\telse\n\t\t\t\t\t(( in_alias[1]-- ))\n\t\t\t\tfi\n\t\t\t\tin_alias=($(($#alias_args + 1)) $in_alias) \n\t\t\t\t(( in_redirection++ ))\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\t_zsh_highlight_main_highlighter_expand_path $arg\n\t\t\t\t_zsh_highlight_main__type "$REPLY" 0\n\t\t\t\tres="$REPLY" \n\t\t\tfi\n\t\tfi\n\t\tif _zsh_highlight_main__is_redirection $arg\n\t\tthen\n\t\t\tif (( in_redirection == 1 ))\n\t\t\tthen\n\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos unknown-token\n\t\t\telse\n\t\t\t\tin_redirection=2 \n\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos redirection\n\t\t\tfi\n\t\t\tcontinue\n\t\telif [[ $arg == \'{\'${~parameter_name_pattern}\'}\' ]] && _zsh_highlight_main__is_redirection $args[1]\n\t\tthen\n\t\t\tin_redirection=3 \n\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos named-fd\n\t\t\tcontinue\n\t\tfi\n\t\tif (( ! in_param )) && _zsh_highlight_main_highlighter__try_expand_parameter "$arg"\n\t\tthen\n\t\t\t() {\n\t\t\t\tlocal -a words\n\t\t\t\twords=("${reply[@]}") \n\t\t\t\tif (( $#words == 0 )) && (( ! in_redirection ))\n\t\t\t\tthen\n\t\t\t\t\t(( ++in_redirection ))\n\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos comment\n\t\t\t\t\tcontinue\n\t\t\t\telse\n\t\t\t\t\t(( in_param = 1 + $#words ))\n\t\t\t\t\targs=($words $args) \n\t\t\t\t\targ=$args[1] \n\t\t\t\t\t_zsh_highlight_main__type "$arg" 0\n\t\t\t\t\tres=$REPLY \n\t\t\t\tfi\n\t\t\t}\n\t\tfi\n\t\tif (( ! in_redirection ))\n\t\tthen\n\t\t\tif [[ $this_word == *\':sudo_opt:\'* ]]\n\t\t\tthen\n\t\t\t\tif [[ -n $flags_with_argument ]] && {\n\t\t\t\t\t\tif [[ -n $flags_sans_argument ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_sans_argument]#[$flags_with_argument] ]]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_with_argument] ]]\n\t\t\t\t\t\tfi\n\t\t\t\t\t}\n\t\t\t\tthen\n\t\t\t\t\tthis_word=${this_word//:start:/} \n\t\t\t\t\tnext_word=\':sudo_arg:\' \n\t\t\t\telif [[ -n $flags_with_argument ]] && {\n\t\t\t\t\t\tif [[ -n $flags_sans_argument ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_sans_argument]#[$flags_with_argument]* ]]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_with_argument]* ]]\n\t\t\t\t\t\tfi\n\t\t\t\t\t}\n\t\t\t\tthen\n\t\t\t\t\tthis_word=${this_word//:start:/} \n\t\t\t\t\tnext_word+=\':start:\' \n\t\t\t\t\tnext_word+=\':sudo_opt:\' \n\t\t\t\telif [[ -n $flags_sans_argument ]] && [[ $arg == \'-\'[$flags_sans_argument]# ]]\n\t\t\t\tthen\n\t\t\t\t\tthis_word=\':sudo_opt:\' \n\t\t\t\t\tnext_word+=\':start:\' \n\t\t\t\t\tnext_word+=\':sudo_opt:\' \n\t\t\t\telif [[ -n $flags_solo ]] && {\n\t\t\t\t\t\tif [[ -n $flags_sans_argument ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_sans_argument]#[$flags_solo]* ]]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t[[ $arg == \'-\'[$flags_solo]* ]]\n\t\t\t\t\t\tfi\n\t\t\t\t\t}\n\t\t\t\tthen\n\t\t\t\t\tthis_word=\':sudo_opt:\' \n\t\t\t\t\tnext_word=\':regular:\' \n\t\t\t\telif [[ $arg == \'-\'* ]]\n\t\t\t\tthen\n\t\t\t\t\tthis_word=\':sudo_opt:\' \n\t\t\t\t\tnext_word+=\':start:\' \n\t\t\t\t\tnext_word+=\':sudo_opt:\' \n\t\t\t\telse\n\t\t\t\t\tthis_word=${this_word//:sudo_opt:/} \n\t\t\t\tfi\n\t\t\telif [[ $this_word == *\':sudo_arg:\'* ]]\n\t\t\tthen\n\t\t\t\tnext_word+=\':sudo_opt:\' \n\t\t\t\tnext_word+=\':start:\' \n\t\t\tfi\n\t\tfi\n\t\tif [[ -n ${(M)ZSH_HIGHLIGHT_TOKENS_COMMANDSEPARATOR:#"$arg"} ]] && [[ $braces_stack != *T* || $arg != (\'||\'|\'&&\') ]]\n\t\tthen\n\t\t\tif _zsh_highlight_main__stack_pop T || _zsh_highlight_main__stack_pop Q\n\t\t\tthen\n\t\t\t\tstyle=unknown-token \n\t\t\telif $in_array_assignment\n\t\t\tthen\n\t\t\t\tcase $arg in\n\t\t\t\t\t($\'\\n\') style=commandseparator  ;;\n\t\t\t\t\t(\';\') style=unknown-token  ;;\n\t\t\t\t\t(*) style=unknown-token  ;;\n\t\t\t\tesac\n\t\t\telif [[ $this_word == *\':regular:\'* ]]\n\t\t\tthen\n\t\t\t\tstyle=commandseparator \n\t\t\telif [[ $this_word == *\':start:\'* ]] && [[ $arg == $\'\\n\' ]]\n\t\t\tthen\n\t\t\t\tstyle=commandseparator \n\t\t\telif [[ $this_word == *\':start:\'* ]] && [[ $arg == \';\' ]] && (( $#in_alias ))\n\t\t\tthen\n\t\t\t\tstyle=commandseparator \n\t\t\telse\n\t\t\t\tstyle=unknown-token \n\t\t\tfi\n\t\t\tif [[ $arg == $\'\\n\' ]] && $in_array_assignment\n\t\t\tthen\n\t\t\t\tnext_word=\':regular:\' \n\t\t\telif [[ $arg == \';\' ]] && $in_array_assignment\n\t\t\tthen\n\t\t\t\tnext_word=\':regular:\' \n\t\t\telse\n\t\t\t\tnext_word=\':start:\' \n\t\t\t\thighlight_glob=true \n\t\t\t\tsaw_assignment=false \n\t\t\t\t() {\n\t\t\t\t\tlocal alias_name\n\t\t\t\t\tfor alias_name in ${(k)seen_alias[(R)<$#in_alias->]}\n\t\t\t\t\tdo\n\t\t\t\t\t\tseen_alias=("${(@kv)seen_alias[(I)^$alias_name]}") \n\t\t\t\t\tdone\n\t\t\t\t}\n\t\t\t\tif [[ $arg != \'|\' && $arg != \'|&\' ]]\n\t\t\t\tthen\n\t\t\t\t\tnext_word+=\':start_of_pipeline:\' \n\t\t\t\tfi\n\t\t\tfi\n\t\telif ! (( in_redirection)) && [[ $this_word == *\':always:\'* && $arg == \'always\' ]]\n\t\tthen\n\t\t\tstyle=reserved-word \n\t\t\thighlight_glob=true \n\t\t\tsaw_assignment=false \n\t\t\tnext_word=\':start::start_of_pipeline:\' \n\t\telif ! (( in_redirection)) && [[ $this_word == *\':start:\'* ]]\n\t\tthen\n\t\t\tif (( ${+precommand_options[$arg]} )) && _zsh_highlight_main__is_runnable $arg\n\t\t\tthen\n\t\t\t\tstyle=precommand \n\t\t\t\t() {\n\t\t\t\t\tset -- "${(@s.:.)precommand_options[$arg]}"\n\t\t\t\t\tflags_with_argument=$1 \n\t\t\t\t\tflags_sans_argument=$2 \n\t\t\t\t\tflags_solo=$3 \n\t\t\t\t}\n\t\t\t\tnext_word=${next_word//:regular:/} \n\t\t\t\tnext_word+=\':sudo_opt:\' \n\t\t\t\tnext_word+=\':start:\' \n\t\t\t\tif [[ $arg == \'exec\' || $arg == \'env\' ]]\n\t\t\t\tthen\n\t\t\t\t\tnext_word+=\':regular:\' \n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tcase $res in\n\t\t\t\t\t(reserved) style=reserved-word \n\t\t\t\t\t\tcase $arg in\n\t\t\t\t\t\t\t(time|nocorrect) next_word=${next_word//:regular:/} \n\t\t\t\t\t\t\t\tnext_word+=\':start:\'  ;;\n\t\t\t\t\t\t\t($\'\\x7b\') braces_stack=\'Y\'"$braces_stack"  ;;\n\t\t\t\t\t\t\t($\'\\x7d\') _zsh_highlight_main__stack_pop \'Y\' reserved-word\n\t\t\t\t\t\t\t\tif [[ $style == reserved-word ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tnext_word+=\':always:\' \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\t\t($\'\\x5b\\x5b\') braces_stack=\'T\'"$braces_stack"  ;;\n\t\t\t\t\t\t\t(\'do\') braces_stack=\'D\'"$braces_stack"  ;;\n\t\t\t\t\t\t\t(\'done\') _zsh_highlight_main__stack_pop \'D\' reserved-word ;;\n\t\t\t\t\t\t\t(\'if\') braces_stack=\':?\'"$braces_stack"  ;;\n\t\t\t\t\t\t\t(\'then\') _zsh_highlight_main__stack_pop \':\' reserved-word ;;\n\t\t\t\t\t\t\t(\'elif\') if [[ ${braces_stack[1]} == \'?\' ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tbraces_stack=\':\'"$braces_stack" \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\t\t(\'else\') if [[ ${braces_stack[1]} == \'?\' ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\t\t(\'fi\') _zsh_highlight_main__stack_pop \'?\' ;;\n\t\t\t\t\t\t\t(\'foreach\') braces_stack=\'$\'"$braces_stack"  ;;\n\t\t\t\t\t\t\t(\'end\') _zsh_highlight_main__stack_pop \'$\' reserved-word ;;\n\t\t\t\t\t\t\t(\'repeat\') in_redirection=2 \n\t\t\t\t\t\t\t\tthis_word=\':start::regular:\'  ;;\n\t\t\t\t\t\t\t(\'!\') if [[ $this_word != *\':start_of_pipeline:\'* ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfi ;;\n\t\t\t\t\t\tesac\n\t\t\t\t\t\tif $saw_assignment && [[ $style != unknown-token ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\tfi ;;\n\t\t\t\t\t(\'suffix alias\') style=suffix-alias  ;;\n\t\t\t\t\t(\'global alias\') style=global-alias  ;;\n\t\t\t\t\t(alias) : ;;\n\t\t\t\t\t(builtin) style=builtin \n\t\t\t\t\t\t[[ $arg == $\'\\x5b\' ]] && braces_stack=\'Q\'"$braces_stack"  ;;\n\t\t\t\t\t(function) style=function  ;;\n\t\t\t\t\t(command) style=command  ;;\n\t\t\t\t\t(hashed) style=hashed-command  ;;\n\t\t\t\t\t(none) if (( ! in_param )) && _zsh_highlight_main_highlighter_check_assign\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos assign\n\t\t\t\t\t\t\tlocal i=$(( arg[(i)=] + 1 )) \n\t\t\t\t\t\t\tsaw_assignment=true \n\t\t\t\t\t\t\tif [[ $arg[i] == \'(\' ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tin_array_assignment=true \n\t\t\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight start_pos+i-1 start_pos+i reserved-word\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnext_word+=\':start:\' \n\t\t\t\t\t\t\t\tif (( i <= $#arg ))\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t() {\n\t\t\t\t\t\t\t\t\t\tlocal highlight_glob=false \n\t\t\t\t\t\t\t\t\t\t[[ $zsyh_user_options[globassign] == on ]] && highlight_glob=true \n\t\t\t\t\t\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_argument $i\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\telif (( ! in_param )) && [[ $arg[0,1] = $histchars[0,1] ]] && (( $#arg[0,2] == 2 ))\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=history-expansion \n\t\t\t\t\t\telif (( ! in_param )) && [[ $arg[0,1] == $histchars[2,2] ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=history-expansion \n\t\t\t\t\t\telif (( ! in_param )) && ! $saw_assignment && [[ $arg[1,2] == \'((\' ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $((start_pos + 2)) reserved-word\n\t\t\t\t\t\t\tif [[ $arg[-2,-1] == \'))\' ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight $((end_pos - 2)) $end_pos reserved-word\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\telif (( ! in_param )) && [[ $arg == \'()\' ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=reserved-word \n\t\t\t\t\t\telif (( ! in_param )) && ! $saw_assignment && [[ $arg == $\'\\x28\' ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=reserved-word \n\t\t\t\t\t\t\tbraces_stack=\'R\'"$braces_stack" \n\t\t\t\t\t\telif (( ! in_param )) && [[ $arg == $\'\\x29\' ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tif _zsh_highlight_main__stack_pop \'S\'\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tREPLY=$start_pos \n\t\t\t\t\t\t\t\treply=($list_highlights) \n\t\t\t\t\t\t\t\treturn 0\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t_zsh_highlight_main__stack_pop \'R\' reserved-word\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif _zsh_highlight_main_highlighter_check_path $arg 1\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tstyle=$REPLY \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi ;;\n\t\t\t\t\t(*) _zsh_highlight_main_add_region_highlight $start_pos $end_pos arg0_$res\n\t\t\t\t\t\tcontinue ;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\tif [[ -n ${(M)ZSH_HIGHLIGHT_TOKENS_CONTROL_FLOW:#"$arg"} ]]\n\t\t\tthen\n\t\t\t\tnext_word=\':start::start_of_pipeline:\' \n\t\t\tfi\n\t\telif _zsh_highlight_main__is_global_alias "$arg"\n\t\tthen\n\t\t\tstyle=global-alias \n\t\telse\n\t\t\tcase $arg in\n\t\t\t\t($\'\\x29\') if $in_array_assignment\n\t\t\t\t\tthen\n\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos assign\n\t\t\t\t\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos reserved-word\n\t\t\t\t\t\tin_array_assignment=false \n\t\t\t\t\t\tnext_word+=\':start:\' \n\t\t\t\t\t\tcontinue\n\t\t\t\t\telif (( in_redirection ))\n\t\t\t\t\tthen\n\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\telse\n\t\t\t\t\t\tif _zsh_highlight_main__stack_pop \'S\'\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tREPLY=$start_pos \n\t\t\t\t\t\t\treply=($list_highlights) \n\t\t\t\t\t\t\treturn 0\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t_zsh_highlight_main__stack_pop \'R\' reserved-word\n\t\t\t\t\tfi ;;\n\t\t\t\t($\'\\x28\\x29\') if (( in_redirection )) || $in_array_assignment\n\t\t\t\t\tthen\n\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\telse\n\t\t\t\t\t\tif [[ $zsyh_user_options[multifuncdef] == on ]] || false\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tnext_word+=\':start::start_of_pipeline:\' \n\t\t\t\t\t\tfi\n\t\t\t\t\t\tstyle=reserved-word \n\t\t\t\t\tfi ;;\n\t\t\t\t(*) if false\n\t\t\t\t\tthen\n\t\t\t\t\t\t\n\t\t\t\t\telif [[ $arg = $\'\\x7d\' ]] && $right_brace_is_recognised_everywhere\n\t\t\t\t\tthen\n\t\t\t\t\t\tif (( in_redirection )) || $in_array_assignment\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t_zsh_highlight_main__stack_pop \'Y\' reserved-word\n\t\t\t\t\t\t\tif [[ $style == reserved-word ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tnext_word+=\':always:\' \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\telif [[ $arg[0,1] = $histchars[0,1] ]] && (( $#arg[0,2] == 2 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\tstyle=history-expansion \n\t\t\t\t\telif [[ $arg == $\'\\x5d\\x5d\' ]] && _zsh_highlight_main__stack_pop \'T\' reserved-word\n\t\t\t\t\tthen\n\t\t\t\t\t\t:\n\t\t\t\t\telif [[ $arg == $\'\\x5d\' ]] && _zsh_highlight_main__stack_pop \'Q\' builtin\n\t\t\t\t\tthen\n\t\t\t\t\t\t:\n\t\t\t\t\telse\n\t\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_argument 1 $(( 1 != in_redirection ))\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi ;;\n\t\t\tesac\n\t\tfi\n\t\t_zsh_highlight_main_add_region_highlight $start_pos $end_pos $style\n\tdone\n\t(( $#in_alias )) && in_alias=() _zsh_highlight_main_add_region_highlight $start_pos $end_pos $alias_style\n\t(( in_param == 1 )) && in_param=0 _zsh_highlight_main_add_region_highlight $start_pos $end_pos $param_style\n\t[[ "$proc_buf" = (#b)(#s)(([[:space:]]|\\\\$\'\\n\')#) ]]\n\tREPLY=$(( end_pos + ${#match[1]} - 1 )) \n\treply=($list_highlights) \n\treturn $(( $#braces_stack > 0 ))' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-delete $'\t_zsh_highlight_call_widget .vi-delete -- "$@"' _add-zle-hook-widget 'builtin autoload -XU' _raggle 'builtin autoload -XU' _look 'builtin autoload -XU' _less 'builtin autoload -XU' _trap 'builtin autoload -XU' _zsh_highlight_highlighter_main_paint $'\tsetopt localoptions extendedglob\n\tif [[ $CONTEXT == (select|vared) ]]\n\tthen\n\t\treturn\n\tfi\n\ttypeset -a ZSH_HIGHLIGHT_TOKENS_COMMANDSEPARATOR\n\ttypeset -a ZSH_HIGHLIGHT_TOKENS_CONTROL_FLOW\n\tlocal -a options_to_set reply\n\tlocal REPLY\n\tlocal flags_with_argument\n\tlocal flags_sans_argument\n\tlocal flags_solo\n\tlocal -A precommand_options\n\tprecommand_options=(\'-\' \'\' \'builtin\' \'\' \'command\' :pvV \'exec\' a:cl \'noglob\' \'\' \'doas\' aCu:Lns \'nice\' n: \'pkexec\' \'\' \'sudo\' Cgprtu:AEHPSbilns:eKkVv \'stdbuf\' ioe: \'eatmydata\' \'\' \'catchsegv\' \'\' \'nohup\' \'\' \'setsid\' :wc \'env\' u:i \'ionice\' cn:t:pPu \'strace\' IbeaosXPpEuOS:ACdfhikqrtTvVxyDc \'proxychains\' q:f \'ssh-agent\' aEPt:csDd:k \'tabbed\' gnprtTuU:cdfhs:v \'chronic\' :ev \'ifne\' :n \'grc\' :se) \n\tif [[ $zsyh_user_options[ignorebraces] == on || ${zsyh_user_options[ignoreclosebraces]:-off} == on ]]\n\tthen\n\t\tlocal right_brace_is_recognised_everywhere=false \n\telse\n\t\tlocal right_brace_is_recognised_everywhere=true \n\tfi\n\tif [[ $zsyh_user_options[pathdirs] == on ]]\n\tthen\n\t\toptions_to_set+=(PATH_DIRS) \n\tfi\n\tZSH_HIGHLIGHT_TOKENS_COMMANDSEPARATOR=(\'|\' \'||\' \';\' \'&\' \'&&\' $\'\\n\' \'|&\' \'&!\' \'&|\') \n\tZSH_HIGHLIGHT_TOKENS_CONTROL_FLOW=($\'\\x7b\' $\'\\x28\' \'()\' \'while\' \'until\' \'if\' \'then\' \'elif\' \'else\' \'do\' \'time\' \'coproc\' \'!\') \n\tif (( $+X_ZSH_HIGHLIGHT_DIRS_BLACKLIST ))\n\tthen\n\t\tprint \'zsh-syntax-highlighting: X_ZSH_HIGHLIGHT_DIRS_BLACKLIST is deprecated. Please use ZSH_HIGHLIGHT_DIRS_BLACKLIST.\' >&2\n\t\tZSH_HIGHLIGHT_DIRS_BLACKLIST=($X_ZSH_HIGHLIGHT_DIRS_BLACKLIST) \n\t\tunset X_ZSH_HIGHLIGHT_DIRS_BLACKLIST\n\tfi\n\t_zsh_highlight_main_highlighter_highlight_list -$#PREBUFFER \'\' 1 "$PREBUFFER$BUFFER"\n\tlocal start end_ style\n\tfor start end_ style in $reply\n\tdo\n\t\t(( start >= end_ )) && {\n\t\t\tprint -r -- "zsh-syntax-highlighting: BUG: _zsh_highlight_highlighter_main_paint: start($start) >= end($end_)" >&2\n\t\t\treturn\n\t\t}\n\t\t(( end_ <= 0 )) && continue\n\t\t(( start < 0 )) && start=0 \n\t\t_zsh_highlight_main_calculate_fallback $style\n\t\t_zsh_highlight_add_highlight $start $end_ $reply\n\tdone' _x_title 'builtin autoload -XU' _omz::plugin $'\t(( $# > 0 && $+functions[$0::$1] )) || {\n\t\tcat >&2 <<EOF\nUsage: ${(j: :)${(s.::.)0#_}} <command> [options]\n\nAvailable commands:\n\n  disable <plugin> Disable plugin(s)\n  enable <plugin>  Enable plugin(s)\n  info <plugin>    Get information of a plugin\n  list             List all available Oh My Zsh plugins\n  load <plugin>    Load plugin(s)\n\nEOF\n\t\treturn 1\n\t}\n\tlocal command="$1" \n\tshift\n\t$0::$command "$@"' _pdf 'builtin autoload -XU' _fw_update 'builtin autoload -XU' ggfl $'\t[[ "$#" != 1 ]] && local b="$(git_current_branch)" \n\tgit push --force-with-lease origin "${b:=$1}"' _arping 'builtin autoload -XU' _find 'builtin autoload -XU' compdump 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-push-line-or-edit $'\t_zsh_highlight_call_widget .push-line-or-edit -- "$@"' _x_locale 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-gosmacs-transpose-chars $'\t_zsh_highlight_call_widget .gosmacs-transpose-chars -- "$@"' _fink 'builtin autoload -XU' takegit $'\tgit clone "$1"\n\tcd "$(basename ${1%%.git})"' _zsh_highlight_add_highlight $'\tlocal -i start end\n\tlocal highlight\n\tstart=$1 \n\tend=$2 \n\tshift 2\n\tfor highlight\n\tdo\n\t\tif (( $+ZSH_HIGHLIGHT_STYLES[$highlight] ))\n\t\tthen\n\t\t\tregion_highlight+=("$start $end $ZSH_HIGHLIGHT_STYLES[$highlight], memo=zsh-syntax-highlighting") \n\t\t\tbreak\n\t\tfi\n\tdone' _cpio 'builtin autoload -XU' _npm 'builtin autoload -XU' _list_files $'\tlocal stat f elt what dir\n\tlocal -a stylevals\n\tinteger ok\n\tlistfiles=() \n\tlistopts=() \n\tzstyle -a ":completion:${curcontext}:" file-list stylevals || return 1\n\tcase $WIDGETSTYLE in\n\t\t(*complete*) what=insert  ;;\n\t\t(*) what=list  ;;\n\tesac\n\tfor elt in $stylevals\n\tdo\n\t\tcase $elt in\n\t\t\t(*($what|all|true|1|yes)*=<->) (( ${(P)#1} <= ${elt##*=} )) && (( ok = 1 ))\n\t\t\t\tbreak ;;\n\t\t\t([^=]#($what|all|true|1|yes)[^=]#) (( ok = 1 ))\n\t\t\t\tbreak ;;\n\t\tesac\n\tdone\n\t(( ok )) || return 1\n\tzmodload -F zsh/stat b:zstat 2> /dev/null || return 1\n\tdir=${2:+$2/} \n\tdir=${(Q)dir} \n\tfor f in ${(PQ)1}\n\tdo\n\t\tif [[ ! -e "$dir$f" ]]\n\t\tthen\n\t\t\tlistfiles+=("$dir$f") \n\t\t\tcontinue\n\t\tfi\n\t\tzstat -s -H stat -F "%b %e %H:%M" - "$dir$f" > /dev/null 2>&1\n\t\tlistfiles+=("$stat[mode] ${(l:3:)stat[nlink]} ${(r:8:)stat[uid]}  ${(r:8:)stat[gid]} ${(l:8:)stat[size]} $stat[mtime] $f") \n\tdone\n\t(( ${#listfiles} )) && listopts=(-d listfiles -l -o) \n\treturn 0' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-digit-or-beginning-of-line $'\t_zsh_highlight_call_widget .vi-digit-or-beginning-of-line -- "$@"' _cssh 'builtin autoload -XU' _arch_archives 'builtin autoload -XU' _x_cursor 'builtin autoload -XU' _file_systems 'builtin autoload -XU' _options_set 'builtin autoload -XU' _zsh_highlight_main_highlighter__try_expand_parameter $'\tlocal arg="$1" \n\tunset reply\n\t{\n\t\t{\n\t\t\tlocal -a match mbegin mend\n\t\t\tlocal MATCH\n\t\t\tinteger MBEGIN MEND\n\t\t\tlocal parameter_name\n\t\t\tlocal -a words\n\t\t\tif [[ $arg[1] != \'$\' ]]\n\t\t\tthen\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t\tif [[ ${arg[2]} == \'{\' ]] && [[ ${arg[-1]} == \'}\' ]]\n\t\t\tthen\n\t\t\t\tparameter_name=${${arg:2}%?} \n\t\t\telse\n\t\t\t\tparameter_name=${arg:1} \n\t\t\tfi\n\t\t\tif [[ $res == none ]] && [[ ${parameter_name} =~ ^${~parameter_name_pattern}$ ]] && [[ ${(tP)MATCH} != *special* ]]\n\t\t\tthen\n\t\t\t\tcase ${(tP)MATCH} in\n\t\t\t\t\t(*array*|*assoc*) words=(${(P)MATCH})  ;;\n\t\t\t\t\t("") words=()  ;;\n\t\t\t\t\t(*) if [[ $zsyh_user_options[shwordsplit] == on ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\twords=(${(P)=MATCH}) \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twords=(${(P)MATCH}) \n\t\t\t\t\t\tfi ;;\n\t\t\t\tesac\n\t\t\t\treply=("${words[@]}") \n\t\t\telse\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t}\n\t}' _graphicsmagick 'builtin autoload -XU' _newsgroups 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-open-line-above $'\t_zsh_highlight_call_widget .vi-open-line-above -- "$@"' _omz::theme::use $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <theme>" >&2\n\t\treturn 1\n\tfi\n\tif [[ -f "$ZSH_CUSTOM/$1.zsh-theme" ]]\n\tthen\n\t\tsource "$ZSH_CUSTOM/$1.zsh-theme"\n\telif [[ -f "$ZSH_CUSTOM/themes/$1.zsh-theme" ]]\n\tthen\n\t\tsource "$ZSH_CUSTOM/themes/$1.zsh-theme"\n\telif [[ -f "$ZSH/themes/$1.zsh-theme" ]]\n\tthen\n\t\tsource "$ZSH/themes/$1.zsh-theme"\n\telse\n\t\t_omz::log error "%B$1%b theme not found"\n\t\treturn 1\n\tfi\n\tZSH_THEME="$1" \n\t[[ $1 = random ]] || unset RANDOM_THEME' _zsh_highlight_widget_orig-s0.0000050000-r18109-zle-line-finish $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-zle-line-finish -- "$@"' _ethtool 'builtin autoload -XU' _wiggle 'builtin autoload -XU' _autocd $'\t_command_names\n\tlocal ret=$? \n\t[[ -o autocd ]] && _cd || return ret' _fortune 'builtin autoload -XU' _yafc 'builtin autoload -XU' omz_history $'\tlocal clear list\n\tzparseopts -E c=clear l=list\n\tif [[ -n "$clear" ]]\n\tthen\n\t\techo -n >| "$HISTFILE"\n\t\tfc -p "$HISTFILE"\n\t\techo History file deleted. >&2\n\telif [[ -n "$list" ]]\n\tthen\n\t\tbuiltin fc "$@"\n\telse\n\t\t[[ ${@[-1]-} = *[0-9]* ]] && builtin fc -l "$@" || builtin fc -l "$@" 1\n\tfi' _mere 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-open-line-below $'\t_zsh_highlight_call_widget .vi-open-line-below -- "$@"' _rlogin 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-transpose-words $'\t_zsh_highlight_call_widget .transpose-words -- "$@"' env_default $'\t[[ ${parameters[$1]} = *-export* ]] && return 0\n\texport "$1=$2" && return 3' _xterm 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-incremental-search-backward $'\t_zsh_highlight_call_widget .history-incremental-search-backward -- "$@"' _dict_words 'builtin autoload -XU' _user_math_func 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-history-search-forward $'\t_zsh_highlight_call_widget .vi-history-search-forward -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-kill-eol $'\t_zsh_highlight_call_widget .vi-kill-eol -- "$@"' _pkg_instance 'builtin autoload -XU' _printers 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-expand-word $'\t_zsh_highlight_call_widget .expand-word -- "$@"' _ltrace 'builtin autoload -XU' _directories 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-history-search-backward $'\t_zsh_highlight_call_widget .vi-history-search-backward -- "$@"' _zsh_highlight_main_highlighter_highlight_dollar_quote $'\tlocal -a match mbegin mend\n\tlocal MATCH\n\tinteger MBEGIN MEND\n\tlocal i j k style\n\tlocal AA\n\tinteger c\n\treply=() \n\tfor ((i = $1 + 2 ; i <= $#arg ; i += 1 )) do\n\t\t(( j = i + start_pos - 1 ))\n\t\t(( k = j + 1 ))\n\t\tcase "$arg[$i]" in\n\t\t\t("\'") break ;;\n\t\t\t("\\\\") style=back-dollar-quoted-argument \n\t\t\t\tfor ((c = i + 1 ; c <= $#arg ; c += 1 )) do\n\t\t\t\t\t[[ "$arg[$c]" != ([0-9xXuUa-fA-F]) ]] && break\n\t\t\t\tdone\n\t\t\t\tAA=$arg[$i+1,$c-1] \n\t\t\t\tif [[ "$AA" =~ "^(x|X)[0-9a-fA-F]{1,2}" || "$AA" =~ "^[0-7]{1,3}" || "$AA" =~ "^u[0-9a-fA-F]{1,4}" || "$AA" =~ "^U[0-9a-fA-F]{1,8}" ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += $#MATCH ))\n\t\t\t\t\t(( i += $#MATCH ))\n\t\t\t\telse\n\t\t\t\t\tif (( $#arg > $i+1 )) && [[ $arg[$i+1] == [xXuU] ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tstyle=unknown-token \n\t\t\t\t\tfi\n\t\t\t\t\t(( k += 1 ))\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\tfi ;;\n\t\t\t(*) continue ;;\n\t\tesac\n\t\treply+=($j $k $style) \n\tdone\n\tif [[ $arg[i] == "\'" ]]\n\tthen\n\t\tstyle=dollar-quoted-argument \n\telse\n\t\t(( i-- ))\n\t\tstyle=dollar-quoted-argument-unclosed \n\tfi\n\treply=($(( start_pos + $1 - 1 )) $(( start_pos + i )) $style $reply) \n\tREPLY=$i ' _wpa_cli 'builtin autoload -XU' _chown 'builtin autoload -XU' _pkgtool 'builtin autoload -XU' _parameter 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-change $'\t_zsh_highlight_call_widget .vi-change -- "$@"' _dvi 'builtin autoload -XU' _x_selection_timeout 'builtin autoload -XU' _object_classes 'builtin autoload -XU' _guilt 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-auto-suffix-remove $'\t_zsh_highlight_call_widget .auto-suffix-remove -- "$@"' _socket 'builtin autoload -XU' _directory_stack $'\tsetopt localoptions nonomatch\n\tlocal expl list lines revlines disp sep\n\t[[ $PREFIX = [-+]* ]] || return 1\n\tzstyle -s ":completion:${curcontext}:directory-stack" list-separator sep || sep=-- \n\tif zstyle -T ":completion:${curcontext}:directory-stack" verbose\n\tthen\n\t\tlines=("${(D)dirstack[@]}") \n\t\tif [[ ( $PREFIX[1] = - && ! -o pushdminus ) || ( $PREFIX[1] = + && -o pushdminus ) ]]\n\t\tthen\n\t\t\tinteger i\n\t\t\trevlines=($lines) \n\t\t\tfor ((i = 1; i <= $#lines; i++ )) do\n\t\t\t\tlines[$i]="$((i-1)) $sep ${revlines[-$i]##[0-9]#[\t ]#}" \n\t\t\tdone\n\t\telse\n\t\t\tfor ((i = 1; i <= $#lines; i++ )) do\n\t\t\t\tlines[$i]="$i $sep ${lines[$i]##[0-9]#[\t ]#}" \n\t\t\tdone\n\t\tfi\n\t\tlist=(${PREFIX[1]}${^lines%% *}) \n\t\tdisp=(-ld lines) \n\telse\n\t\tlist=(${PREFIX[1]}{0..${#dirstack}}) \n\t\tdisp=() \n\tfi\n\t_wanted -V directory-stack expl \'directory stack\' compadd "$@" "$disp[@]" -Q -a list' _cmdstring 'builtin autoload -XU' _ps1234 'builtin autoload -XU' _cal 'builtin autoload -XU' _cygstart 'builtin autoload -XU' _xpdf 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_list_expansions $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_list_expansions -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-self-insert-unmeta $'\t_zsh_highlight_call_widget .self-insert-unmeta -- "$@"' _dpkg_source 'builtin autoload -XU' _update-rc.d 'builtin autoload -XU' _watch 'builtin autoload -XU' _cat $'\tlocal -a args\n\tif _pick_variant gnu=GNU unix --version\n\tthen\n\t\targs=(\'(-A --show-all)\'{-A,--show-all}\'[equivalent to -vET]\' \'(-b --number-nonblank -n --number)\'{-b,--number-nonblank}\'[number nonempty output lines, overrides -n]\' \'-e[equivalent to -vE]\' \'(-E --show-ends)\'{-E,--show-ends}\'[display $ at end of each line]\' \'(-n --number)\'{-n,--number}\'[number all output lines]\' \'(-s --squeeze-blank)\'{-s,--squeeze-blank}\'[suppress repeated empty output lines]\' \'-t[equivalent to -vT]\' \'(-T --show-tabs)\'{-T,--show-tabs}\'[display TAB characters as ^I]\' \'-u[ignored]\' \'(-v --show-nonprinting)\'{-v,--show-nonprinting}\'[use ^ and M- notation, except for LFD and TAB]\' \'(- : *)--help[display help and exit]\' \'(- : *)--version[output version information and exit]\' \'*:files:_files\') \n\telif [[ "$OSTYPE" == (*bsd|dragonfly|darwin)* ]]\n\tthen\n\t\targs=(-A "-*" \'(-n)-b[number non-blank output lines]\' \'(-v)-e[display $ at the end of each line (implies -v)]\' \'-n[number all output lines]\' \'-s[squeeze multiple blank lines into one]\' \'(-v)-t[display tab as ^I (implies -v)]\' \'-u[do not buffer output]\' \'-v[display non-printing chars as ^X or M-a]\' \'*:files:_files\') \n\t\t[[ $OSTYPE = (free|net)bsd* ]] && args+=(\'-l[set a lock on the stdout file descriptor]\') \n\t\t[[ $OSTYPE = netbsd* ]] && args+=(\'-B+[read with buffer of specified size]:size (bytes)\' \'-f[only attempt to display regular files]\') \n\telif [[ $OSTYPE = solaris* ]]\n\tthen\n\t\targs=(-A "-*" \'(-b)-n[number all output lines]\' \'(-n)-b[number non-blank output lines]\' "-u[don\'t buffer output]" \'-s[be silent about non-existent files]\' \'-v[display non-printing chars as ^X or M-a]\' \'-e[display $ at the end of each line (requires -v)]\' \'-t[display tab as ^I and formfeeds and ^L (requires -v)]\' \'*:files:_files\') \n\telse\n\t\targs=(\'-n[number all output lines]\' \'-u[do not buffer output]\' \'*:files:_files\') \n\tfi\n\t_arguments -s -S $args' chruby_prompt_info $'\treturn 1' _csup 'builtin autoload -XU' _smit 'builtin autoload -XU' _metaflac 'builtin autoload -XU' _brace_parameter 'builtin autoload -XU' _remote_files 'builtin autoload -XU' _path_files $'\tlocal -a match mbegin mend\n\tif _have_glob_qual $PREFIX\n\tthen\n\t\tlocal ret=1 \n\t\tcompset -p ${#match[1]}\n\t\tcompset -S \'[^\\)\\|\\~]#(|\\))\'\n\t\tif [[ $_comp_caller_options[extendedglob] == on ]] && compset -P \'\\#\'\n\t\tthen\n\t\t\t_globflags && ret=0 \n\t\telse\n\t\t\tif [[ $_comp_caller_options[extendedglob] == on ]]\n\t\t\tthen\n\t\t\t\tlocal -a flags\n\t\t\t\tflags=(\'#:introduce glob flag\') \n\t\t\t\t_describe -t globflags "glob flag" flags -Q -S \'\' && ret=0 \n\t\t\tfi\n\t\t\t_globquals && ret=0 \n\t\tfi\n\t\treturn ret\n\tfi\n\tlocal linepath realpath donepath prepath testpath exppath skips skipped\n\tlocal tmp1 tmp2 tmp3 tmp4 i orig eorig pre suf tpre tsuf opre osuf cpre\n\tlocal pats haspats ignore pfx pfxsfx sopt gopt opt sdirs ignpar cfopt listsfx\n\tlocal nm=$compstate[nmatches] menu matcher mopts sort mid accex fake \n\tlocal listfiles listopts tmpdisp origtmp1 Uopt\n\tlocal accept_exact_dirs path_completion\n\tinteger npathcheck\n\tlocal -a Mopts\n\ttypeset -U prepaths exppaths\n\texppaths=() \n\tzparseopts -a mopts \'P:=pfx\' \'S:=pfxsfx\' \'q=pfxsfx\' \'r:=pfxsfx\' \'R:=pfxsfx\' \'W:=prepaths\' \'F:=ignore\' \'M+:=matcher\' J+: V+: X+: 1 2 n \'f=tmp1\' \'/=tmp1\' \'g+:-=tmp1\'\n\tsopt="-${(@j::M)${(@)tmp1#-}#?}" \n\t(( $tmp1[(I)-[/g]*] )) && haspats=yes \n\t(( $tmp1[(I)-g*] )) && gopt=yes \n\tif (( $tmp1[(I)-/] ))\n\tthen\n\t\tpats="${(@)${(@M)tmp1:#-g*}#-g}" \n\t\tpats=(\'*(-/)\' ${${(z):-x $pats}[2,-1]}) \n\telse\n\t\tpats="${(@)${(@M)tmp1:#-g*}#-g}" \n\t\tpats=(${${(z):-x $pats}[2,-1]}) \n\tfi\n\tpats=("${(@)pats:# #}") \n\tif (( $#pfx ))\n\tthen\n\t\tcompset -P "${(b)pfx[2]}" || pfxsfx=("$pfx[@]" "$pfxsfx[@]") \n\tfi\n\tif (( $#prepaths ))\n\tthen\n\t\ttmp1="${prepaths[2]}" \n\t\tif [[ "$tmp1[1]" = \'(\' ]]\n\t\tthen\n\t\t\tprepaths=(${^=tmp1[2,-2]%/}/) \n\t\telif [[ "$tmp1[1]" = \'/\' ]]\n\t\tthen\n\t\t\tprepaths=("${tmp1%/}/") \n\t\telse\n\t\t\tprepaths=(${(P)^tmp1%/}/) \n\t\t\t(( ! $#prepaths )) && prepaths=(${tmp1%/}/) \n\t\tfi\n\t\t(( ! $#prepaths )) && prepaths=(\'\') \n\telse\n\t\tprepaths=(\'\') \n\tfi\n\tif (( $#ignore ))\n\tthen\n\t\tif [[ "${ignore[2]}" = \\(* ]]\n\t\tthen\n\t\t\tignore=(${=ignore[2][2,-2]}) \n\t\telse\n\t\t\tignore=(${(P)ignore[2]}) \n\t\tfi\n\tfi\n\tif [[ "$sopt" = -(f|) ]]\n\tthen\n\t\tif [[ -z "$gopt" ]]\n\t\tthen\n\t\t\tsopt=\'-f\' \n\t\t\tpats=(\'*\') \n\t\telse\n\t\t\tunset sopt\n\t\tfi\n\tfi\n\tif (( ! $mopts[(I)-[JVX]] ))\n\tthen\n\t\tlocal expl\n\t\tif [[ -z "$gopt" && "$sopt" = -/ ]]\n\t\tthen\n\t\t\t_description directories expl directory\n\t\telse\n\t\t\t_description files expl file\n\t\tfi\n\t\ttmp1=$expl[(I)-M*] \n\t\tif (( tmp1 ))\n\t\tthen\n\t\t\tif (( $#matcher ))\n\t\t\tthen\n\t\t\t\tmatcher[2]="$matcher[2] $expl[1+tmp1]" \n\t\t\telse\n\t\t\t\tmatcher=(-M "$expl[1+tmp1]") \n\t\t\tfi\n\t\tfi\n\t\tmopts=("$mopts[@]" "$expl[@]") \n\tfi\n\t[[ -z "$_comp_no_ignore" && $#ignore -eq 0 && ( -z $gopt || "$pats" = \\ #\\*\\ # ) && -n $FIGNORE ]] && ignore=("?*${^fignore[@]}") \n\tif (( $#ignore ))\n\tthen\n\t\t_comp_ignore=("$_comp_ignore[@]" "$ignore[@]") \n\t\t(( $mopts[(I)-F] )) || mopts=("$mopts[@]" -F _comp_ignore) \n\tfi\n\tif [[ $#matcher -eq 0 && -o nocaseglob ]]\n\tthen\n\t\tmatcher=(-M \'m:{a-zA-Z}={A-Za-z}\') \n\tfi\n\tif (( $#matcher ))\n\tthen\n\t\tmopts=("$mopts[@]" "$matcher[@]") \n\tfi\n\tif zstyle -s ":completion:${curcontext}:" file-sort tmp1\n\tthen\n\t\tcase "$tmp1" in\n\t\t\t(*size*) sort=oL  ;;\n\t\t\t(*links*) sort=ol  ;;\n\t\t\t(*(time|date|modi)*) sort=om  ;;\n\t\t\t(*access*) sort=oa  ;;\n\t\t\t(*(inode|change)*) sort=oc  ;;\n\t\t\t(*) sort=on  ;;\n\t\tesac\n\t\t[[ "$tmp1" = *rev* ]] && sort[1]=O \n\t\t[[ "$tmp1" = *follow* ]] && sort="-${sort}-" \n\t\tif [[ "$sort" = on ]]\n\t\tthen\n\t\t\tsort= \n\t\telse\n\t\t\tmopts=("${(@)mopts/#-J/-V}") \n\t\t\ttmp2=() \n\t\t\tfor tmp1 in "$pats[@]"\n\t\t\tdo\n\t\t\t\tif _have_glob_qual "$tmp1" complete\n\t\t\t\tthen\n\t\t\t\t\ttmp2+=("${match[1]}#q${sort})(${match[5]})") \n\t\t\t\telse\n\t\t\t\t\ttmp2+=("${tmp1}(${sort})") \n\t\t\t\tfi\n\t\t\tdone\n\t\t\tpats=("$tmp2[@]") \n\t\tfi\n\tfi\n\tif zstyle -t ":completion:${curcontext}:paths" squeeze-slashes\n\tthen\n\t\tskips=\'((.|..|)/)##\' \n\telse\n\t\tskips=\'((.|..)/)##\' \n\tfi\n\tzstyle -s ":completion:${curcontext}:paths" special-dirs sdirs\n\tzstyle -t ":completion:${curcontext}:paths" list-suffixes && listsfx=yes \n\t[[ "$pats" = ((|*[[:blank:]])\\*(|[[:blank:]]*|\\([^[:blank:]]##\\))|*\\([^[:blank:]]#/[^[:blank:]]#\\)*) ]] && sopt=$sopt/ \n\tzstyle -a ":completion:${curcontext}:paths" accept-exact accex\n\tzstyle -a ":completion:${curcontext}:" fake-files fake\n\tzstyle -s ":completion:${curcontext}:" ignore-parents ignpar\n\tzstyle -t ":completion:${curcontext}:paths" accept-exact-dirs && accept_exact_dirs=1 \n\tzstyle -T ":completion:${curcontext}:paths" path-completion && path_completion=1 \n\tif [[ -n "$compstate[pattern_match]" ]]\n\tthen\n\t\tif {\n\t\t\t\t[[ -z "$SUFFIX" ]] && _have_glob_qual "$PREFIX" complete\n\t\t\t} || _have_glob_qual "$SUFFIX" complete\n\t\tthen\n\t\t\ttmp3=${match[5]} \n\t\t\tif [[ -n "$SUFFIX" ]]\n\t\t\tthen\n\t\t\t\tSUFFIX=${match[2]} \n\t\t\telse\n\t\t\t\tPREFIX=${match[2]} \n\t\t\tfi\n\t\t\ttmp2=() \n\t\t\tfor tmp1 in "$pats[@]"\n\t\t\tdo\n\t\t\t\tif _have_glob_qual "$tmp1" complete\n\t\t\t\tthen\n\t\t\t\t\ttmp2+=("${match[1]}${tmp3}${match[5]})") \n\t\t\t\telse\n\t\t\t\t\ttmp2+=("${tmp1}(${tmp3})") \n\t\t\t\tfi\n\t\t\tdone\n\t\t\tpats=("$tmp2[@]") \n\t\tfi\n\tfi\n\tpre="$PREFIX" \n\tsuf="$SUFFIX" \n\topre="$PREFIX" \n\tosuf="$SUFFIX" \n\torig="${PREFIX}${SUFFIX}" \n\teorig="$orig" \n\t[[ $compstate[insert] = (*menu|[0-9]*) || -n "$_comp_correct" || ( -n "$compstate[pattern_match]" && "${orig#\\~}" != (|*[^\\\\])[][*?#~^\\|\\<\\>]* ) ]] && menu=yes \n\tif [[ -n "$_comp_correct" ]]\n\tthen\n\t\tcfopt=- \n\t\tUopt=-U \n\telse\n\t\tMopts=(-M "r:|/=* r:|=*") \n\tfi\n\tif [[ "$pre" = [^][*?#^\\|\\<\\>\\\\]#(\\`[^\\`]#\\`|\\$)*/* && "$compstate[quote]" != \\\' ]]\n\tthen\n\t\tlinepath="${(M)pre##*\\$[^/]##/}" \n\t\t() {\n\t\t\tsetopt localoptions nounset\n\t\t\teval \'realpath=${(e)~linepath}\' 2> /dev/null\n\t\t}\n\t\t[[ -z "$realpath" || "$realpath" = "$linepath" ]] && return 1\n\t\tpre="${pre#${linepath}}" \n\t\ti=\'[^/]\' \n\t\ti="${#linepath//$i}" \n\t\torig="${orig[1,(in:i:)/][1,-2]}" \n\t\tdonepath= \n\t\tprepaths=(\'\') \n\telif [[ "$pre[1]" = \\~ && "$compstate[quote]" = (|\\`) ]]\n\tthen\n\t\tlinepath="${pre[2,-1]%%/*}" \n\t\tif [[ -z "$linepath" ]]\n\t\tthen\n\t\t\trealpath="${HOME%/}/" \n\t\telif [[ "$linepath" = ([-+]|)[0-9]## ]]\n\t\tthen\n\t\t\tif [[ "$linepath" != [-+]* ]]\n\t\t\tthen\n\t\t\t\ttmp1="$linepath" \n\t\t\telse\n\t\t\t\tif [[ "$linepath" = -* ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp1=$(( $#dirstack $linepath )) \n\t\t\t\telse\n\t\t\t\t\ttmp1=$linepath[2,-1] \n\t\t\t\tfi\n\t\t\t\t[[ -o pushdminus ]] && tmp1=$(( $#dirstack - $tmp1 )) \n\t\t\tfi\n\t\t\tif (( ! tmp1 ))\n\t\t\tthen\n\t\t\t\trealpath=$PWD/ \n\t\t\telif [[ tmp1 -le $#dirstack ]]\n\t\t\tthen\n\t\t\t\trealpath=$dirstack[tmp1]/ \n\t\t\telse\n\t\t\t\t_message \'not enough directory stack entries\'\n\t\t\t\treturn 1\n\t\t\tfi\n\t\telif [[ "$linepath" = [-+] ]]\n\t\tthen\n\t\t\trealpath=${~:-\\~$linepath}/ \n\t\telse\n\t\t\teval "realpath=~${linepath}/" 2> /dev/null\n\t\t\tif [[ -z "$realpath" ]]\n\t\t\tthen\n\t\t\t\t_message "unknown user \\`$linepath\'"\n\t\t\t\treturn 1\n\t\t\tfi\n\t\tfi\n\t\tlinepath="~${linepath}/" \n\t\t[[ "$realpath" = "$linepath" ]] && return 1\n\t\tpre="${pre#*/}" \n\t\torig="${orig#*/}" \n\t\tdonepath= \n\t\tprepaths=(\'\') \n\telse\n\t\tlinepath= \n\t\trealpath= \n\t\tif zstyle -s ":completion:${curcontext}:" preserve-prefix tmp1 && [[ -n "$tmp1" && "$pre" = (#b)(${~tmp1})* ]]\n\t\tthen\n\t\t\tpre="$pre[${#match[1]}+1,-1]" \n\t\t\torig="$orig[${#match[1]}+1,-1]" \n\t\t\tdonepath="$match[1]" \n\t\t\tprepaths=(\'\') \n\t\telif [[ "$pre[1]" = / ]]\n\t\tthen\n\t\t\tpre="$pre[2,-1]" \n\t\t\torig="$orig[2,-1]" \n\t\t\tdonepath=\'/\' \n\t\t\tprepaths=(\'\') \n\t\telse\n\t\t\t[[ "$pre" = (.|..)/* ]] && prepaths=(\'\') \n\t\t\tdonepath= \n\t\tfi\n\tfi\n\tfor prepath in "$prepaths[@]"\n\tdo\n\t\tskipped= \n\t\tcpre= \n\t\tif [[ ( -n $accept_exact_dirs || -z $path_completion ) && ${pre} = (#b)(*)/([^/]#) ]]\n\t\tthen\n\t\t\ttmp1=${match[1]} \n\t\t\ttpre=${match[2]} \n\t\t\ttmp2=$tmp1 \n\t\t\ttmp1=${tmp1//(#b)\\\\(?)/$match[1]} \n\t\t\ttpre=${tpre//(#b)\\\\([^\\\\\\]\\[\\^\\~\\(\\)\\#\\*\\?])/$match[1]} \n\t\t\ttmp3=${donepath//(#b)\\\\(?)/$match[1]} \n\t\t\twhile true\n\t\t\tdo\n\t\t\t\tif [[ -z $path_completion || -d $prepath$realpath$tmp3$tmp2 ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp3=$tmp3$tmp1/ \n\t\t\t\t\tdonepath=${tmp3//(#b)([\\\\\\]\\[\\^\\~\\(\\)\\#\\*\\?])/\\\\$match[1]} \n\t\t\t\t\tpre=$tpre \n\t\t\t\t\tbreak\n\t\t\t\telif [[ $tmp1 = (#b)(*)/([^/]#) ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp1=$match[1] \n\t\t\t\t\ttpre=$match[2]/$tpre \n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\t\ttpre="$pre" \n\t\ttsuf="$suf" \n\t\ttestpath="${donepath//(#b)\\\\([\\\\\\]\\[\\^\\~\\(\\)\\#\\*\\?])/$match[1]}" \n\t\ttmp2="${(M)tpre##${~skips}}" \n\t\ttpre="${tpre#$tmp2}" \n\t\ttmp1=("$prepath$realpath$donepath$tmp2") \n\t\t(( npathcheck = 0 ))\n\t\twhile true\n\t\tdo\n\t\t\torigtmp1=("${tmp1[@]}") \n\t\t\tif [[ "$tpre" = */* ]]\n\t\t\tthen\n\t\t\t\tPREFIX="${tpre%%/*}" \n\t\t\t\tSUFFIX= \n\t\t\telse\n\t\t\t\tPREFIX="${tpre}" \n\t\t\t\tSUFFIX="${tsuf%%/*}" \n\t\t\tfi\n\t\t\ttmp2=("$tmp1[@]") \n\t\t\tif [[ "$tpre$tsuf" = (#b)*/(*) ]]\n\t\t\tthen\n\t\t\t\tif [[ -n "$fake${match[1]}" ]]\n\t\t\t\tthen\n\t\t\t\t\tcompfiles -P$cfopt tmp1 accex "$skipped" "$_matcher $matcher[2]" "$sdirs" fake\n\t\t\t\telse\n\t\t\t\t\tcompfiles -P$cfopt tmp1 accex "$skipped" "$_matcher $matcher[2]" \'\' fake\n\t\t\t\tfi\n\t\t\telif [[ "$sopt" = *[/f]* ]]\n\t\t\tthen\n\t\t\t\tcompfiles -p$cfopt tmp1 accex "$skipped" "$_matcher $matcher[2]" "$sdirs" fake "$pats[@]"\n\t\t\telse\n\t\t\t\tcompfiles -p$cfopt tmp1 accex "$skipped" "$_matcher $matcher[2]" \'\' fake "$pats[@]"\n\t\t\tfi\n\t\t\ttmp1=($~tmp1)  2> /dev/null\n\t\t\tif [[ -n "$PREFIX$SUFFIX" ]]\n\t\t\tthen\n\t\t\t\tif (( ! $#tmp1 && npathcheck == 0 ))\n\t\t\t\tthen\n\t\t\t\t\t(( npathcheck = 1 ))\n\t\t\t\t\tfor tmp3 in "$tmp2[@]"\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [[ -n $tmp3 && $tmp3 != */ ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\ttmp3+=/ \n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [[ -e "$tmp3${(Q)PREFIX}${(Q)SUFFIX}" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t(( npathcheck = 2 ))\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\tif (( npathcheck == 2 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\ttmp1=("$origtmp1[@]") \n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif (( ! $#tmp1 ))\n\t\t\t\tthen\n\t\t\t\t\ttmp2=(${^${tmp2:#/}}/$PREFIX$SUFFIX) \n\t\t\t\telif [[ "$tmp1[1]" = */* ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ -n "$_comp_correct" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttmp2=("$tmp1[@]") \n\t\t\t\t\t\tbuiltin compadd -D tmp1 "$matcher[@]" - "${(@)tmp1:t}"\n\t\t\t\t\t\tif [[ $#tmp1 -eq 0 ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\ttmp1=("$tmp2[@]") \n\t\t\t\t\t\t\tcompadd -D tmp1 "$matcher[@]" - "${(@)tmp2:t}"\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\ttmp2=("$tmp1[@]") \n\t\t\t\t\t\tcompadd -D tmp1 "$matcher[@]" - "${(@)tmp1:t}"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\ttmp2=(\'\') \n\t\t\t\t\tcompadd -D tmp1 "$matcher[@]" -a tmp1\n\t\t\t\tfi\n\t\t\t\tif (( ! $#tmp1 ))\n\t\t\t\tthen\n\t\t\t\t\tif [[ "$tmp2[1]" = */* ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttmp2=("${(@)tmp2#${prepath}${realpath}}") \n\t\t\t\t\t\tif [[ "$tmp2[1]" = */* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\ttmp2=("${(@)tmp2:h}") \n\t\t\t\t\t\t\tcompquote tmp2\n\t\t\t\t\t\t\tif [[ "$tmp2" = */ ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\texppaths=("$exppaths[@]" ${^tmp2}${tpre}${tsuf}) \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\texppaths=("$exppaths[@]" ${^tmp2}/${tpre}${tsuf}) \n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\telif [[ ${tpre}${tsuf} = */* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\texppaths=("$exppaths[@]" ${tpre}${tsuf}) \n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tcontinue 2\n\t\t\t\tfi\n\t\t\telif (( ! $#tmp1 ))\n\t\t\tthen\n\t\t\t\tif [[ -z "$tpre$tsuf" && -n "$pre$suf" ]]\n\t\t\t\tthen\n\t\t\t\t\tpfxsfx=(-S \'\' "$pfxsfx[@]") \n\t\t\t\telif [[ -n "$haspats" && -z "$tpre$tsuf$suf" && "$pre" = */ ]]\n\t\t\t\tthen\n\t\t\t\t\tPREFIX="${opre}" \n\t\t\t\t\tSUFFIX="${osuf}" \n\t\t\t\t\tcompadd -nQS \'\' - "$linepath$donepath$orig"\n\t\t\t\t\ttmp4=- \n\t\t\t\tfi\n\t\t\t\tcontinue 2\n\t\t\tfi\n\t\t\tif [[ -n "$ignpar" && -z "$_comp_no_ignore" && "$tpre$tsuf" != */* && $#tmp1 -ne 0 && ( "$ignpar" != *dir* || "$pats" = \'*(-/)\' ) && ( "$ignpar" != *..* || "$tmp1[1]" = *../* ) ]]\n\t\t\tthen\n\t\t\t\tcompfiles -i tmp1 ignore "$ignpar" "$prepath$realpath$donepath"\n\t\t\t\t_comp_ignore+=(${(@)ignore#$prepath$realpath$donepath}) \n\t\t\t\t(( $#_comp_ignore && ! $mopts[(I)-F] )) && mopts=("$mopts[@]" -F _comp_ignore) \n\t\t\tfi\n\t\t\tif [[ "$tpre" = */* ]]\n\t\t\tthen\n\t\t\t\ttpre="${tpre#*/}" \n\t\t\telif [[ "$tsuf" = */* ]]\n\t\t\tthen\n\t\t\t\ttpre="${tsuf#*/}" \n\t\t\t\ttsuf= \n\t\t\telse\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\ttmp2="${(M)tpre##${~skips}}" \n\t\t\tif [[ -n "$tmp2" ]]\n\t\t\tthen\n\t\t\t\tskipped="/$tmp2" \n\t\t\t\ttpre="${tpre#$tmp2}" \n\t\t\telse\n\t\t\t\tskipped=/ \n\t\t\tfi\n\t\t\t(( npathcheck = 0 ))\n\t\tdone\n\t\ttmp3="$pre$suf" \n\t\ttpre="$pre" \n\t\ttsuf="$suf" \n\t\tif [[ -n "${prepath}${realpath}${testpath}" ]]\n\t\tthen\n\t\t\tif [[ -o nocaseglob ]]\n\t\t\tthen\n\t\t\t\ttmp1=("${(@)tmp1#(#i)${prepath}${realpath}${testpath}}") \n\t\t\telse\n\t\t\t\ttmp1=("${(@)tmp1#${prepath}${realpath}${testpath}}") \n\t\t\tfi\n\t\tfi\n\t\twhile true\n\t\tdo\n\t\t\tcompfiles -r tmp1 "${(Q)tmp3}"\n\t\t\ttmp4=$? \n\t\t\tif [[ "$tpre" = */* ]]\n\t\t\tthen\n\t\t\t\ttmp2="${cpre}${tpre%%/*}" \n\t\t\t\tPREFIX="${linepath}${donepath}${tmp2}" \n\t\t\t\tSUFFIX="/${tpre#*/}${tsuf#*/}" \n\t\t\telse\n\t\t\t\ttmp2="${cpre}${tpre}" \n\t\t\t\tPREFIX="${linepath}${donepath}${tmp2}" \n\t\t\t\tSUFFIX="${tsuf}" \n\t\t\tfi\n\t\t\tif (( tmp4 ))\n\t\t\tthen\n\t\t\t\ttmp2="$testpath" \n\t\t\t\tif [[ -n "$linepath" ]]\n\t\t\t\tthen\n\t\t\t\t\tcompquote -p tmp2 tmp1\n\t\t\t\telif [[ -n "$tmp2" ]]\n\t\t\t\tthen\n\t\t\t\t\tcompquote -p tmp1\n\t\t\t\t\tcompquote tmp2\n\t\t\t\telse\n\t\t\t\t\tcompquote tmp1 tmp2\n\t\t\t\tfi\n\t\t\t\tif [[ -z "$_comp_correct" && "$compstate[pattern_match]" = \\* && -n "$listsfx" && "$tmp2" = (|*[^\\\\])[][*?#~^\\|\\<\\>]* ]]\n\t\t\t\tthen\n\t\t\t\t\tPREFIX="$opre" \n\t\t\t\t\tSUFFIX="$osuf" \n\t\t\t\tfi\n\t\t\t\tif [[ -z "$compstate[insert]" ]] || {\n\t\t\t\t\t\t! zstyle -t ":completion:${curcontext}:paths" expand suffix && [[ -z "$listsfx" && ( -n "$_comp_correct" || -z "$compstate[pattern_match]" || "$SUFFIX" != */* || "${SUFFIX#*/}" = (|*[^\\\\])[][*?#~^\\|\\<\\>]* ) ]]\n\t\t\t\t\t}\n\t\t\t\tthen\n\t\t\t\t\t(( tmp4 )) && zstyle -t ":completion:${curcontext}:paths" ambiguous && compstate[to_end]= \n\t\t\t\t\tif [[ "$tmp3" = */* ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tif [[ -z "$listsfx" || "$tmp3" != */?* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\ttmp1=("${(@)tmp1%%/*}") \n\t\t\t\t\t\t\t_list_files tmp1 "$prepath$realpath$testpath"\n\t\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp2" -s "/${tmp3#*/}${Uopt:+$ISUFFIX}" -W "$prepath$realpath$testpath" "$pfxsfx[@]" $Mopts $listopts -a tmp1\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttmp1=("${(@)^tmp1%%/*}/${tmp3#*/}") \n\t\t\t\t\t\t\t_list_files tmp1 "$prepath$realpath$testpath"\n\t\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp2" -s "${Uopt:+$ISUFFIX}" -W "$prepath$realpath$testpath" "$pfxsfx[@]" $Mopts $listopts -a tmp1\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\t_list_files tmp1 "$prepath$realpath$testpath"\n\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp2" -s "${Uopt:+$ISUFFIX}" -W "$prepath$realpath$testpath" "$pfxsfx[@]" $Mopts $listopts -a tmp1\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tif [[ "$tmp3" = */* ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\ttmp4=($Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp2" -W "$prepath$realpath$testpath" "$pfxsfx[@]" $Mopts) \n\t\t\t\t\t\tif [[ -z "$listsfx" ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tfor i in "$tmp1[@]"\n\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\ttmpdisp=("$i") \n\t\t\t\t\t\t\t\t_list_files tmpdisp "$prepath$realpath$testpath"\n\t\t\t\t\t\t\t\tcompadd "$tmp4[@]" -s "${Uopt:+$ISUFFIX}" $listopts - "$tmpdisp"\n\t\t\t\t\t\t\tdone\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t[[ -n "$compstate[pattern_match]" ]] && SUFFIX="${SUFFIX:s./.*/}*" \n\t\t\t\t\t\t\tfor i in "$tmp1[@]"\n\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t_list_files i "$prepath$realpath$testpath"\n\t\t\t\t\t\t\t\tcompadd "$tmp4[@]" $listopts - "$i"\n\t\t\t\t\t\t\tdone\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\t_list_files tmp1 "$prepath$realpath$testpath"\n\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp2" -s "${Uopt:+$ISUFFIX}" -W "$prepath$realpath$testpath" "$pfxsfx[@]" $Mopts $listopts -a tmp1\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\ttmp4=- \n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tif [[ "$tmp3" != */* ]]\n\t\t\tthen\n\t\t\t\ttmp4= \n\t\t\t\tbreak\n\t\t\tfi\n\t\t\ttestpath="${testpath}${tmp1[1]%%/*}/" \n\t\t\ttmp3="${tmp3#*/}" \n\t\t\tif [[ "$tpre" = */* ]]\n\t\t\tthen\n\t\t\t\tif [[ -z "$_comp_correct" && -n "$compstate[pattern_match]" && "$tmp2" = (|*[^\\\\])[][*?#~^\\|\\<\\>]* ]]\n\t\t\t\tthen\n\t\t\t\t\tcpre="${cpre}${tmp1[1]%%/*}/" \n\t\t\t\telse\n\t\t\t\t\tcpre="${cpre}${tpre%%/*}/" \n\t\t\t\tfi\n\t\t\t\ttpre="${tpre#*/}" \n\t\t\telif [[ "$tsuf" = */* ]]\n\t\t\tthen\n\t\t\t\t[[ "$tsuf" != /* ]] && mid="$testpath" \n\t\t\t\tif [[ -z "$_comp_correct" && -n "$compstate[pattern_match]" && "$tmp2" = (|*[^\\\\])[][*?#~^\\|\\<\\>]* ]]\n\t\t\t\tthen\n\t\t\t\t\tcpre="${cpre}${tmp1[1]%%/*}/" \n\t\t\t\telse\n\t\t\t\t\tcpre="${cpre}${tpre}/" \n\t\t\t\tfi\n\t\t\t\ttpre="${tsuf#*/}" \n\t\t\t\ttsuf= \n\t\t\telse\n\t\t\t\ttpre= \n\t\t\t\ttsuf= \n\t\t\tfi\n\t\t\ttmp1=("${(@)tmp1#*/}") \n\t\tdone\n\t\tif [[ -z "$tmp4" ]]\n\t\tthen\n\t\t\tif [[ "$mid" = */ ]]\n\t\t\tthen\n\t\t\t\tPREFIX="${opre}" \n\t\t\t\tSUFFIX="${osuf}" \n\t\t\t\ttmp4="${testpath#${mid}}" \n\t\t\t\tif [[ $mid = */*/* ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp3="${mid%/*/}" \n\t\t\t\t\ttmp2="${${mid%/}##*/}" \n\t\t\t\t\tif [[ -n "$linepath" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcompquote -p tmp3\n\t\t\t\t\telse\n\t\t\t\t\t\tcompquote tmp3\n\t\t\t\t\tfi\n\t\t\t\t\tcompquote tmp4 tmp2 tmp1\n\t\t\t\t\tfor i in "$tmp1[@]"\n\t\t\t\t\tdo\n\t\t\t\t\t\t_list_files tmp2 "$prepath$realpath${mid%/*/}"\n\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath$tmp3/" -s "/$tmp4$i${Uopt:+$ISUFFIX}" -W "$prepath$realpath${mid%/*/}/" "$pfxsfx[@]" $Mopts $listopts - "$tmp2"\n\t\t\t\t\tdone\n\t\t\t\telse\n\t\t\t\t\ttmp2="${${mid%/}##*/}" \n\t\t\t\t\tcompquote tmp4 tmp2 tmp1\n\t\t\t\t\tfor i in "$tmp1[@]"\n\t\t\t\t\tdo\n\t\t\t\t\t\t_list_files tmp2 "$prepath$realpath${mid%/*/}"\n\t\t\t\t\t\tcompadd $Uopt -Qf "$mopts[@]" -p "${Uopt:+$IPREFIX}$linepath" -s "/$tmp4$i${Uopt:+$ISUFFIX}" -W "$prepath$realpath" "$pfxsfx[@]" $Mopts $listopts - "$tmp2"\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tif [[ "$osuf" = */* ]]\n\t\t\t\tthen\n\t\t\t\t\tPREFIX="${opre}${osuf}" \n\t\t\t\t\tSUFFIX= \n\t\t\t\telse\n\t\t\t\t\tPREFIX="${opre}" \n\t\t\t\t\tSUFFIX="${osuf}" \n\t\t\t\tfi\n\t\t\t\ttmp4="$testpath" \n\t\t\t\tif [[ -n "$linepath" ]]\n\t\t\t\tthen\n\t\t\t\t\tcompquote -p tmp4 tmp1\n\t\t\t\telif [[ -n "$tmp4" ]]\n\t\t\t\tthen\n\t\t\t\t\tcompquote -p tmp1\n\t\t\t\t\tcompquote tmp4\n\t\t\t\telse\n\t\t\t\t\tcompquote tmp4 tmp1\n\t\t\t\tfi\n\t\t\t\tif [[ -z "$_comp_correct" && -n "$compstate[pattern_match]" && "${PREFIX#\\~}$SUFFIX" = (|*[^\\\\])[][*?#~^\\|\\<\\>]* ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp1=("$linepath$tmp4${(@)^tmp1}") \n\t\t\t\t\t_list_files tmp1 "$prepath$realpath"\n\t\t\t\t\tcompadd -Qf -W "$prepath$realpath" "$pfxsfx[@]" "$mopts[@]" -M "r:|/=* r:|=*" $listopts -a tmp1\n\t\t\t\telse\n\t\t\t\t\t_list_files tmp1 "$prepath$realpath$testpath"\n\t\t\t\t\tcompadd $Uopt -Qf -p "${Uopt:+$IPREFIX}$linepath$tmp4" -s "${Uopt:+$ISUFFIX}" -W "$prepath$realpath$testpath" "$pfxsfx[@]" "$mopts[@]" $Mopts $listopts -a tmp1\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\tif [[ _matcher_num -eq ${#_matchers} ]] && zstyle -t ":completion:${curcontext}:paths" expand prefix && [[ nm -eq compstate[nmatches] && $#exppaths -ne 0 && "$linepath$exppaths" != "$eorig" ]]\n\tthen\n\t\tPREFIX="${opre}" \n\t\tSUFFIX="${osuf}" \n\t\tcompadd -Q "$mopts[@]" -S \'\' -M "r:|/=* r:|=*" -p "$linepath" -a exppaths\n\tfi\n\t[[ nm -ne compstate[nmatches] ]]' _axi-cache 'builtin autoload -XU' _touch 'builtin autoload -XU' _pkg-config 'builtin autoload -XU' compaudit 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-up-case $'\t_zsh_highlight_call_widget .vi-up-case -- "$@"' _lynx 'builtin autoload -XU' _perl_modules 'builtin autoload -XU' _xfig 'builtin autoload -XU' _tree 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-kill-line $'\t_zsh_highlight_call_widget .kill-line -- "$@"' _history 'builtin autoload -XU' _gqview 'builtin autoload -XU' _sysstat 'builtin autoload -XU' hg_prompt_info $'\treturn 1' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-in-word $'\t_zsh_highlight_call_widget .select-in-word -- "$@"' _comp_locale 'builtin autoload -XU' _ant 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-change-whole-line $'\t_zsh_highlight_call_widget .vi-change-whole-line -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-undo-change $'\t_zsh_highlight_call_widget .vi-undo-change -- "$@"' _condition 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-search-forward $'\t_zsh_highlight_call_widget .history-search-forward -- "$@"' _php 'builtin autoload -XU' _hwinfo 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-menu-complete $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-menu-complete -- "$@"' _gnupod 'builtin autoload -XU' _users_on 'builtin autoload -XU' _mysqldiff 'builtin autoload -XU' _zsh_highlight_highlighter_line_predicate $'\t_zsh_highlight_buffer_modified' current_branch $'\tgit_current_branch' _wajig 'builtin autoload -XU' _vared 'builtin autoload -XU' _omz::plugin::enable $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <plugin> [...]" >&2\n\t\treturn 1\n\tfi\n\tlocal -a add_plugins\n\tfor plugin in "$@"\n\tdo\n\t\tif [[ ${plugins[(Ie)$plugin]} -ne 0 ]]\n\t\tthen\n\t\t\t_omz::log warn "plugin \'$plugin\' is already enabled."\n\t\t\tcontinue\n\t\tfi\n\t\tadd_plugins+=("$plugin") \n\tdone\n\tif [[ ${#add_plugins} -eq 0 ]]\n\tthen\n\t\treturn 1\n\tfi\n\tlocal awk_script="\n# if plugins=() is in oneline form, substitute ) with new plugins and go to the next line\n/^\\s*plugins=\\([^#]+\\).*\\$/ {\n  sub(/\\)/, \\" $add_plugins&\\")\n  print \\$0\n  next\n}\n\n# if plugins=() is in multiline form, enable multi flag\n/^\\s*plugins=\\(/ {\n  multi=1\n}\n\n# if multi flag is enabled and we find a valid closing parenthesis,\n# add new plugins and disable multi flag\nmulti == 1 && /^[^#]*\\)/ {\n  multi=0\n  sub(/\\)/, \\" $add_plugins&\\")\n  print \\$0\n  next\n}\n\n{ print \\$0 }\n" \n\tlocal zdot="${ZDOTDIR:-$HOME}" \n\tawk "$awk_script" "$zdot/.zshrc" > "$zdot/.zshrc.new" && command mv -f "$zdot/.zshrc" "$zdot/.zshrc.bck" && command mv -f "$zdot/.zshrc.new" "$zdot/.zshrc"\n\t[[ $? -eq 0 ]] || {\n\t\tlocal ret=$? \n\t\t_omz::log error "error enabling plugins."\n\t\treturn $ret\n\t}\n\tif ! command zsh -n "$zdot/.zshrc"\n\tthen\n\t\t_omz::log error "broken syntax in \'"${zdot/#$HOME/\\~}/.zshrc"\'. Rolling back changes..."\n\t\tcommand mv -f "$zdot/.zshrc" "$zdot/.zshrc.new"\n\t\tcommand mv -f "$zdot/.zshrc.bck" "$zdot/.zshrc"\n\t\treturn 1\n\tfi\n\t_omz::log info "plugins enabled: ${(j:, :)add_plugins}."\n\t[[ ! -o interactive ]] || _omz::reload' _zfs_dataset 'builtin autoload -XU' quote-paste $'\temulate -L zsh\n\tlocal qstyle\n\tzstyle -s :bracketed-paste-magic:finish quote-style qstyle && NUMERIC=1 \n\tcase $qstyle in\n\t\t(b) PASTED=${(b)PASTED}  ;;\n\t\t(q-) PASTED=${(q-)PASTED}  ;;\n\t\t(\\\\|q) PASTED=${(q)PASTED}  ;;\n\t\t(\\\'|qq) PASTED=${(qq)PASTED}  ;;\n\t\t(\\"|qqq) PASTED=${(qqq)PASTED}  ;;\n\t\t(\\$|qqqq) PASTED=${(qqqq)PASTED}  ;;\n\t\t(Q) PASTED=${(Q)PASTED}  ;;\n\tesac' _uscan 'builtin autoload -XU' _xdvi 'builtin autoload -XU' _xft_fonts 'builtin autoload -XU' _vars 'builtin autoload -XU' down-line-or-beginning-search 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-down-case $'\t_zsh_highlight_call_widget .vi-down-case -- "$@"' _toolchain-source 'builtin autoload -XU' _localedef 'builtin autoload -XU' bashcompinit 'builtin autoload -XU' _zed 'builtin autoload -XU' _dpkg 'builtin autoload -XU' _fmt 'builtin autoload -XU' _chkconfig 'builtin autoload -XU' _fetchmail 'builtin autoload -XU' _x_display 'builtin autoload -XU' _ssh 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-delete-char $'\t_zsh_highlight_call_widget .delete-char -- "$@"' _lscfg 'builtin autoload -XU' _extensions 'builtin autoload -XU' urlglobber $'\tlocal -a args globbed localschema otherschema reply\n\tlocal arg command="$1" \n\tshift\n\tzstyle -s :urlglobber url-local-schema localschema \'|\'\n\tzstyle -s :urlglobber url-other-schema otherschema \'|\'\n\tfor arg\n\tdo\n\t\tcase "${arg}" in\n\t\t\t((${~localschema}):/(|/localhost)/*) globbed=(${~${arg##ftp://(localhost|)}}) \n\t\t\t\targs[$#args+1]=("${(M)arg##(${~localchema})://(localhost|)}${(@)^globbed}")  ;;\n\t\t\t((${~otherschema}):*) args[${#args}+1]="$arg"  ;;\n\t\t\t(*) args[${#args}+1]=(${~arg})  ;;\n\t\tesac\n\tdone\n\t"$command" "${(@)args}"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-add-next $'\t_zsh_highlight_call_widget .vi-add-next -- "$@"' _valgrind 'builtin autoload -XU' _java_class 'builtin autoload -XU' _cdr 'builtin autoload -XU' _entr 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-rev-repeat-search $'\t_zsh_highlight_call_widget .vi-rev-repeat-search -- "$@"' _kld 'builtin autoload -XU' _pspdf 'builtin autoload -XU' _apm 'builtin autoload -XU' _zsh_highlight_highlighter_regexp_paint $'\tsetopt localoptions extendedglob\n\tlocal pattern\n\tfor pattern in ${(k)ZSH_HIGHLIGHT_REGEXP}\n\tdo\n\t\t_zsh_highlight_regexp_highlighter_loop "$BUFFER" "$pattern"\n\tdone' git_current_user_name $'\t__git_prompt_git config user.name 2> /dev/null' _apt 'builtin autoload -XU' _killall 'builtin autoload -XU' _user_admin 'builtin autoload -XU' _terminals 'builtin autoload -XU' _zsh_highlight_apply_zle_highlight $'\tlocal entry="$1" default="$2" \n\tinteger first="$3" second="$4" \n\tlocal region="${zle_highlight[(r)${entry}:*]-}" \n\tif [[ -z "$region" ]]\n\tthen\n\t\tregion=$default \n\telse\n\t\tregion="${region#${entry}:}" \n\t\tif [[ -z "$region" ]] || [[ "$region" == none ]]\n\t\tthen\n\t\t\treturn\n\t\tfi\n\tfi\n\tinteger start end\n\tif (( first < second ))\n\tthen\n\t\tstart=$first end=$second \n\telse\n\t\tstart=$second end=$first \n\tfi\n\tregion_highlight+=("$start $end $region, memo=zsh-syntax-highlighting") ' _zfs 'builtin autoload -XU' _omz::help $'\tcat >&2 <<EOF\nUsage: omz <command> [options]\n\nAvailable commands:\n\n  help                Print this help message\n  changelog           Print the changelog\n  plugin <command>    Manage plugins\n  pr     <command>    Manage Oh My Zsh Pull Requests\n  reload              Reload the current zsh session\n  theme  <command>    Manage themes\n  update              Update Oh My Zsh\n  version             Show the version\n\nEOF' git_current_branch $'\tlocal ref\n\tref=$(__git_prompt_git symbolic-ref --quiet HEAD 2> /dev/null) \n\tlocal ret=$? \n\tif [[ $ret != 0 ]]\n\tthen\n\t\t[[ $ret == 128 ]] && return\n\t\tref=$(__git_prompt_git rev-parse --short HEAD 2> /dev/null)  || return\n\tfi\n\techo ${ref#refs/heads/}' _zsh_highlight_widget_orig-s0.0000050000-r18109-visual-mode $'\t_zsh_highlight_call_widget .visual-mode -- "$@"' _mkdir 'builtin autoload -XU' _mosh 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-neg-argument $'\t_zsh_highlight_call_widget .neg-argument -- "$@"' _pfexec 'builtin autoload -XU' _basename 'builtin autoload -XU' _loadkeys 'builtin autoload -XU' _man 'builtin autoload -XU' _ngrep 'builtin autoload -XU' _acpi 'builtin autoload -XU' _inetadm 'builtin autoload -XU' _logical_volumes 'builtin autoload -XU' _svcs_fmri 'builtin autoload -XU' _options 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-line-or-beginning-search $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-down-line-or-beginning-search -- "$@"' _dumper 'builtin autoload -XU' _zcalc 'builtin autoload -XU' _readelf 'builtin autoload -XU' _sd_hosts_or_user_at_host 'builtin autoload -XU' _gsettings 'builtin autoload -XU' _date_formats 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-deactivate-region $'\t_zsh_highlight_call_widget .deactivate-region -- "$@"' _debsign 'builtin autoload -XU' _tcpdump 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-beginning-of-line-hist $'\t_zsh_highlight_call_widget .beginning-of-line-hist -- "$@"' _date 'builtin autoload -XU' _other_accounts 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-reset-prompt $'\t_zsh_highlight_call_widget .reset-prompt -- "$@"' _arp 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-quoted-insert $'\t_zsh_highlight_call_widget .quoted-insert -- "$@"' take $'\tif [[ $1 =~ ^(https?|ftp).*\\.tar\\.(gz|bz2|xz)$ ]]\n\tthen\n\t\ttakeurl "$1"\n\telif [[ $1 =~ ^([A-Za-z0-9]\\+@|https?|git|ssh|ftps?|rsync).*\\.git/?$ ]]\n\tthen\n\t\ttakegit "$1"\n\telse\n\t\ttakedir "$@"\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-case-word $'\t_zsh_highlight_call_widget .up-case-word -- "$@"' _antiword 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-and-menu-complete $'\t_zsh_highlight_call_widget .accept-and-menu-complete -- "$@"' _systemd-analyze 'builtin autoload -XU' _stgit 'builtin autoload -XU' _urpmi 'builtin autoload -XU' _tput 'builtin autoload -XU' _omz::theme::list $'\tlocal -a custom_themes builtin_themes\n\tcustom_themes=("$ZSH_CUSTOM"/**/*.zsh-theme(-.N:r:gs:"$ZSH_CUSTOM"/themes/:::gs:"$ZSH_CUSTOM"/:::)) \n\tbuiltin_themes=("$ZSH"/themes/*.zsh-theme(-.N:t:r)) \n\tif [[ ! -t 1 ]]\n\tthen\n\t\tprint -l ${(q-)custom_themes} ${(q-)builtin_themes}\n\t\treturn\n\tfi\n\tif [[ -n "$ZSH_THEME" ]]\n\tthen\n\t\tprint -Pn "%U%BCurrent theme%b%u: "\n\t\t[[ $ZSH_THEME = random ]] && echo "$RANDOM_THEME (via random)" || echo "$ZSH_THEME"\n\t\techo\n\tfi\n\tif (( ${#custom_themes} ))\n\tthen\n\t\tprint -P "%U%BCustom themes%b%u:"\n\t\tprint -l ${(q-)custom_themes} | column -x\n\t\techo\n\tfi\n\tprint -P "%U%BBuilt-in themes%b%u:"\n\tprint -l ${(q-)builtin_themes} | column -x' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-forward-blank-word $'\t_zsh_highlight_call_widget .vi-forward-blank-word -- "$@"' _mencal 'builtin autoload -XU' _dates 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-insert $'\t_zsh_highlight_call_widget .vi-insert -- "$@"' _sqlite 'builtin autoload -XU' _disable 'builtin autoload -XU' _x_color 'builtin autoload -XU' _qemu 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_read_comp $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_read_comp -- "$@"' _stat 'builtin autoload -XU' _lighttpd 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-set-mark $'\t_zsh_highlight_call_widget .vi-set-mark -- "$@"' _patchutils 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-kill-buffer $'\t_zsh_highlight_call_widget .kill-buffer -- "$@"' _rar 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-delete-char-or-list $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-delete-char-or-list -- "$@"' _systat 'builtin autoload -XU' _pkgadd 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_bash_complete-word $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_bash_complete-word -- "$@"' _zip 'builtin autoload -XU' _mkshortcut 'builtin autoload -XU' _zsh-mime-handler 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-down-line-or-history $'\t_zsh_highlight_call_widget .vi-down-line-or-history -- "$@"' _finger 'builtin autoload -XU' _xt_session_id 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_double_quote $'\tlocal -a breaks match mbegin mend saved_reply\n\tlocal MATCH\n\tinteger last_break=$(( start_pos + $1 - 1 )) MBEGIN MEND \n\tlocal i j k ret style\n\treply=() \n\tfor ((i = $1 + 1 ; i <= $#arg ; i += 1 )) do\n\t\t(( j = i + start_pos - 1 ))\n\t\t(( k = j + 1 ))\n\t\tcase "$arg[$i]" in\n\t\t\t(\'"\') break ;;\n\t\t\t(\'`\') saved_reply=($reply) \n\t\t\t\t_zsh_highlight_main_highlighter_highlight_backtick $i\n\t\t\t\t(( i = REPLY ))\n\t\t\t\treply=($saved_reply $reply) \n\t\t\t\tcontinue ;;\n\t\t\t(\'$\') style=dollar-double-quoted-argument \n\t\t\t\tif [[ ${arg:$i} =~ ^([A-Za-z_][A-Za-z0-9_]*|[0-9]+) ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += $#MATCH ))\n\t\t\t\t\t(( i += $#MATCH ))\n\t\t\t\telif [[ ${arg:$i} =~ ^[{]([A-Za-z_][A-Za-z0-9_]*|[0-9]+)[}] ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += $#MATCH ))\n\t\t\t\t\t(( i += $#MATCH ))\n\t\t\t\telif [[ $arg[i+1] == \'$\' ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += 1 ))\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\telif [[ $arg[i+1] == [-#*@?] ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += 1 ))\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\telif [[ $arg[i+1] == $\'\\x28\' ]]\n\t\t\t\tthen\n\t\t\t\t\tsaved_reply=($reply) \n\t\t\t\t\tif [[ $arg[i+2] == $\'\\x28\' ]] && _zsh_highlight_main_highlighter_highlight_arithmetic $i\n\t\t\t\t\tthen\n\t\t\t\t\t\t(( i = REPLY ))\n\t\t\t\t\t\treply=($saved_reply $reply) \n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tbreaks+=($last_break $(( start_pos + i - 1 ))) \n\t\t\t\t\t(( i += 2 ))\n\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_list $(( start_pos + i - 1 )) S $has_end $arg[i,-1]\n\t\t\t\t\tret=$? \n\t\t\t\t\t(( i += REPLY ))\n\t\t\t\t\tlast_break=$(( start_pos + i )) \n\t\t\t\t\treply=($saved_reply $j $(( start_pos + i )) command-substitution-quoted $j $(( j + 2 )) command-substitution-delimiter-quoted $reply) \n\t\t\t\t\tif (( ret == 0 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\treply+=($(( start_pos + i - 1 )) $(( start_pos + i )) command-substitution-delimiter-quoted) \n\t\t\t\t\tfi\n\t\t\t\t\tcontinue\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\t\t("\\\\") style=back-double-quoted-argument \n\t\t\t\tif [[ \\\\\\`\\"\\$${histchars[1]} == *$arg[$i+1]* ]]\n\t\t\t\tthen\n\t\t\t\t\t(( k += 1 ))\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\t\t($histchars[1]) if [[ $arg[i+1] != (\'=\'|$\'\\x28\'|$\'\\x7b\'|[[:blank:]]) ]]\n\t\t\t\tthen\n\t\t\t\t\tstyle=history-expansion \n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\t\t(*) continue ;;\n\t\tesac\n\t\treply+=($j $k $style) \n\tdone\n\tif [[ $arg[i] == \'"\' ]]\n\tthen\n\t\tstyle=double-quoted-argument \n\telse\n\t\t(( i-- ))\n\t\tstyle=double-quoted-argument-unclosed \n\tfi\n\t(( last_break != start_pos + i )) && breaks+=($last_break $(( start_pos + i ))) \n\tsaved_reply=($reply) \n\treply=() \n\tfor 1 2 in $breaks\n\tdo\n\t\t(( $1 != $2 )) && reply+=($1 $2 $style) \n\tdone\n\treply+=($saved_reply) \n\tREPLY=$i ' _umountable 'builtin autoload -XU' _dpkg-cross 'builtin autoload -XU' _kvno 'builtin autoload -XU' _systemd-delta 'builtin autoload -XU' _dladm 'builtin autoload -XU' _sysctl 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-copy-prev-shell-word $'\t_zsh_highlight_call_widget .copy-prev-shell-word -- "$@"' takedir $'\tmkdir -p $@ && cd ${@:$#}' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-beginning-search-forward $'\t_zsh_highlight_call_widget .history-beginning-search-forward -- "$@"' _x_modifier 'builtin autoload -XU' _urxvt 'builtin autoload -XU' _run-help 'builtin autoload -XU' _match 'builtin autoload -XU' _x_window 'builtin autoload -XU' git_prompt_info $'\tif ! __git_prompt_git rev-parse --git-dir &> /dev/null || [[ "$(__git_prompt_git config --get oh-my-zsh.hide-info 2>/dev/null)" == 1 ]]\n\tthen\n\t\treturn 0\n\tfi\n\tlocal ref\n\tref=$(__git_prompt_git symbolic-ref --short HEAD 2> /dev/null)  || ref=$(__git_prompt_git rev-parse --short HEAD 2> /dev/null)  || return 0\n\tlocal upstream\n\tif (( ${+ZSH_THEME_GIT_SHOW_UPSTREAM} ))\n\tthen\n\t\tupstream=$(__git_prompt_git rev-parse --abbrev-ref --symbolic-full-name "@{upstream}" 2>/dev/null)  && upstream=" -> ${upstream}" \n\tfi\n\techo "${ZSH_THEME_GIT_PROMPT_PREFIX}${ref:gs/%/%%}${upstream:gs/%/%%}$(parse_git_dirty)${ZSH_THEME_GIT_PROMPT_SUFFIX}"' _cvsup 'builtin autoload -XU' _ecasound 'builtin autoload -XU' _perl 'builtin autoload -XU' _zsh_highlight_highlighter_regexp_predicate $'\t_zsh_highlight_buffer_modified' _ulimit 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-history $'\t_zsh_highlight_call_widget .up-history -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-find-prev-char-skip $'\t_zsh_highlight_call_widget .vi-find-prev-char-skip -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-pound-insert $'\t_zsh_highlight_call_widget .pound-insert -- "$@"' _systemd-tmpfiles 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-forward-word $'\t_zsh_highlight_call_widget .vi-forward-word -- "$@"' _pick_variant $'\tlocal output cmd pat\n\tlocal -a var\n\tlocal -A opts\n\t(( $+_cmd_variant )) || typeset -gA _cmd_variant\n\tzparseopts -D -A opts b: c: r:\n\t: ${opts[-c]:=$words[1]}\n\twhile [[ $1 = *=* ]]\n\tdo\n\t\tvar+=("${1%%\\=*}" "${1#*=}") \n\t\tshift\n\tdone\n\tif (( $+_cmd_variant[$opts[-c]] ))\n\tthen\n\t\t(( $+opts[-r] )) && eval "${opts[-r]}=${_cmd_variant[$opts[-c]]}"\n\t\t[[ $_cmd_variant[$opts[-c]] = "$1" ]] && return 1\n\t\treturn 0\n\tfi\n\tif [[ $+opts[-b] -eq 1 && -n $builtins[$opts[-c]] ]]\n\tthen\n\t\t_cmd_variant[$opts[-c]]=$opts[-b] \n\t\t(( $+opts[-r] )) && eval "${opts[-r]}=${_cmd_variant[$opts[-c]]}"\n\t\treturn 0\n\tfi\n\toutput="$(_call_program variant $opts[-c] "${@[2,-1]}" </dev/null 2>&1)" \n\tfor cmd pat in "$var[@]"\n\tdo\n\t\tif [[ $output = *$~pat* ]]\n\t\tthen\n\t\t\t(( $+opts[-r] )) && eval "${opts[-r]}=$cmd"\n\t\t\t_cmd_variant[$opts[-c]]="$cmd" \n\t\t\treturn 0\n\t\tfi\n\tdone\n\t(( $+opts[-r] )) && eval "${opts[-r]}=$1"\n\t_cmd_variant[$opts[-c]]="$1" \n\treturn 1' _baudrates 'builtin autoload -XU' _beep 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-blank-word-end $'\t_zsh_highlight_call_widget .vi-backward-blank-word-end -- "$@"' _xclip 'builtin autoload -XU' _fsh 'builtin autoload -XU' _history_complete_word 'builtin autoload -XU' _kernel-install 'builtin autoload -XU' _fuser 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-put-replace-selection $'\t_zsh_highlight_call_widget .put-replace-selection -- "$@"' _mysql_utils 'builtin autoload -XU' _rcs 'builtin autoload -XU' _first $'\t' _zsh_highlight_main_calculate_fallback $'\tlocal -A fallback_of\n\tfallback_of=(alias arg0 suffix-alias arg0 global-alias dollar-double-quoted-argument builtin arg0 function arg0 command arg0 precommand arg0 hashed-command arg0 autodirectory arg0 arg0_\\* arg0 path_prefix path path_pathseparator path path_prefix_pathseparator path_prefix single-quoted-argument{-unclosed,} double-quoted-argument{-unclosed,} dollar-quoted-argument{-unclosed,} back-quoted-argument{-unclosed,} command-substitution{-quoted,,-unquoted,} command-substitution-delimiter{-quoted,,-unquoted,} command-substitution{-delimiter,} process-substitution{-delimiter,} back-quoted-argument{-delimiter,}) \n\tlocal needle=$1 value \n\treply=($1) \n\twhile [[ -n ${value::=$fallback_of[(k)$needle]} ]]\n\tdo\n\t\tunset "fallback_of[$needle]"\n\t\treply+=($value) \n\t\tneedle=$value \n\tdone' _pon 'builtin autoload -XU' _uml 'builtin autoload -XU' _zcat 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-in-blank-word $'\t_zsh_highlight_call_widget .select-in-blank-word -- "$@"' _curl 'builtin autoload -XU' _augeas 'builtin autoload -XU' _rcctl 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-delete-char $'\t_zsh_highlight_call_widget .backward-delete-char -- "$@"' _texinfo 'builtin autoload -XU' _kfmclient 'builtin autoload -XU' _zsh_highlight_bind_widgets $'\tsetopt localoptions noksharrays\n\ttypeset -F SECONDS\n\tlocal prefix=orig-s$SECONDS-r$RANDOM \n\tzmodload zsh/zleparameter 2> /dev/null || {\n\t\tprint -r -- \'zsh-syntax-highlighting: failed loading zsh/zleparameter.\' >&2\n\t\treturn 1\n\t}\n\tlocal -U widgets_to_bind\n\twidgets_to_bind=(${${(k)widgets}:#(.*|run-help|which-command|beep|set-local-history|yank|yank-pop)}) \n\twidgets_to_bind+=(zle-line-finish) \n\twidgets_to_bind+=(zle-isearch-update) \n\tlocal cur_widget\n\tfor cur_widget in $widgets_to_bind\n\tdo\n\t\tcase ${widgets[$cur_widget]:-""} in\n\t\t\t(user:_zsh_highlight_widget_*)  ;;\n\t\t\t(user:*) zle -N $prefix-$cur_widget ${widgets[$cur_widget]#*:}\n\t\t\t\teval "_zsh_highlight_widget_${(q)prefix}-${(q)cur_widget}() { _zsh_highlight_call_widget ${(q)prefix}-${(q)cur_widget} -- \\"\\$@\\" }"\n\t\t\t\tzle -N $cur_widget _zsh_highlight_widget_$prefix-$cur_widget ;;\n\t\t\t(completion:*) zle -C $prefix-$cur_widget ${${(s.:.)widgets[$cur_widget]}[2,3]}\n\t\t\t\teval "_zsh_highlight_widget_${(q)prefix}-${(q)cur_widget}() { _zsh_highlight_call_widget ${(q)prefix}-${(q)cur_widget} -- \\"\\$@\\" }"\n\t\t\t\tzle -N $cur_widget _zsh_highlight_widget_$prefix-$cur_widget ;;\n\t\t\t(builtin) eval "_zsh_highlight_widget_${(q)prefix}-${(q)cur_widget}() { _zsh_highlight_call_widget .${(q)cur_widget} -- \\"\\$@\\" }"\n\t\t\t\tzle -N $cur_widget _zsh_highlight_widget_$prefix-$cur_widget ;;\n\t\t\t(*) if [[ $cur_widget == zle-* ]] && (( ! ${+widgets[$cur_widget]} ))\n\t\t\t\tthen\n\t\t\t\t\t_zsh_highlight_widget_${cur_widget} () {\n\t\t\t\t\t\t:\n\t\t\t\t\t\t_zsh_highlight\n\t\t\t\t\t}\n\t\t\t\t\tzle -N $cur_widget _zsh_highlight_widget_$cur_widget\n\t\t\t\telse\n\t\t\t\t\tprint -r -- "zsh-syntax-highlighting: unhandled ZLE widget ${(qq)cur_widget}" >&2\n\t\t\t\t\tprint -r -- "zsh-syntax-highlighting: (This is sometimes caused by doing \\`bindkey <keys> ${(q-)cur_widget}\\` without creating the ${(qq)cur_widget} widget with \\`zle -N\\` or \\`zle -C\\`.)" >&2\n\t\t\t\tfi ;;\n\t\tesac\n\tdone' svn_prompt_info $'\treturn 1' _systemd 'builtin autoload -XU' _zle 'builtin autoload -XU' _vserver 'builtin autoload -XU' _math_params 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-beginning-search-backward $'\t_zsh_highlight_call_widget .history-beginning-search-backward -- "$@"' _bsdinstall 'builtin autoload -XU' _source 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-add-eol $'\t_zsh_highlight_call_widget .vi-add-eol -- "$@"' _complete_tag 'builtin autoload -XU' _xxd 'builtin autoload -XU' _ffmpeg 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_history-complete-newer $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_history-complete-newer -- "$@"' _beadm 'builtin autoload -XU' _xautolock 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-argument-base $'\t_zsh_highlight_call_widget .argument-base -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-forward-word-end $'\t_zsh_highlight_call_widget .vi-forward-word-end -- "$@"' _nice 'builtin autoload -XU' _xt_arguments 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-unindent $'\t_zsh_highlight_call_widget .vi-unindent -- "$@"' zle-line-init $'\techoti smkx' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-goto-mark-line $'\t_zsh_highlight_call_widget .vi-goto-mark-line -- "$@"' _awk 'builtin autoload -XU' _bindkey 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-history $'\t_zsh_highlight_call_widget .down-history -- "$@"' _kill 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-goto-mark $'\t_zsh_highlight_call_widget .vi-goto-mark -- "$@"' _omz::version $'\t(\n\t\tbuiltin cd -q "$ZSH"\n\t\tlocal version\n\t\tversion=$(command git describe --tags HEAD 2>/dev/null)  || version=$(command git symbolic-ref --quiet --short HEAD 2>/dev/null)  || version=$(command git name-rev --no-undefined --name-only --exclude="remotes/*" HEAD 2>/dev/null)  || version="<detached>" \n\t\tlocal commit=$(command git rev-parse --short HEAD 2>/dev/null) \n\t\tprintf "%s (%s)\\n" "$version" "$commit"\n\t)' _zsh_highlight_widget_orig-s0.0000050000-r18109-digit-argument $'\t_zsh_highlight_call_widget .digit-argument -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-first-non-blank $'\t_zsh_highlight_call_widget .vi-first-non-blank -- "$@"' _mac_applications 'builtin autoload -XU' _volume_groups 'builtin autoload -XU' _cplay 'builtin autoload -XU' _have_glob_qual $'\tlocal complete\n\t[[ $2 = complete ]] && complete=")" \n\t[[ -z $compstate[quote] && ( ( $_comp_caller_options[bareglobqual] == on && $1 = (#b)(((*[^\\\\\\$]|)(\\\\\\\\)#)\\()([^\\)\\|\\~]#)$complete && ${#match[1]} -gt 1 ) || ( $_comp_caller_options[extendedglob] == on && $1 = (#b)(((*[^\\\\\\$]|)(\\\\\\\\)#)"(#q")([^\\)]#)$complete ) ) ]]' git_repo_name $'\tlocal repo_path\n\tif repo_path="$(__git_prompt_git rev-parse --show-toplevel 2>/dev/null)"  && [[ -n "$repo_path" ]]\n\tthen\n\t\techo ${repo_path:t}\n\tfi' _tpconfig 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-redo $'\t_zsh_highlight_call_widget .redo -- "$@"' _postscript 'builtin autoload -XU' _paste 'builtin autoload -XU' _zmv 'builtin autoload -XU' _zsh_highlight_main__is_redirection $'\t[[ $1 == (<0-9>|)(\\<|\\>)* ]] && [[ $1 != (\\<|\\>)$\'\\x28\'* ]] && [[ $1 != *\'<\'*\'-\'*\'>\'* ]]' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-cmd-mode $'\t_zsh_highlight_call_widget .vi-cmd-mode -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-end-of-line-hist $'\t_zsh_highlight_call_widget .end-of-line-hist -- "$@"' _tcptraceroute 'builtin autoload -XU' _zsh_highlight_brackets_match $'\tcase $BUFFER[$1] in\n\t\t(\\() [[ $BUFFER[$2] == \\) ]] ;;\n\t\t(\\[) [[ $BUFFER[$2] == \\] ]] ;;\n\t\t(\\{) [[ $BUFFER[$2] == \\} ]] ;;\n\t\t(*) false ;;\n\tesac' _urls 'builtin autoload -XU' compinstall 'builtin autoload -XU' _be_name 'builtin autoload -XU' _getent 'builtin autoload -XU' _fuse_arguments 'builtin autoload -XU' _dpkg-repack 'builtin autoload -XU' _normal $'\tlocal _comp_command1 _comp_command2 _comp_command skip\n\tif [[ "$1" = -s ]]\n\tthen\n\t\tskip=(-s) \n\telse\n\t\tskip=() \n\t\t_compskip=\'\' \n\tfi\n\tif [[ -o BANG_HIST && ( ( $words[CURRENT] = \\!*: && -z $compstate[quote] ) || ( $words[CURRENT] = \\"\\!*: && $compstate[all_quotes] = \\" ) ) ]]\n\tthen\n\t\tPREFIX=${PREFIX//\\\\!/!} \n\t\tcompset -P \'*:\'\n\t\t_history_modifiers h\n\t\treturn\n\tfi\n\tif [[ CURRENT -eq 1 ]]\n\tthen\n\t\tcurcontext="${curcontext%:*:*}:-command-:" \n\t\tcomp="$_comps[-command-]" \n\t\t[[ -n "$comp" ]] && eval "$comp" && return\n\t\treturn 1\n\tfi\n\t_set_command\n\t_dispatch "$skip[@]" "$_comp_command" "$_comp_command1" "$_comp_command2" -default-' _time_zone 'builtin autoload -XU' _all_labels $'\tlocal __gopt __len __tmp __pre __suf __ret=1 __descr __spec __prev \n\tif [[ "$1" = - ]]\n\tthen\n\t\t__prev=- \n\t\tshift\n\tfi\n\t__gopt=() \n\tzparseopts -D -a __gopt 1 2 V J x\n\t__tmp=${argv[(ib:4:)-]} \n\t__len=$# \n\tif [[ __tmp -lt __len ]]\n\tthen\n\t\t__pre=$(( __tmp-1 )) \n\t\t__suf=$__tmp \n\telif [[ __tmp -eq $# ]]\n\tthen\n\t\t__pre=-2 \n\t\t__suf=$(( __len+1 )) \n\telse\n\t\t__pre=4 \n\t\t__suf=5 \n\tfi\n\twhile comptags "-A$__prev" "$1" curtag __spec\n\tdo\n\t\t(( $#funcstack > _tags_level )) && _comp_tags="${_comp_tags% * }" \n\t\t_tags_level=$#funcstack \n\t\t_comp_tags="$_comp_tags $__spec " \n\t\tif [[ "$curtag" = *[^\\\\]:* ]]\n\t\tthen\n\t\t\tzformat -f __descr "${curtag#*:}" "d:$3"\n\t\t\t_description "$__gopt[@]" "${curtag%:*}" "$2" "$__descr"\n\t\t\tcurtag="${curtag%:*}" \n\t\t\t"$4" "${(P@)2}" "${(@)argv[5,-1]}" && __ret=0 \n\t\telse\n\t\t\t_description "$__gopt[@]" "$curtag" "$2" "$3"\n\t\t\t"${(@)argv[4,__pre]}" "${(P@)2}" "${(@)argv[__suf,-1]}" && __ret=0 \n\t\tfi\n\tdone\n\treturn __ret' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-a-shell-word $'\t_zsh_highlight_call_widget .select-a-shell-word -- "$@"' _getfacl 'builtin autoload -XU' _floppy 'builtin autoload -XU' _coreadm 'builtin autoload -XU' _tracepath 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-indent $'\t_zsh_highlight_call_widget .vi-indent -- "$@"' _deb_architectures 'builtin autoload -XU' _cmp 'builtin autoload -XU' _yast 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_correct_filename $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_correct_filename -- "$@"' _dcop 'builtin autoload -XU' _zargs 'builtin autoload -XU' _regex_words 'builtin autoload -XU' _lsusb 'builtin autoload -XU' _zypper 'builtin autoload -XU' _dhcpinfo 'builtin autoload -XU' _cdbs-edit-patch 'builtin autoload -XU' is_theme $'\tlocal base_dir=$1 \n\tlocal name=$2 \n\tbuiltin test -f $base_dir/$name.zsh-theme' _monotone 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-set-buffer $'\t_zsh_highlight_call_widget .vi-set-buffer -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-zle-line-init $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-zle-line-init -- "$@"' _tilde 'builtin autoload -XU' _guard 'builtin autoload -XU' _knock 'builtin autoload -XU' _path_commands_caching_policy $'\tlocal file\n\tlocal -a oldp dbfiles\n\toldp=("$1"(Nmw+1)) \n\t(( $#oldp )) && return 0\n\tdbfiles=(/usr/share/man/index.(bt|db|dir|pag)(N) /usr/man/index.(bt|db|dir|pag)(N) /var/cache/man/index.(bt|db|dir|pag)(N) /var/catman/index.(bt|db|dir|pag)(N) /usr/share/man/*/whatis(N)) \n\tfor file in $dbfiles\n\tdo\n\t\t[[ $file -nt $1 ]] && return 0\n\tdone\n\treturn 1' _zsh_highlight_widget_orig-s0.0000050000-r18109-beginning-of-line $'\t_zsh_highlight_call_widget .beginning-of-line -- "$@"' _functions 'builtin autoload -XU' _omz::plugin::info $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <plugin>" >&2\n\t\treturn 1\n\tfi\n\tlocal readme\n\tfor readme in "$ZSH_CUSTOM/plugins/$1/README.md" "$ZSH/plugins/$1/README.md"\n\tdo\n\t\tif [[ -f "$readme" ]]\n\t\tthen\n\t\t\t(( ${+commands[less]} )) && less "$readme" || cat "$readme"\n\t\t\treturn 0\n\t\tfi\n\tdone\n\tif [[ -d "$ZSH_CUSTOM/plugins/$1" || -d "$ZSH/plugins/$1" ]]\n\tthen\n\t\t_omz::log error "the \'$1\' plugin doesn\'t have a README file"\n\telse\n\t\t_omz::log error "\'$1\' plugin not found"\n\tfi\n\treturn 1' _cache_invalid 'builtin autoload -XU' _dput 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_arithmetic $'\tlocal -a saved_reply\n\tlocal style\n\tinteger i j k paren_depth ret\n\treply=() \n\tfor ((i = $1 + 3 ; i <= end_pos - start_pos ; i += 1 )) do\n\t\t(( j = i + start_pos - 1 ))\n\t\t(( k = j + 1 ))\n\t\tcase "$arg[$i]" in\n\t\t\t([\\\'\\"\\\\@{}]) style=unknown-token  ;;\n\t\t\t(\'(\') (( paren_depth++ ))\n\t\t\t\tcontinue ;;\n\t\t\t(\')\') if (( paren_depth ))\n\t\t\t\tthen\n\t\t\t\t\t(( paren_depth-- ))\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\t[[ $arg[i+1] == \')\' ]] && {\n\t\t\t\t\t(( i++ ))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t(( has_end && (len == k) )) && break\n\t\t\t\treturn 1 ;;\n\t\t\t(\'`\') saved_reply=($reply) \n\t\t\t\t_zsh_highlight_main_highlighter_highlight_backtick $i\n\t\t\t\t(( i = REPLY ))\n\t\t\t\treply=($saved_reply $reply) \n\t\t\t\tcontinue ;;\n\t\t\t(\'$\') if [[ $arg[i+1] == $\'\\x28\' ]]\n\t\t\t\tthen\n\t\t\t\t\tsaved_reply=($reply) \n\t\t\t\t\tif [[ $arg[i+2] == $\'\\x28\' ]] && _zsh_highlight_main_highlighter_highlight_arithmetic $i\n\t\t\t\t\tthen\n\t\t\t\t\t\t(( i = REPLY ))\n\t\t\t\t\t\treply=($saved_reply $reply) \n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\t(( i += 2 ))\n\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_list $(( start_pos + i - 1 )) S $has_end $arg[i,end_pos]\n\t\t\t\t\tret=$? \n\t\t\t\t\t(( i += REPLY ))\n\t\t\t\t\treply=($saved_reply $j $(( start_pos + i )) command-substitution-quoted $j $(( j + 2 )) command-substitution-delimiter-quoted $reply) \n\t\t\t\t\tif (( ret == 0 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\treply+=($(( start_pos + i - 1 )) $(( start_pos + i )) command-substitution-delimiter) \n\t\t\t\t\tfi\n\t\t\t\t\tcontinue\n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\t\t($histchars[1]) if [[ $arg[i+1] != (\'=\'|$\'\\x28\'|$\'\\x7b\'|[[:blank:]]) ]]\n\t\t\t\tthen\n\t\t\t\t\tstyle=history-expansion \n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\t\t(*) continue ;;\n\t\tesac\n\t\treply+=($j $k $style) \n\tdone\n\tif [[ $arg[i] != \')\' ]]\n\tthen\n\t\t(( i-- ))\n\tfi\n\tstyle=arithmetic-expansion \n\treply=($(( start_pos + $1 - 1)) $(( start_pos + i )) arithmetic-expansion $reply) \n\tREPLY=$i ' _gprof 'builtin autoload -XU' _complete_debug 'builtin autoload -XU' git_develop_branch $'\tcommand git rev-parse --git-dir &> /dev/null || return\n\tlocal branch\n\tfor branch in dev devel development\n\tdo\n\t\tif command git show-ref -q --verify refs/heads/$branch\n\t\tthen\n\t\t\techo $branch\n\t\t\treturn\n\t\tfi\n\tdone\n\techo develop' _update-alternatives 'builtin autoload -XU' _rubber 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-emacs-forward-word $'\t_zsh_highlight_call_widget .emacs-forward-word -- "$@"' _ipset 'builtin autoload -XU' parse_git_dirty $'\tlocal STATUS\n\tlocal -a FLAGS\n\tFLAGS=(\'--porcelain\') \n\tif [[ "$(__git_prompt_git config --get oh-my-zsh.hide-dirty)" != "1" ]]\n\tthen\n\t\tif [[ "${DISABLE_UNTRACKED_FILES_DIRTY:-}" == "true" ]]\n\t\tthen\n\t\t\tFLAGS+=\'--untracked-files=no\' \n\t\tfi\n\t\tcase "${GIT_STATUS_IGNORE_SUBMODULES:-}" in\n\t\t\t(git)  ;;\n\t\t\t(*) FLAGS+="--ignore-submodules=${GIT_STATUS_IGNORE_SUBMODULES:-dirty}"  ;;\n\t\tesac\n\t\tSTATUS=$(__git_prompt_git status ${FLAGS} 2> /dev/null | tail -n 1) \n\tfi\n\tif [[ -n $STATUS ]]\n\tthen\n\t\techo "$ZSH_THEME_GIT_PROMPT_DIRTY"\n\telse\n\t\techo "$ZSH_THEME_GIT_PROMPT_CLEAN"\n\tfi' _arch_namespace 'builtin autoload -XU' _systemd-run 'builtin autoload -XU' _omz::pr $'\t(( $# > 0 && $+functions[$0::$1] )) || {\n\t\tcat >&2 <<EOF\nUsage: ${(j: :)${(s.::.)0#_}} <command> [options]\n\nAvailable commands:\n\n  clean                       Delete all PR branches (ohmyzsh/pull-*)\n  test <PR_number_or_URL>     Fetch PR #NUMBER and rebase against master\n\nEOF\n\t\treturn 1\n\t}\n\tlocal command="$1" \n\tshift\n\t$0::$command "$@"' _limits 'builtin autoload -XU' _files $'\tlocal -a match mbegin mend\n\tlocal ret=1 \n\tif _have_glob_qual $PREFIX\n\tthen\n\t\tcompset -p ${#match[1]}\n\t\tcompset -S \'[^\\)\\|\\~]#(|\\))\'\n\t\tif [[ $_comp_caller_options[extendedglob] == on ]] && compset -P \'\\#\'\n\t\tthen\n\t\t\t_globflags && ret=0 \n\t\telse\n\t\t\tif [[ $_comp_caller_options[extendedglob] == on ]]\n\t\t\tthen\n\t\t\t\t_describe -t globflags "glob flag" \'(\\#:introduce\\ glob\\ flag)\' -Q -S \'\' && ret=0 \n\t\t\tfi\n\t\t\t_globquals && ret=0 \n\t\tfi\n\t\treturn ret\n\tfi\n\tlocal opts tmp glob pat pats expl tag i def descr end ign tried\n\tlocal type sdef ignvars ignvar prepath oprefix rfiles rfile\n\tzparseopts -a opts \'/=tmp\' \'f=tmp\' \'g+:-=tmp\' q n 1 2 P: S: r: R: W: X+: M+: F: J+: V+:\n\ttype="${(@j::M)${(@)tmp#-}#?}" \n\tif (( $tmp[(I)-g*] ))\n\tthen\n\t\tglob="${${${(@)${(@M)tmp:#-g*}#-g}##[[:blank:]]#}%%[[:blank:]]#}" \n\t\t[[ "$glob" = *[^\\\\][[:blank:]]* ]] && glob="{${glob//(#b)([^\\\\])[[:blank:]]##/${match[1]},}}" \n\t\t[[ "$glob" = (#b)(*\\()([^\\|\\~]##\\)) && $match[2] != \\#q* ]] && glob="${match[1]}#q${match[2]}" \n\telif [[ $type = */* ]]\n\tthen\n\t\tglob="*(#q-/)" \n\tfi\n\ttmp=$opts[(I)-F] \n\tif (( tmp ))\n\tthen\n\t\tignvars=($=opts[tmp+1]) \n\t\tif [[ $ignvars = _comp_ignore ]]\n\t\tthen\n\t\t\tign=($_comp_ignore) \n\t\telse\n\t\t\tign=() \n\t\t\tfor ignvar in $ignvars\n\t\t\tdo\n\t\t\t\tign+=(${(P)ignvar}) \n\t\t\tdone\n\t\t\topts[tmp+1]=_comp_ignore \n\t\tfi\n\telse\n\t\tign=() \n\tfi\n\tif zstyle -a ":completion:${curcontext}:" file-patterns tmp\n\tthen\n\t\tpats=() \n\t\tfor i in ${tmp//\\%p/${${glob:-\\*}//:/\\\\:}}\n\t\tdo\n\t\t\tif [[ $i = *[^\\\\]:* ]]\n\t\t\tthen\n\t\t\t\tpats+=(" $i ") \n\t\t\telse\n\t\t\t\tpats+=(" ${i}:files ") \n\t\t\tfi\n\t\tdone\n\telif zstyle -t ":completion:${curcontext}:" list-dirs-first\n\tthen\n\t\tpats=(" *(-/):directories:directory ${${glob:-*}//:/\\\\:}(#q^-/):globbed-files" \'*:all-files\') \n\telse\n\t\tpats=("${${glob:-*}//:/\\\\:}:globbed-files *(-/):directories" \'*:all-files \') \n\tfi\n\ttried=() \n\tfor def in "$pats[@]"\n\tdo\n\t\teval "def=( ${${def//\\\\:/\\\\\\\\\\\\:}//(#b)([][()|*?^#~<>])/\\\\${match[1]}} )"\n\t\ttmp="${(@M)def#*[^\\\\]:}" \n\t\t(( $tried[(I)${(q)tmp}] )) && continue\n\t\ttried=("$tried[@]" "$tmp") \n\t\tfor sdef in "$def[@]"\n\t\tdo\n\t\t\ttag="${${sdef#*[^\\\\]:}%%:*}" \n\t\t\tpat="${${sdef%%:${tag}*}//\\\\:/:}" \n\t\t\tif [[ "$sdef" = *:${tag}:* ]]\n\t\t\tthen\n\t\t\t\tdescr="${(Q)sdef#*:${tag}:}" \n\t\t\telse\n\t\t\t\tif (( $opts[(I)-X] ))\n\t\t\t\tthen\n\t\t\t\t\tdescr= \n\t\t\t\telse\n\t\t\t\t\tdescr=file \n\t\t\t\tfi\n\t\t\t\tend=yes \n\t\t\tfi\n\t\t\t_tags "$tag"\n\t\t\twhile _tags\n\t\t\tdo\n\t\t\t\t_comp_ignore=() \n\t\t\t\twhile _next_label "$tag" expl "$descr"\n\t\t\t\tdo\n\t\t\t\t\t_comp_ignore=($_comp_ignore $ign) \n\t\t\t\t\tif [[ -n "$end" ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tif _path_files -g "$pat" "$opts[@]" "$expl[@]"\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tret=0 \n\t\t\t\t\t\telif [[ $PREFIX$SUFFIX != */* ]] && zstyle -a ":completion:${curcontext}:$tag" recursive-files rfiles\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tlocal subtree\n\t\t\t\t\t\t\tfor rfile in $rfiles\n\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\tif [[ $PWD/ = ${~rfile} ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tif [[ -z $subtree ]]\n\t\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t\tsubtree=(**/*(/)) \n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tfor prepath in $subtree\n\t\t\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t\t\toprefix=$PREFIX \n\t\t\t\t\t\t\t\t\t\tPREFIX=$prepath/$PREFIX \n\t\t\t\t\t\t\t\t\t\t_path_files -g "$pat" "$opts[@]" "$expl[@]" && ret=0 \n\t\t\t\t\t\t\t\t\t\tPREFIX=$oprefix \n\t\t\t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tdone\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\t_path_files "$expl[@]" -g "$pat" "$opts[@]" && ret=0 \n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\t\t(( ret )) || break\n\t\t\tdone\n\t\t\t[[ "$pat" = \'*\' ]] && return ret\n\t\tdone\n\t\t(( ret )) || return 0\n\tdone\n\treturn 1' _call_program $'\tlocal curcontext="${curcontext}" tmp err_fd=-1 \n\tlocal -a prefix\n\tif [[ "$1" = -p ]]\n\tthen\n\t\tshift\n\t\tif (( $#_comp_priv_prefix ))\n\t\tthen\n\t\t\tcurcontext="${curcontext%:*}/${${(@M)_comp_priv_prefix:#^*[^\\\\]=*}[1]}:" \n\t\t\tzstyle -t ":completion:${curcontext}:${1}" gain-privileges && prefix=($_comp_priv_prefix) \n\t\tfi\n\tfi\n\tif (( ${debug_fd:--1} > 2 )) || [[ ! -t 2 ]]\n\tthen\n\t\texec {err_fd}>&2\n\telse\n\t\texec {err_fd}> /dev/null\n\tfi\n\t{\n\t\tif zstyle -s ":completion:${curcontext}:${1}" command tmp\n\t\tthen\n\t\t\tif [[ "$tmp" = -* ]]\n\t\t\tthen\n\t\t\t\teval "$tmp[2,-1]" "$argv[2,-1]"\n\t\t\telse\n\t\t\t\teval $prefix "$tmp"\n\t\t\tfi\n\t\telse\n\t\t\teval $prefix "$argv[2,-1]"\n\t\tfi 2>&$err_fd\n\t} always {\n\t\texec {err_fd}>&-\n\t}' _vorbis 'builtin autoload -XU' _SUSEconfig 'builtin autoload -XU' _gzip 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-case-word $'\t_zsh_highlight_call_widget .down-case-word -- "$@"' _expand_word 'builtin autoload -XU' virtualenv_prompt_info $'\treturn 1' _debfoster 'builtin autoload -XU' _next_label $'\tlocal __gopt __descr __spec\n\t__gopt=() \n\tzparseopts -D -a __gopt 1 2 V J x\n\tif comptags -A "$1" curtag __spec\n\tthen\n\t\t(( $#funcstack > _tags_level )) && _comp_tags="${_comp_tags% * }" \n\t\t_tags_level=$#funcstack \n\t\t_comp_tags="$_comp_tags $__spec " \n\t\tif [[ "$curtag" = *[^\\\\]:* ]]\n\t\tthen\n\t\t\tzformat -f __descr "${curtag#*:}" "d:$3"\n\t\t\t_description "$__gopt[@]" "${curtag%:*}" "$2" "$__descr"\n\t\t\tcurtag="${curtag%:*}" \n\t\t\tset -A $2 "${(P@)2}" "${(@)argv[4,-1]}"\n\t\telse\n\t\t\t_description "$__gopt[@]" "$curtag" "$2" "$3"\n\t\t\tset -A $2 "${(@)argv[4,-1]}" "${(P@)2}"\n\t\tfi\n\t\treturn 0\n\tfi\n\treturn 1' _zsh_highlight_widget_orig-s0.0000050000-r18109-split-undo $'\t_zsh_highlight_call_widget .split-undo -- "$@"' _zsh_highlight_highlighter_brackets_paint $'\tlocal char style\n\tlocal -i bracket_color_size=${#ZSH_HIGHLIGHT_STYLES[(I)bracket-level-*]} buflen=${#BUFFER} level=0 matchingpos pos \n\tlocal -A levelpos lastoflevel matching\n\tpos=0 \n\tfor char in ${(s..)BUFFER}\n\tdo\n\t\t(( ++pos ))\n\t\tcase $char in\n\t\t\t(["([{"]) levelpos[$pos]=$((++level)) \n\t\t\t\tlastoflevel[$level]=$pos  ;;\n\t\t\t([")]}"]) if (( level > 0 ))\n\t\t\t\tthen\n\t\t\t\t\tmatchingpos=$lastoflevel[$level] \n\t\t\t\t\tlevelpos[$pos]=$((level--)) \n\t\t\t\t\tif _zsh_highlight_brackets_match $matchingpos $pos\n\t\t\t\t\tthen\n\t\t\t\t\t\tmatching[$matchingpos]=$pos \n\t\t\t\t\t\tmatching[$pos]=$matchingpos \n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tlevelpos[$pos]=-1 \n\t\t\t\tfi ;;\n\t\tesac\n\tdone\n\tfor pos in ${(k)levelpos}\n\tdo\n\t\tif (( $+matching[$pos] ))\n\t\tthen\n\t\t\tif (( bracket_color_size ))\n\t\t\tthen\n\t\t\t\t_zsh_highlight_add_highlight $((pos - 1)) $pos bracket-level-$(( (levelpos[$pos] - 1) % bracket_color_size + 1 ))\n\t\t\tfi\n\t\telse\n\t\t\t_zsh_highlight_add_highlight $((pos - 1)) $pos bracket-error\n\t\tfi\n\tdone\n\tif [[ $WIDGET != zle-line-finish ]]\n\tthen\n\t\tpos=$((CURSOR + 1)) \n\t\tif (( $+levelpos[$pos] )) && (( $+matching[$pos] ))\n\t\tthen\n\t\t\tlocal -i otherpos=$matching[$pos] \n\t\t\t_zsh_highlight_add_highlight $((otherpos - 1)) $otherpos cursor-matchingbracket\n\t\tfi\n\tfi' _debdiff 'builtin autoload -XU' _doas 'builtin autoload -XU' _sys_calls 'builtin autoload -XU' git_prompt_short_sha $'\tlocal SHA\n\tSHA=$(__git_prompt_git rev-parse --short HEAD 2> /dev/null)  && echo "$ZSH_THEME_GIT_PROMPT_SHA_BEFORE$SHA$ZSH_THEME_GIT_PROMPT_SHA_AFTER"' _chrt 'builtin autoload -XU' _cd_options $'\t_arguments -s \'-q[quiet, no output or use of hooks]\' \'-s[refuse to use paths with symlinks]\' \'(-P)-L[retain symbolic links ignoring CHASE_LINKS]\' \'(-L)-P[resolve symbolic links as CHASE_LINKS]\'' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-caps-lock-panic $'\t_zsh_highlight_call_widget .vi-caps-lock-panic -- "$@"' _jails 'builtin autoload -XU' _vcsh 'builtin autoload -XU' git_main_branch $'\tcommand git rev-parse --git-dir &> /dev/null || return\n\tlocal ref\n\tfor ref in refs/{heads,remotes/{origin,upstream}}/{main,trunk}\n\tdo\n\t\tif command git show-ref -q --verify $ref\n\t\tthen\n\t\t\techo ${ref:t}\n\t\t\treturn\n\t\tfi\n\tdone\n\techo master' _echotc 'builtin autoload -XU' _sequence 'builtin autoload -XU' _complete $'\tlocal comp name oldcontext ret=1 service \n\ttypeset -T curcontext="$curcontext" ccarray \n\toldcontext="$curcontext" \n\tif [[ -n "$compcontext" ]]\n\tthen\n\t\tif [[ "${(t)compcontext}" = *array* ]]\n\t\tthen\n\t\t\tlocal expl\n\t\t\t_wanted values expl value compadd -a - compcontext\n\t\telif [[ "${(t)compcontext}" = *assoc* ]]\n\t\tthen\n\t\t\tlocal expl tmp i\n\t\t\ttmp=() \n\t\t\tfor i in "${(@k)compcontext[(R)*[^[:blank:]]]}"\n\t\t\tdo\n\t\t\t\ttmp=("$tmp[@]" "${i}:${compcontext[$i]}") \n\t\t\tdone\n\t\t\ttmp=("$tmp[@]" "${(k@)compcontext[(R)[[:blank:]]#]}") \n\t\t\t_describe -t values value tmp\n\t\telif [[ "$compcontext" = *:*:* ]]\n\t\tthen\n\t\t\tlocal tag="${${compcontext%%:*}:-values}" \n\t\t\tlocal descr="${${${compcontext#${tag}:}%%:*}:-value}" \n\t\t\tlocal action="${compcontext#${tag}:${descr}:}" expl ws ret=1 \n\t\t\tcase "$action" in\n\t\t\t\t(\\ #) _message -e "$tag" "$descr" ;;\n\t\t\t\t(\\(\\(*\\)\\)) eval ws\\=\\( "${action[3,-3]}" \\)\n\t\t\t\t\t_describe -t "$tag" "$descr" ws ;;\n\t\t\t\t(\\(*\\)) eval ws\\=\\( "${action[2,-2]}" \\)\n\t\t\t\t\t_wanted "$tag" expl "$descr" compadd -a - ws ;;\n\t\t\t\t(\\{*\\}) _tags "$tag"\n\t\t\t\t\twhile _tags\n\t\t\t\t\tdo\n\t\t\t\t\t\twhile _next_label "$tag" expl "$descr"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\teval "$action[2,-2]" && ret=0 \n\t\t\t\t\t\tdone\n\t\t\t\t\t\t(( ret )) || break\n\t\t\t\t\tdone ;;\n\t\t\t\t(\\ *) eval ws\\=\\( "$action" \\)\n\t\t\t\t\t_tags "$tag"\n\t\t\t\t\twhile _tags\n\t\t\t\t\tdo\n\t\t\t\t\t\twhile _next_label "$tag" expl "$descr"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t"$ws[@]"\n\t\t\t\t\t\tdone\n\t\t\t\t\t\t(( ret )) || break\n\t\t\t\t\tdone ;;\n\t\t\t\t(*) eval ws\\=\\( "$action" \\)\n\t\t\t\t\t_tags "$tag"\n\t\t\t\t\twhile _tags\n\t\t\t\t\tdo\n\t\t\t\t\t\twhile _next_label "$tag" expl "$descr"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t"$ws[1]" "$expl[@]" "${(@)ws[2,-1]}"\n\t\t\t\t\t\tdone\n\t\t\t\t\t\t(( ret )) || break\n\t\t\t\t\tdone ;;\n\t\t\tesac\n\t\telse\n\t\t\tccarray[3]="$compcontext" \n\t\t\tcomp="$_comps[$compcontext]" \n\t\t\t[[ -n "$comp" ]] && eval "$comp"\n\t\tfi\n\t\treturn\n\tfi\n\tcomp="$_comps[-first-]" \n\tif [[ -n "$comp" ]]\n\tthen\n\t\tservice="${_services[-first-]:--first-}" \n\t\tccarray[3]=-first- \n\t\teval "$comp" && ret=0 \n\t\tif [[ "$_compskip" = all ]]\n\t\tthen\n\t\t\t_compskip= \n\t\t\treturn ret\n\t\tfi\n\tfi\n\t[[ -n $compstate[vared] ]] && compstate[context]=vared \n\tret=1 \n\tif [[ "$compstate[context]" = command ]]\n\tthen\n\t\tcurcontext="$oldcontext" \n\t\t_normal -s && ret=0 \n\telse\n\t\tlocal cname="-${compstate[context]:s/_/-/}-" \n\t\tccarray[3]="$cname" \n\t\tcomp="$_comps[$cname]" \n\t\tservice="${_services[$cname]:-$cname}" \n\t\tif [[ -z "$comp" ]]\n\t\tthen\n\t\t\tif [[ "$_compskip" = *default* ]]\n\t\t\tthen\n\t\t\t\t_compskip= \n\t\t\t\treturn 1\n\t\t\tfi\n\t\t\tcomp="$_comps[-default-]" \n\t\t\tservice="${_services[-default-]:--default-}" \n\t\tfi\n\t\t[[ -n "$comp" ]] && eval "$comp" && ret=0 \n\tfi\n\t_compskip= \n\treturn ret' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-line-or-beginning-search $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-up-line-or-beginning-search -- "$@"' _options_unset 'builtin autoload -XU' _qtplay 'builtin autoload -XU' _echoti 'builtin autoload -XU' _mondo 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-kill-line $'\t_zsh_highlight_call_widget .backward-kill-line -- "$@"' nvm_prompt_info $'\twhich nvm &> /dev/null || return\n\tlocal nvm_prompt=${$(nvm current)#v} \n\techo "${ZSH_THEME_NVM_PROMPT_PREFIX}${nvm_prompt:gs/%/%%}${ZSH_THEME_NVM_PROMPT_SUFFIX}"' _iconv 'builtin autoload -XU' _gnome-gv 'builtin autoload -XU' rvm_prompt_info $'\t[ -f $HOME/.rvm/bin/rvm-prompt ] || return 1\n\tlocal rvm_prompt\n\trvm_prompt=$($HOME/.rvm/bin/rvm-prompt ${=ZSH_THEME_RVM_PROMPT_OPTIONS} 2>/dev/null) \n\t[[ -z "${rvm_prompt}" ]] && return 1\n\techo "${ZSH_THEME_RUBY_PROMPT_PREFIX}${rvm_prompt:gs/%/%%}${ZSH_THEME_RUBY_PROMPT_SUFFIX}"' title $'\tsetopt localoptions nopromptsubst\n\t[[ -n "${INSIDE_EMACS:-}" && "$INSIDE_EMACS" != vterm ]] && return\n\t: ${2=$1}\n\tcase "$TERM" in\n\t\t(cygwin | xterm* | putty* | rxvt* | konsole* | ansi | mlterm* | alacritty | st* | foot) print -Pn "\\e]2;${2:q}\\a"\n\t\t\tprint -Pn "\\e]1;${1:q}\\a" ;;\n\t\t(screen* | tmux*) print -Pn "\\ek${1:q}\\e\\\\" ;;\n\t\t(*) if [[ "$TERM_PROGRAM" == "iTerm.app" ]]\n\t\t\tthen\n\t\t\t\tprint -Pn "\\e]2;${2:q}\\a"\n\t\t\t\tprint -Pn "\\e]1;${1:q}\\a"\n\t\t\telse\n\t\t\t\tif (( ${+terminfo[fsl]} && ${+terminfo[tsl]} ))\n\t\t\t\tthen\n\t\t\t\t\tprint -Pn "${terminfo[tsl]}$1${terminfo[fsl]}"\n\t\t\t\tfi\n\t\t\tfi ;;\n\tesac' _zsh_highlight_main_highlighter_highlight_path_separators $'\tlocal pos style_pathsep\n\tstyle_pathsep=$1_pathseparator \n\treply=() \n\t[[ -z "$ZSH_HIGHLIGHT_STYLES[$style_pathsep]" || "$ZSH_HIGHLIGHT_STYLES[$1]" == "$ZSH_HIGHLIGHT_STYLES[$style_pathsep]" ]] && return 0\n\tfor ((pos = start_pos; $pos <= end_pos; pos++ )) do\n\t\tif [[ $BUFFER[pos] == / ]]\n\t\tthen\n\t\t\treply+=($((pos - 1)) $pos $style_pathsep) \n\t\tfi\n\tdone' _a2utils 'builtin autoload -XU' omz_termsupport_precmd $'\t[[ "${DISABLE_AUTO_TITLE:-}" != true ]] || return\n\ttitle "$ZSH_THEME_TERM_TAB_TITLE_IDLE" "$ZSH_THEME_TERM_TITLE_IDLE"' _chsh 'builtin autoload -XU' _zsh_highlight_highlighter_cursor_predicate $'\t[[ $WIDGET == zle-line-finish ]] || _zsh_highlight_cursor_moved' _set_command $'\tlocal command\n\tcommand="$words[1]" \n\t[[ -z "$command" ]] && return\n\tif (( $+builtins[$command] + $+functions[$command] ))\n\tthen\n\t\t_comp_command1="$command" \n\t\t_comp_command="$_comp_command1" \n\telif [[ "$command[1]" = \'=\' ]]\n\tthen\n\t\teval _comp_command2\\=$command\n\t\t_comp_command1="$command[2,-1]" \n\t\t_comp_command="$_comp_command2" \n\telif [[ "$command" = ..#/* ]]\n\tthen\n\t\t_comp_command1="${PWD}/$command" \n\t\t_comp_command2="${command:t}" \n\t\t_comp_command="$_comp_command2" \n\telif [[ "$command" = */* ]]\n\tthen\n\t\t_comp_command1="$command" \n\t\t_comp_command2="${command:t}" \n\t\t_comp_command="$_comp_command2" \n\telse\n\t\t_comp_command1="$command" \n\t\t_comp_command2="$commands[$command]" \n\t\t_comp_command="$_comp_command1" \n\tfi' _ipadm 'builtin autoload -XU' _tmux 'builtin autoload -XU' _who 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-emacs-backward-word $'\t_zsh_highlight_call_widget .emacs-backward-word -- "$@"' _rsync 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-and-hold $'\t_zsh_highlight_call_widget .accept-and-hold -- "$@"' _iwconfig 'builtin autoload -XU' _topgit 'builtin autoload -XU' _equal 'builtin autoload -XU' _completers 'builtin autoload -XU' _pydoc 'builtin autoload -XU' _zfs_keysource_props 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-swap-case $'\t_zsh_highlight_call_widget .vi-swap-case -- "$@"' _links 'builtin autoload -XU' _python 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-exchange-point-and-mark $'\t_zsh_highlight_call_widget .exchange-point-and-mark -- "$@"' _hash 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-word $'\t_zsh_highlight_call_widget .vi-backward-word -- "$@"' _udevadm 'builtin autoload -XU' edit-command-line 'builtin autoload -XU' _openstack 'builtin autoload -XU' _object_files 'builtin autoload -XU' _omz::log $'\tsetopt localoptions nopromptsubst\n\tlocal logtype=$1 \n\tlocal logname=${3:-${${functrace[1]#_}%:*}} \n\tif [[ $logtype = debug && -z $_OMZ_DEBUG ]]\n\tthen\n\t\treturn\n\tfi\n\tcase "$logtype" in\n\t\t(prompt) print -Pn "%S%F{blue}$logname%f%s: $2" ;;\n\t\t(debug) print -P "%F{white}$logname%f: $2" ;;\n\t\t(info) print -P "%F{green}$logname%f: $2" ;;\n\t\t(warn) print -P "%S%F{yellow}$logname%f%s: $2" ;;\n\t\t(error) print -P "%S%F{red}$logname%f%s: $2" ;;\n\tesac >&2' _regex_arguments 'builtin autoload -XU' _user_at_host 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-yank-whole-line $'\t_zsh_highlight_call_widget .vi-yank-whole-line -- "$@"' _zsh_highlight_highlighter_pattern_paint $'\tsetopt localoptions extendedglob\n\tlocal pattern\n\tfor pattern in ${(k)ZSH_HIGHLIGHT_PATTERNS}\n\tdo\n\t\t_zsh_highlight_pattern_highlighter_loop "$BUFFER" "$pattern"\n\tdone' _cabal 'builtin autoload -XU' _zsh 'builtin autoload -XU' _omz_diag_dump_one_big_text $'\tlocal program programs progfile md5\n\tbuiltin echo oh-my-zsh diagnostic dump\n\tbuiltin echo\n\tbuiltin echo $outfile\n\tbuiltin echo\n\tcommand date\n\tcommand uname -a\n\tbuiltin echo OSTYPE=$OSTYPE\n\tbuiltin echo ZSH_VERSION=$ZSH_VERSION\n\tbuiltin echo User: $USERNAME\n\tbuiltin echo umask: $(umask)\n\tbuiltin echo\n\t_omz_diag_dump_os_specific_version\n\tbuiltin echo\n\tprograms=(sh zsh ksh bash sed cat grep ls find git posh) \n\tlocal progfile="" extra_str="" sha_str="" \n\tfor program in $programs\n\tdo\n\t\textra_str="" sha_str="" \n\t\tprogfile=$(builtin which $program) \n\t\tif [[ $? == 0 ]]\n\t\tthen\n\t\t\tif [[ -e $progfile ]]\n\t\t\tthen\n\t\t\t\tif builtin whence shasum &> /dev/null\n\t\t\t\tthen\n\t\t\t\t\tsha_str=($(command shasum $progfile)) \n\t\t\t\t\tsha_str=$sha_str[1] \n\t\t\t\t\textra_str+=" SHA $sha_str" \n\t\t\t\tfi\n\t\t\t\tif [[ -h "$progfile" ]]\n\t\t\t\tthen\n\t\t\t\t\textra_str+=" ( -> ${progfile:A} )" \n\t\t\t\tfi\n\t\t\tfi\n\t\t\tbuiltin printf \'%-9s %-20s %s\\n\' "$program is" "$progfile" "$extra_str"\n\t\telse\n\t\t\tbuiltin echo "$program: not found"\n\t\tfi\n\tdone\n\tbuiltin echo\n\tbuiltin echo Command Versions:\n\tbuiltin echo "zsh: $(zsh --version)"\n\tbuiltin echo "this zsh session: $ZSH_VERSION"\n\tbuiltin echo "bash: $(bash --version | command grep bash)"\n\tbuiltin echo "git: $(git --version)"\n\tbuiltin echo "grep: $(grep --version)"\n\tbuiltin echo\n\t_omz_diag_dump_check_core_commands || return 1\n\tbuiltin echo\n\tbuiltin echo Process state:\n\tbuiltin echo pwd: $PWD\n\tif builtin whence pstree &> /dev/null\n\tthen\n\t\tbuiltin echo Process tree for this shell:\n\t\tpstree -p $$\n\telse\n\t\tps -fT\n\tfi\n\tbuiltin set | command grep -a \'^\\(ZSH\\|plugins\\|TERM\\|LC_\\|LANG\\|precmd\\|chpwd\\|preexec\\|FPATH\\|TTY\\|DISPLAY\\|PATH\\)\\|OMZ\'\n\tbuiltin echo\n\tbuiltin echo Exported:\n\tbuiltin echo $(builtin export | command sed \'s/=.*//\')\n\tbuiltin echo\n\tbuiltin echo Locale:\n\tcommand locale\n\tbuiltin echo\n\tbuiltin echo Zsh configuration:\n\tbuiltin echo setopt: $(builtin setopt)\n\tbuiltin echo\n\tbuiltin echo zstyle:\n\tbuiltin zstyle\n\tbuiltin echo\n\tbuiltin echo \'compaudit output:\'\n\tcompaudit\n\tbuiltin echo\n\tbuiltin echo \'$fpath directories:\'\n\tcommand ls -lad $fpath\n\tbuiltin echo\n\tbuiltin echo oh-my-zsh installation:\n\tcommand ls -ld ~/.z*\n\tcommand ls -ld ~/.oh*\n\tbuiltin echo\n\tbuiltin echo oh-my-zsh git state:\n\t(\n\t\tbuiltin cd $ZSH && builtin echo "HEAD: $(git rev-parse HEAD)" && git remote -v && git status | command grep "[^[:space:]]"\n\t)\n\tif [[ $verbose -ge 1 ]]\n\tthen\n\t\t(\n\t\t\tbuiltin cd $ZSH && git reflog --date=default | command grep pull\n\t\t)\n\tfi\n\tbuiltin echo\n\tif [[ -e $ZSH_CUSTOM ]]\n\tthen\n\t\tlocal custom_dir=$ZSH_CUSTOM \n\t\tif [[ -h $custom_dir ]]\n\t\tthen\n\t\t\tcustom_dir=$(builtin cd $custom_dir && pwd -P) \n\t\tfi\n\t\tbuiltin echo "oh-my-zsh custom dir:"\n\t\tbuiltin echo "   $ZSH_CUSTOM ($custom_dir)"\n\t\t(\n\t\t\tbuiltin cd ${custom_dir:h} && command find ${custom_dir:t} -name .git -prune -o -print\n\t\t)\n\t\tbuiltin echo\n\tfi\n\tif [[ $verbose -ge 1 ]]\n\tthen\n\t\tbuiltin echo "bindkey:"\n\t\tbuiltin bindkey\n\t\tbuiltin echo\n\t\tbuiltin echo "infocmp:"\n\t\tcommand infocmp -L\n\t\tbuiltin echo\n\tfi\n\tlocal zdotdir=${ZDOTDIR:-$HOME} \n\tbuiltin echo "Zsh configuration files:"\n\tlocal cfgfile cfgfiles\n\tcfgfiles=(/etc/zshenv /etc/zprofile /etc/zshrc /etc/zlogin /etc/zlogout $zdotdir/.zshenv $zdotdir/.zprofile $zdotdir/.zshrc $zdotdir/.zlogin $zdotdir/.zlogout ~/.zsh.pre-oh-my-zsh /etc/bashrc /etc/profile ~/.bashrc ~/.profile ~/.bash_profile ~/.bash_logout) \n\tcommand ls -lad $cfgfiles 2>&1\n\tbuiltin echo\n\tif [[ $verbose -ge 1 ]]\n\tthen\n\t\tfor cfgfile in $cfgfiles\n\t\tdo\n\t\t\t_omz_diag_dump_echo_file_w_header $cfgfile\n\t\tdone\n\tfi\n\tbuiltin echo\n\tbuiltin echo "Zsh compdump files:"\n\tlocal dumpfile dumpfiles\n\tcommand ls -lad $zdotdir/.zcompdump*\n\tdumpfiles=($zdotdir/.zcompdump*(N)) \n\tif [[ $verbose -ge 2 ]]\n\tthen\n\t\tfor dumpfile in $dumpfiles\n\t\tdo\n\t\t\t_omz_diag_dump_echo_file_w_header $dumpfile\n\t\tdone\n\tfi' _a2ps 'builtin autoload -XU' _w3m 'builtin autoload -XU' _zsh_highlight_highlighter_root_paint $'\tif (( EUID == 0 ))\n\tthen\n\t\t_zsh_highlight_add_highlight 0 $#BUFFER root\n\tfi' _ranlib 'builtin autoload -XU' _retrieve_cache 'builtin autoload -XU' _python_modules 'builtin autoload -XU' _zsh_highlight_highlighter_line_paint $'\t_zsh_highlight_add_highlight 0 $#BUFFER line' _x_geometry 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-rev-repeat-find $'\t_zsh_highlight_call_widget .vi-rev-repeat-find -- "$@"' uninstall_oh_my_zsh $'\tenv ZSH="$ZSH" sh "$ZSH/tools/uninstall.sh"' _zsh_highlight_widget_orig-s0.0000050000-r18109-magic-space $'\t_zsh_highlight_call_widget .magic-space -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-line-or-history $'\t_zsh_highlight_call_widget .down-line-or-history -- "$@"' _zstyle 'builtin autoload -XU' _ubuntu-report 'builtin autoload -XU' _bogofilter 'builtin autoload -XU' _xmlsoft 'builtin autoload -XU' _grep 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-quote-region $'\t_zsh_highlight_call_widget .quote-region -- "$@"' _pids 'builtin autoload -XU' _zdump 'builtin autoload -XU' _debchange 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-execute-named-cmd $'\t_zsh_highlight_call_widget .execute-named-cmd -- "$@"' _nothing 'builtin autoload -XU' _oldlist 'builtin autoload -XU' _md5sum 'builtin autoload -XU' _absolute_command_paths 'builtin autoload -XU' _zsh_highlight_regexp_highlighter_loop $'\tlocal buf="$1" pat="$2" \n\tinteger OFFSET=0 \n\tlocal MATCH\n\tinteger MBEGIN MEND\n\tlocal -a match mbegin mend\n\twhile true\n\tdo\n\t\t[[ "$buf" =~ "$pat" ]] || return\n\t\tregion_highlight+=("$((MBEGIN - 1 + OFFSET)) $((MEND + OFFSET)) $ZSH_HIGHLIGHT_REGEXP[$pat], memo=zsh-syntax-highlighting") \n\t\tbuf="$buf[$(($MEND+1)),-1]" \n\t\tOFFSET=$((MEND+OFFSET)) \n\tdone' _zsh_highlight_widget_orig-s0.0000050000-r18109-self-insert $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-self-insert -- "$@"' _path_commands $'\tlocal need_desc expl ret=1 \n\tif zstyle -t ":completion:${curcontext}:" extra-verbose\n\tthen\n\t\tlocal update_policy first\n\t\tif [[ $+_command_descriptions -eq 0 ]]\n\t\tthen\n\t\t\tfirst=yes \n\t\t\ttypeset -A -g _command_descriptions\n\t\tfi\n\t\tzstyle -s ":completion:${curcontext}:" cache-policy update_policy\n\t\t[[ -z "$update_policy" ]] && zstyle ":completion:${curcontext}:" cache-policy _path_commands_caching_policy\n\t\tif (\n\t\t\t\t[[ -n $first ]] || _cache_invalid command-descriptions\n\t\t\t) && ! _retrieve_cache command-descriptions\n\t\tthen\n\t\t\tlocal line\n\t\t\tfor line in "${(f)$(_call_program command-descriptions _call_whatis -s 1 -r .\\\\\\*\\; _call_whatis -s 6 -r .\\\\\\* 2>/dev/null)}"\n\t\t\tdo\n\t\t\t\t[[ -n ${line:#(#b)([^ ]#) #\\([^ ]#\\)( #\\[[^ ]#\\]|)[ -]#(*)} ]] && continue\n\t\t\t\t[[ -z $match[1] || -z $match[3] || -z ${${match[1]}:#*:*} ]] && continue\n\t\t\t\t_command_descriptions[$match[1]]=$match[3] \n\t\t\tdone\n\t\t\t_store_cache command-descriptions _command_descriptions\n\t\tfi\n\t\t(( $#_command_descriptions )) && need_desc=yes \n\tfi\n\tif [[ -n $need_desc ]]\n\tthen\n\t\ttypeset -a dcmds descs cmds matches\n\t\tlocal desc cmd sep\n\t\tcompadd "$@" -O matches -k commands\n\t\tfor cmd in $matches\n\t\tdo\n\t\t\tdesc=$_command_descriptions[$cmd] \n\t\t\tif [[ -z $desc ]]\n\t\t\tthen\n\t\t\t\tcmds+=$cmd \n\t\t\telse\n\t\t\t\tdcmds+=$cmd \n\t\t\t\tdescs+="$cmd:$desc" \n\t\t\tfi\n\t\tdone\n\t\tzstyle -s ":completion:${curcontext}:" list-separator sep || sep=-- \n\t\tzformat -a descs " $sep " $descs\n\t\tdescs=("${(@r:COLUMNS-1:)descs}") \n\t\t_wanted commands expl \'external command\' compadd "$@" -ld descs -a dcmds && ret=0 \n\t\t_wanted commands expl \'external command\' compadd "$@" -a cmds && ret=0 \n\telse\n\t\t_wanted commands expl \'external command\' compadd "$@" -k commands && ret=0 \n\tfi\n\tif [[ -o path_dirs ]]\n\tthen\n\t\tlocal -a path_dirs\n\t\tpath_dirs=(${^path}/*(/N:t)) \n\t\t(( ${#path_dirs} )) && _wanted path-dirs expl \'directory in path\' compadd "$@" -a path_dirs && ret=0 \n\t\tif [[ $PREFIX$SUFFIX = */* ]]\n\t\tthen\n\t\t\t_wanted commands expl \'external command\' _path_files -W path -g \'*(*)\' && ret=0 \n\t\tfi\n\tfi\n\treturn $ret' _subscript 'builtin autoload -XU' _lslv 'builtin autoload -XU' _zcompile 'builtin autoload -XU' _twidge 'builtin autoload -XU' _zftp 'builtin autoload -XU' _my_accounts 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-kill-word $'\t_zsh_highlight_call_widget .kill-word -- "$@"' _canonical_paths 'builtin autoload -XU' _tar 'builtin autoload -XU' _mixerctl 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-word-end $'\t_zsh_highlight_call_widget .vi-backward-word-end -- "$@"' _zsh_highlight_pattern_highlighter_loop $'\tlocal buf="$1" pat="$2" \n\tlocal -a match mbegin mend\n\tlocal MATCH\n\tinteger MBEGIN MEND\n\tif [[ "$buf" == (#b)(*)(${~pat})* ]]\n\tthen\n\t\tregion_highlight+=("$((mbegin[2] - 1)) $mend[2] $ZSH_HIGHLIGHT_PATTERNS[$pat], memo=zsh-syntax-highlighting") \n\t\t"$0" "$match[1]" "$pat"\n\t\treturn $?\n\tfi' _dcut 'builtin autoload -XU' _correct 'builtin autoload -XU' colors $'\temulate -L zsh\n\ttypeset -Ag color colour\n\tcolor=(00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default) \n\tlocal k\n\tfor k in ${(k)color}\n\tdo\n\t\tcolor[${color[$k]}]=$k \n\tdone\n\tfor k in ${color[(I)3?]}\n\tdo\n\t\tcolor[fg-${color[$k]}]=$k \n\tdone\n\tcolor[grey]=${color[black]} \n\tcolor[fg-grey]=${color[grey]} \n\tcolor[bg-grey]=${color[bg-black]} \n\tcolour=(${(kv)color}) \n\tlocal lc=$\'\\e[\' rc=m \n\ttypeset -Hg reset_color bold_color\n\treset_color="$lc${color[none]}$rc" \n\tbold_color="$lc${color[bold]}$rc" \n\ttypeset -AHg fg fg_bold fg_no_bold\n\tfor k in ${(k)color[(I)fg-*]}\n\tdo\n\t\tfg[${k#fg-}]="$lc${color[$k]}$rc" \n\t\tfg_bold[${k#fg-}]="$lc${color[bold]};${color[$k]}$rc" \n\t\tfg_no_bold[${k#fg-}]="$lc${color[normal]};${color[$k]}$rc" \n\tdone\n\ttypeset -AHg bg bg_bold bg_no_bold\n\tfor k in ${(k)color[(I)bg-*]}\n\tdo\n\t\tbg[${k#bg-}]="$lc${color[$k]}$rc" \n\t\tbg_bold[${k#bg-}]="$lc${color[bold]};${color[$k]}$rc" \n\t\tbg_no_bold[${k#bg-}]="$lc${color[normal]};${color[$k]}$rc" \n\tdone' _hdiutil 'builtin autoload -XU' _bash_complete $'\tlocal ret=1 \n\tlocal -a suf matches\n\tlocal -x COMP_POINT COMP_CWORD\n\tlocal -a COMP_WORDS COMPREPLY BASH_VERSINFO\n\tlocal -x COMP_LINE="$words" \n\tlocal -A savejobstates savejobtexts\n\t(( COMP_POINT = 1 + ${#${(j. .)words[1,CURRENT]}} + $#QIPREFIX + $#IPREFIX + $#PREFIX ))\n\t(( COMP_CWORD = CURRENT - 1))\n\tCOMP_WORDS=($words) \n\tBASH_VERSINFO=(2 05b 0 1 release) \n\tsavejobstates=(${(kv)jobstates}) \n\tsavejobtexts=(${(kv)jobtexts}) \n\t[[ ${argv[${argv[(I)nospace]:-0}-1]} = -o ]] && suf=(-S \'\') \n\tmatches=(${(f)"$(compgen $@ -- ${words[CURRENT]})"}) \n\tif [[ -n $matches ]]\n\tthen\n\t\tif [[ ${argv[${argv[(I)filenames]:-0}-1]} = -o ]]\n\t\tthen\n\t\t\tcompset -P \'*/\' && matches=(${matches##*/}) \n\t\t\tcompset -S \'/*\' && matches=(${matches%%/*}) \n\t\t\tcompadd -Q -f "${suf[@]}" -a matches && ret=0 \n\t\telse\n\t\t\tcompadd -Q "${suf[@]}" -a matches && ret=0 \n\t\tfi\n\tfi\n\tif (( ret ))\n\tthen\n\t\tif [[ ${argv[${argv[(I)default]:-0}-1]} = -o ]]\n\t\tthen\n\t\t\t_default "${suf[@]}" && ret=0 \n\t\telif [[ ${argv[${argv[(I)dirnames]:-0}-1]} = -o ]]\n\t\tthen\n\t\t\t_directories "${suf[@]}" && ret=0 \n\t\tfi\n\tfi\n\treturn ret' _savecore 'builtin autoload -XU' _evince 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-copy-prev-word $'\t_zsh_highlight_call_widget .copy-prev-word -- "$@"' _ptree 'builtin autoload -XU' _mpc 'builtin autoload -XU' gdv $'\tgit diff -w "$@" | view -' _zsh_highlight_widget_orig-s0.0000050000-r18109-push-line $'\t_zsh_highlight_call_widget .push-line -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-incremental-search-forward $'\t_zsh_highlight_call_widget .history-incremental-search-forward -- "$@"' _xwit 'builtin autoload -XU' omz_diagnostic_dump $'\temulate -L zsh\n\tbuiltin echo "Generating diagnostic dump; please be patient..."\n\tlocal thisfcn=omz_diagnostic_dump \n\tlocal -A opts\n\tlocal opt_verbose opt_noverbose opt_outfile\n\tlocal timestamp=$(date +%Y%m%d-%H%M%S) \n\tlocal outfile=omz_diagdump_$timestamp.txt \n\tbuiltin zparseopts -A opts -D -- "v+=opt_verbose" "V+=opt_noverbose"\n\tlocal verbose n_verbose=${#opt_verbose} n_noverbose=${#opt_noverbose} \n\t(( verbose = 1 + n_verbose - n_noverbose ))\n\tif [[ ${#*} > 0 ]]\n\tthen\n\t\topt_outfile=$1 \n\tfi\n\tif [[ ${#*} > 1 ]]\n\tthen\n\t\tbuiltin echo "$thisfcn: error: too many arguments" >&2\n\t\treturn 1\n\tfi\n\tif [[ -n "$opt_outfile" ]]\n\tthen\n\t\toutfile="$opt_outfile" \n\tfi\n\t_omz_diag_dump_one_big_text &> "$outfile"\n\tif [[ $? != 0 ]]\n\tthen\n\t\tbuiltin echo "$thisfcn: error while creating diagnostic dump; see $outfile for details"\n\tfi\n\tbuiltin echo\n\tbuiltin echo Diagnostic dump file created at: "$outfile"\n\tbuiltin echo\n\tbuiltin echo To share this with OMZ developers, post it as a gist on GitHub\n\tbuiltin echo at "https://gist.github.com" and share the link to the gist.\n\tbuiltin echo\n\tbuiltin echo "WARNING: This dump file contains all your zsh and omz configuration files,"\n\tbuiltin echo "so don\'t share it publicly if there\'s sensitive information in them."\n\tbuiltin echo' _globflags 'builtin autoload -XU' _groff 'builtin autoload -XU' _zpool 'builtin autoload -XU' _script 'builtin autoload -XU' _defaults 'builtin autoload -XU' _ports 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-undefined-key $'\t_zsh_highlight_call_widget .undefined-key -- "$@"' _svcs 'builtin autoload -XU' _external_pwds 'builtin autoload -XU' _omz::pr::test $'\tif [[ "$1" = https://* ]]\n\tthen\n\t\t1="${1:t}" \n\tfi\n\tif ! [[ -n "$1" && "$1" =~ ^[[:digit:]]+$ ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <PR_NUMBER_or_URL>" >&2\n\t\treturn 1\n\tfi\n\tlocal branch\n\tbranch=$(builtin cd -q "$ZSH"; git symbolic-ref --short HEAD)  || {\n\t\t_omz::log error "error when getting the current git branch. Aborting..."\n\t\treturn 1\n\t}\n\t(\n\t\tset -e\n\t\tbuiltin cd -q "$ZSH"\n\t\tcommand git remote -v | while read remote url _\n\t\tdo\n\t\t\tcase "$url" in\n\t\t\t\t(https://github.com/ohmyzsh/ohmyzsh(|.git)) found=1 \n\t\t\t\t\tbreak ;;\n\t\t\t\t(git@github.com:ohmyzsh/ohmyzsh(|.git)) found=1 \n\t\t\t\t\tbreak ;;\n\t\t\tesac\n\t\tdone\n\t\t(( $found )) || {\n\t\t\t_omz::log error "could not found the ohmyzsh git remote. Aborting..."\n\t\t\treturn 1\n\t\t}\n\t\t_omz::log info "fetching PR #$1 to ohmyzsh/pull-$1..."\n\t\tcommand git fetch -f "$remote" refs/pull/$1/head:ohmyzsh/pull-$1 || {\n\t\t\t_omz::log error "error when trying to fetch PR #$1."\n\t\t\treturn 1\n\t\t}\n\t\t_omz::log info "rebasing PR #$1..."\n\t\tlocal ret gpgsign\n\t\t{\n\t\t\tgpgsign=$(command git config --local commit.gpgsign 2>/dev/null)  || ret=$? \n\t\t\t[[ $ret -ne 129 ]] || gpgsign=$(command git config commit.gpgsign 2>/dev/null) \n\t\t\tcommand git config commit.gpgsign false\n\t\t\tcommand git rebase master ohmyzsh/pull-$1 || {\n\t\t\t\tcommand git rebase --abort &> /dev/null\n\t\t\t\t_omz::log warn "could not rebase PR #$1 on top of master."\n\t\t\t\t_omz::log warn "you might not see the latest stable changes."\n\t\t\t\t_omz::log info "run \\`zsh\\` to test the changes."\n\t\t\t\treturn 1\n\t\t\t}\n\t\t} always {\n\t\t\tcase "$gpgsign" in\n\t\t\t\t("") command git config --unset commit.gpgsign ;;\n\t\t\t\t(*) command git config commit.gpgsign "$gpgsign" ;;\n\t\t\tesac\n\t\t}\n\t\t_omz::log info "fetch of PR #${1} successful."\n\t)\n\t[[ $? -eq 0 ]] || return 1\n\t_omz::log info "running \\`zsh\\` to test the changes. Run \\`exit\\` to go back."\n\tcommand zsh -l\n\t_omz::confirm "do you want to go back to the previous branch? [Y/n] "\n\t[[ "$REPLY" != [yY$\'\\n\'] ]] && return\n\t(\n\t\tset -e\n\t\tbuiltin cd -q "$ZSH"\n\t\tcommand git checkout "$branch" -- || {\n\t\t\t_omz::log error "could not go back to the previous branch (\'$branch\')."\n\t\t\treturn 1\n\t\t}\n\t)' _btrfs 'builtin autoload -XU' _gstat 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_complete_tag $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_complete_tag -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-up-line-or-history $'\t_zsh_highlight_call_widget .vi-up-line-or-history -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-expand-or-complete $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-expand-or-complete -- "$@"' _bzip2 'builtin autoload -XU' _domains 'builtin autoload -XU' _cut 'builtin autoload -XU' _ztodo 'builtin autoload -XU' _global 'builtin autoload -XU' _lsof 'builtin autoload -XU' _pscp 'builtin autoload -XU' omz $'\t[[ $# -gt 0 ]] || {\n\t\t_omz::help\n\t\treturn 1\n\t}\n\tlocal command="$1" \n\tshift\n\t(( $+functions[_omz::$command] )) || {\n\t\t_omz::help\n\t\treturn 1\n\t}\n\t_omz::$command "$@"' _deb_codenames 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-spell-word $'\t_zsh_highlight_call_widget .spell-word -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-line-and-down-history $'\t_zsh_highlight_call_widget .accept-line-and-down-history -- "$@"' _list 'builtin autoload -XU' _netcat 'builtin autoload -XU' _mail 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-get-line $'\t_zsh_highlight_call_widget .get-line -- "$@"' _sort 'builtin autoload -XU' _clay 'builtin autoload -XU' _picocom 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-line $'\t_zsh_highlight_call_widget .up-line -- "$@"' _madison 'builtin autoload -XU' _cvs 'builtin autoload -XU' _telnet 'builtin autoload -XU' _rpm 'builtin autoload -XU' _values 'builtin autoload -XU' _head 'builtin autoload -XU' ggf $'\t[[ "$#" != 1 ]] && local b="$(git_current_branch)" \n\tgit push --force origin "${b:=$1}"' _brctl 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-universal-argument $'\t_zsh_highlight_call_widget .universal-argument -- "$@"' ggl $'\tif [[ "$#" != 0 ]] && [[ "$#" != 1 ]]\n\tthen\n\t\tgit pull origin "${*}"\n\telse\n\t\t[[ "$#" == 0 ]] && local b="$(git_current_branch)" \n\t\tgit pull origin "${b:=$1}"\n\tfi' _portlint 'builtin autoload -XU' _baz 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-kill-word $'\t_zsh_highlight_call_widget .vi-backward-kill-word -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-kill-whole-line $'\t_zsh_highlight_call_widget .kill-whole-line -- "$@"' _svcadm 'builtin autoload -XU' ggp $'\tif [[ "$#" != 0 ]] && [[ "$#" != 1 ]]\n\tthen\n\t\tgit push origin "${*}"\n\telse\n\t\t[[ "$#" == 0 ]] && local b="$(git_current_branch)" \n\t\tgit push origin "${b:=$1}"\n\tfi' _zsocket 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-oper-swap-case $'\t_zsh_highlight_call_widget .vi-oper-swap-case -- "$@"' ggu $'\t[[ "$#" != 1 ]] && local b="$(git_current_branch)" \n\tgit pull --rebase origin "${b:=$1}"' _lspv 'builtin autoload -XU' _dupload 'builtin autoload -XU' _mii-tool 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-end-of-line $'\t_zsh_highlight_call_widget .vi-end-of-line -- "$@"' ruby_prompt_info $'\techo $(rvm_prompt_info || rbenv_prompt_info || chruby_prompt_info)' _locale 'builtin autoload -XU' _setup $'\tlocal val nm="$compstate[nmatches]" \n\t[[ $# -eq 1 ]] && 2="$1" \n\tif zstyle -a ":completion:${curcontext}:$1" list-colors val\n\tthen\n\t\tzmodload -i zsh/complist\n\t\tif [[ "$1" = default ]]\n\t\tthen\n\t\t\t_comp_colors=("$val[@]") \n\t\telse\n\t\t\t_comp_colors+=("(${2})${(@)^val:#(|\\(*\\)*)}" "${(M@)val:#\\(*\\)*}") \n\t\tfi\n\telif [[ "$1" = default ]]\n\tthen\n\t\tunset ZLS_COLORS ZLS_COLOURS\n\tfi\n\tif zstyle -s ":completion:${curcontext}:$1" show-ambiguity val\n\tthen\n\t\tzmodload -i zsh/complist\n\t\t[[ $val = (yes|true|on) ]] && _ambiguous_color=4  || _ambiguous_color=$val \n\tfi\n\tif zstyle -t ":completion:${curcontext}:$1" list-packed\n\tthen\n\t\tcompstate[list]="${compstate[list]} packed" \n\telif [[ $? -eq 1 ]]\n\tthen\n\t\tcompstate[list]="${compstate[list]:gs/packed//}" \n\telse\n\t\tcompstate[list]="$_saved_list" \n\tfi\n\tif zstyle -t ":completion:${curcontext}:$1" list-rows-first\n\tthen\n\t\tcompstate[list]="${compstate[list]} rows" \n\telif [[ $? -eq 1 ]]\n\tthen\n\t\tcompstate[list]="${compstate[list]:gs/rows//}" \n\telse\n\t\tcompstate[list]="$_saved_list" \n\tfi\n\tif zstyle -t ":completion:${curcontext}:$1" last-prompt\n\tthen\n\t\tcompstate[last_prompt]=yes \n\telif [[ $? -eq 1 ]]\n\tthen\n\t\tcompstate[last_prompt]=\'\' \n\telse\n\t\tcompstate[last_prompt]="$_saved_lastprompt" \n\tfi\n\tif zstyle -t ":completion:${curcontext}:$1" accept-exact\n\tthen\n\t\tcompstate[exact]=accept \n\telif [[ $? -eq 1 ]]\n\tthen\n\t\tcompstate[exact]=\'\' \n\telse\n\t\tcompstate[exact]="$_saved_exact" \n\tfi\n\t[[ _last_nmatches -ge 0 && _last_nmatches -ne nm ]] && _menu_style=("$_last_menu_style[@]" "$_menu_style[@]") \n\tif zstyle -a ":completion:${curcontext}:$1" menu val\n\tthen\n\t\t_last_nmatches=$nm \n\t\t_last_menu_style=("$val[@]") \n\telse\n\t\t_last_nmatches=-1 \n\tfi\n\t[[ "$_comp_force_list" != always ]] && zstyle -s ":completion:${curcontext}:$1" force-list val && [[ "$val" = always || ( "$val" = [0-9]## && ( -z "$_comp_force_list" || _comp_force_list -gt val ) ) ]] && _comp_force_list="$val" ' _tex 'builtin autoload -XU' _zsh_highlight_main__stack_pop $'\tif [[ $braces_stack[1] == $1 ]]\n\tthen\n\t\tbraces_stack=${braces_stack:1} \n\t\tif (( $+2 ))\n\t\tthen\n\t\t\tstyle=$2 \n\t\tfi\n\t\treturn 0\n\telse\n\t\tstyle=unknown-token \n\t\treturn 1\n\tfi' _zsh_highlight_main_add_region_highlight $'\tinteger start=$1 end=$2 \n\tshift 2\n\tif (( $#in_alias ))\n\tthen\n\t\t[[ $1 == unknown-token ]] && alias_style=unknown-token \n\t\treturn\n\tfi\n\tif (( in_param ))\n\tthen\n\t\tif [[ $1 == unknown-token ]]\n\t\tthen\n\t\t\tparam_style=unknown-token \n\t\tfi\n\t\tif [[ -n $param_style ]]\n\t\tthen\n\t\t\treturn\n\t\tfi\n\t\tparam_style=$1 \n\t\treturn\n\tfi\n\t(( start += buf_offset ))\n\t(( end += buf_offset ))\n\tlist_highlights+=($start $end $1) ' _zsh_highlight_highlighter_cursor_paint $'\t[[ $WIDGET == zle-line-finish ]] && return\n\t_zsh_highlight_add_highlight $CURSOR $(( $CURSOR + 1 )) cursor' spectrum_ls $'\tsetopt localoptions nopromptsubst\n\tlocal ZSH_SPECTRUM_TEXT=${ZSH_SPECTRUM_TEXT:-Arma virumque cano Troiae qui primus ab oris} \n\tfor code in {000..255}\n\tdo\n\t\tprint -P -- "$code: ${FG[$code]}${ZSH_SPECTRUM_TEXT}%{$reset_color%}"\n\tdone' _arrays 'builtin autoload -XU' VCS_INFO_formats $'\tsetopt localoptions noksharrays NO_shwordsplit\n\tlocal msg tmp\n\tlocal -i i\n\tlocal -A hook_com\n\thook_com=(action "$1" action_orig "$1" branch "$2" branch_orig "$2" base "$3" base_orig "$3" staged "$4" staged_orig "$4" unstaged "$5" unstaged_orig "$5" revision "$6" revision_orig "$6" misc "$7" misc_orig "$7" vcs "${vcs}" vcs_orig "${vcs}") \n\thook_com[base-name]="${${hook_com[base]}:t}" \n\thook_com[base-name_orig]="${hook_com[base_name]}" \n\thook_com[subdir]="$(VCS_INFO_reposub ${hook_com[base]})" \n\thook_com[subdir_orig]="${hook_com[subdir]}" \n\t: vcs_info-patch-9b9840f2-91e5-4471-af84-9e9a0dc68c1b\n\tfor tmp in base base-name branch misc revision subdir\n\tdo\n\t\thook_com[$tmp]="${hook_com[$tmp]//\\%/%%}" \n\tdone\n\tVCS_INFO_hook \'post-backend\'\n\tif [[ -n ${hook_com[action]} ]]\n\tthen\n\t\tzstyle -a ":vcs_info:${vcs}:${usercontext}:${rrn}" actionformats msgs\n\t\t(( ${#msgs} < 1 )) && msgs[1]=\' (%s)-[%b|%a]%u%c-\' \n\telse\n\t\tzstyle -a ":vcs_info:${vcs}:${usercontext}:${rrn}" formats msgs\n\t\t(( ${#msgs} < 1 )) && msgs[1]=\' (%s)-[%b]%u%c-\' \n\tfi\n\tif [[ -n ${hook_com[staged]} ]]\n\tthen\n\t\tzstyle -s ":vcs_info:${vcs}:${usercontext}:${rrn}" stagedstr tmp\n\t\t[[ -z ${tmp} ]] && hook_com[staged]=\'S\'  || hook_com[staged]=${tmp} \n\tfi\n\tif [[ -n ${hook_com[unstaged]} ]]\n\tthen\n\t\tzstyle -s ":vcs_info:${vcs}:${usercontext}:${rrn}" unstagedstr tmp\n\t\t[[ -z ${tmp} ]] && hook_com[unstaged]=\'U\'  || hook_com[unstaged]=${tmp} \n\tfi\n\tif [[ ${quiltmode} != \'standalone\' ]] && VCS_INFO_hook "pre-addon-quilt"\n\tthen\n\t\tlocal REPLY\n\t\tVCS_INFO_quilt addon\n\t\thook_com[quilt]="${REPLY}" \n\t\tunset REPLY\n\telif [[ ${quiltmode} == \'standalone\' ]]\n\tthen\n\t\thook_com[quilt]=${hook_com[misc]} \n\tfi\n\t(( ${#msgs} > maxexports )) && msgs[$(( maxexports + 1 )),-1]=() \n\tfor i in {1..${#msgs}}\n\tdo\n\t\tif VCS_INFO_hook "set-message" $(( $i - 1 )) "${msgs[$i]}"\n\t\tthen\n\t\t\tzformat -f msg ${msgs[$i]} a:${hook_com[action]} b:${hook_com[branch]} c:${hook_com[staged]} i:${hook_com[revision]} m:${hook_com[misc]} r:${hook_com[base-name]} s:${hook_com[vcs]} u:${hook_com[unstaged]} Q:${hook_com[quilt]} R:${hook_com[base]} S:${hook_com[subdir]}\n\t\t\tmsgs[$i]=${msg} \n\t\telse\n\t\t\tmsgs[$i]=${hook_com[message]} \n\t\tfi\n\tdone\n\thook_com=() \n\tbackend_misc=() \n\treturn 0' _nmcli 'builtin autoload -XU' _dtrace 'builtin autoload -XU' _etags 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-put-after $'\t_zsh_highlight_call_widget .vi-put-after -- "$@"' _diffstat 'builtin autoload -XU' _nautilus 'builtin autoload -XU' _init_d 'builtin autoload -XU' _zpty 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-execute-last-named-cmd $'\t_zsh_highlight_call_widget .execute-last-named-cmd -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-substitute $'\t_zsh_highlight_call_widget .vi-substitute -- "$@"' _apt-show-versions 'builtin autoload -XU' _xscreensaver 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-yank-eol $'\t_zsh_highlight_call_widget .vi-yank-eol -- "$@"' _gnutls 'builtin autoload -XU' _elm 'builtin autoload -XU' _make 'builtin autoload -XU' _x_resource 'builtin autoload -XU' grename $'\tif [[ -z "$1" || -z "$2" ]]\n\tthen\n\t\techo "Usage: $0 old_branch new_branch"\n\t\treturn 1\n\tfi\n\tgit branch -m "$1" "$2"\n\tif git push origin :"$1"\n\tthen\n\t\tgit push --set-upstream origin "$2"\n\tfi' _pkgrm 'builtin autoload -XU' _gphoto2 'builtin autoload -XU' _message 'builtin autoload -XU' _approximate 'builtin autoload -XU' _members 'builtin autoload -XU' _comm 'builtin autoload -XU' _zfs_pool 'builtin autoload -XU' _swift 'builtin autoload -XU' _x_arguments 'builtin autoload -XU' _strftime 'builtin autoload -XU' _pidof 'builtin autoload -XU' _mtr 'builtin autoload -XU' _netscape 'builtin autoload -XU' _at 'builtin autoload -XU' upgrade_oh_my_zsh $'\techo "${fg[yellow]}Note: \\`$0\\` is deprecated. Use \\`omz update\\` instead.$reset_color" >&2\n\tomz update' _xloadimage 'builtin autoload -XU' bracketed-paste-magic $'\tif [[ "$LASTWIDGET" = *vi-set-buffer ]]\n\tthen\n\t\tzle .bracketed-paste\n\t\treturn\n\telse\n\t\tlocal PASTED REPLY\n\t\tzle .bracketed-paste PASTED\n\tfi\n\tlocal bpm_emulate="$(emulate)" bpm_opts="$-" \n\temulate -L zsh\n\tlocal -a bpm_hooks bpm_inactive\n\tlocal bpm_func bpm_active bpm_keymap=$KEYMAP \n\tif zstyle -a :bracketed-paste-magic paste-init bpm_hooks\n\tthen\n\t\tfor bpm_func in $bpm_hooks\n\t\tdo\n\t\t\tif (( $+functions[$bpm_func] ))\n\t\t\tthen\n\t\t\t\t() {\n\t\t\t\t\temulate -L $bpm_emulate\n\t\t\t\t\tset -$bpm_opts\n\t\t\t\t\t$bpm_func || break\n\t\t\t\t}\n\t\t\tfi\n\t\tdone\n\tfi\n\tzstyle -a :bracketed-paste-magic inactive-keys bpm_inactive\n\tif zstyle -s :bracketed-paste-magic active-widgets bpm_active \'|\'\n\tthen\n\t\tinteger bpm_mark=$MARK bpm_region=$REGION_ACTIVE \n\t\tinteger bpm_numeric=${NUMERIC:-1} \n\t\tinteger bpm_limit=$UNDO_LIMIT_NO bpm_undo=$UNDO_CHANGE_NO \n\t\tzle .split-undo\n\t\tUNDO_LIMIT_NO=$UNDO_CHANGE_NO \n\t\tBUFFER= \n\t\tCURSOR=1 \n\t\tfc -p -a /dev/null 0 0\n\t\tif [[ $bmp_keymap = vicmd ]]\n\t\tthen\n\t\t\tzle -K viins\n\t\tfi\n\t\tNUMERIC=1 \n\t\tzle -U - $PASTED\n\t\twhile [[ -n $PASTED ]] && zle .read-command\n\t\tdo\n\t\t\tPASTED=${PASTED#$KEYS} \n\t\t\tif [[ $KEYS = ${(~j:|:)${(b)bpm_inactive}} ]]\n\t\t\tthen\n\t\t\t\tzle .self-insert\n\t\t\telse\n\t\t\t\tcase $REPLY in\n\t\t\t\t\t(${~bpm_active}) () {\n\t\t\t\t\t\t\temulate -L $bpm_emulate\n\t\t\t\t\t\t\tset -$bpm_opts\n\t\t\t\t\t\t\tzle $REPLY -w\n\t\t\t\t\t\t} ;;\n\t\t\t\t\t(*) zle .self-insert ;;\n\t\t\t\tesac\n\t\t\tfi\n\t\tdone\n\t\tPASTED=$BUFFER \n\t\tzle -K $bpm_keymap\n\t\tfc -P\n\t\tMARK=$bpm_mark \n\t\tREGION_ACTIVE=$bpm_region \n\t\tNUMERIC=$bpm_numeric \n\t\tzle .undo $bpm_undo\n\t\tUNDO_LIMIT_NO=$bpm_limit \n\tfi\n\tif zstyle -a :bracketed-paste-magic paste-finish bpm_hooks\n\tthen\n\t\tfor bpm_func in $bpm_hooks\n\t\tdo\n\t\t\tif (( $+functions[$bpm_func] ))\n\t\t\tthen\n\t\t\t\t() {\n\t\t\t\t\temulate -L $bpm_emulate\n\t\t\t\t\tset -$bpm_opts\n\t\t\t\t\t$bpm_func || break\n\t\t\t\t}\n\t\t\tfi\n\t\tdone\n\tfi\n\tzle -U - $PASTED$\'\\e[201~\'\n\tzle .bracketed-paste -- "$@"\n\tzle .split-undo\n\tif [[ -z $zle_highlight || -n ${(M)zle_highlight:#paste:*} ]]\n\tthen\n\t\tzle -R\n\t\tzle .read-command && zle -U - $KEYS\n\tfi' _pack 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-bracketed-paste $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-bracketed-paste -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-expand-or-complete-prefix $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-expand-or-complete-prefix -- "$@"' _most_recent_file 'builtin autoload -XU' _perl_basepods 'builtin autoload -XU' _zsh_highlight_buffer_modified $'\t[[ "${_ZSH_HIGHLIGHT_PRIOR_BUFFER:-}" != "$BUFFER" ]]' _tcpsys 'builtin autoload -XU' _zsh_highlight_main_highlighter_check_path $'\t_zsh_highlight_main_highlighter_expand_path "$1"\n\tlocal expanded_path="$REPLY" tmp_path \n\tinteger in_command_position=$2 \n\tif [[ $zsyh_user_options[autocd] == on ]]\n\tthen\n\t\tinteger autocd=1 \n\telse\n\t\tinteger autocd=0 \n\tfi\n\tif (( in_command_position ))\n\tthen\n\t\tREPLY=arg0 \n\telse\n\t\tREPLY=path \n\tfi\n\tif [[ ${1[1]} == \'=\' && $1 == ??* && ${1[2]} != $\'\\x28\' && $zsyh_user_options[equals] == \'on\' && $expanded_path[1] != \'/\' ]]\n\tthen\n\t\tREPLY=unknown-token \n\t\treturn 0\n\tfi\n\t[[ -z $expanded_path ]] && return 1\n\tif [[ $expanded_path[1] == / ]]\n\tthen\n\t\ttmp_path=$expanded_path \n\telse\n\t\ttmp_path=$PWD/$expanded_path \n\tfi\n\ttmp_path=$tmp_path:a \n\twhile [[ $tmp_path != / ]]\n\tdo\n\t\t[[ -n ${(M)ZSH_HIGHLIGHT_DIRS_BLACKLIST:#$tmp_path} ]] && return 1\n\t\ttmp_path=$tmp_path:h \n\tdone\n\tif (( in_command_position ))\n\tthen\n\t\tif [[ -x $expanded_path ]]\n\t\tthen\n\t\t\tif (( autocd ))\n\t\t\tthen\n\t\t\t\tif [[ -d $expanded_path ]]\n\t\t\t\tthen\n\t\t\t\t\tREPLY=autodirectory \n\t\t\t\tfi\n\t\t\t\treturn 0\n\t\t\telif [[ ! -d $expanded_path ]]\n\t\t\tthen\n\t\t\t\treturn 0\n\t\t\tfi\n\t\tfi\n\telse\n\t\tif [[ -L $expanded_path || -e $expanded_path ]]\n\t\tthen\n\t\t\treturn 0\n\t\tfi\n\tfi\n\tif [[ $expanded_path != /* ]] && (( autocd || ! in_command_position ))\n\tthen\n\t\tlocal cdpath_dir\n\t\tfor cdpath_dir in $cdpath\n\t\tdo\n\t\t\tif [[ -d "$cdpath_dir/$expanded_path" && -x "$cdpath_dir/$expanded_path" ]]\n\t\t\tthen\n\t\t\t\tif (( in_command_position && autocd ))\n\t\t\t\tthen\n\t\t\t\t\tREPLY=autodirectory \n\t\t\t\tfi\n\t\t\t\treturn 0\n\t\t\tfi\n\t\tdone\n\tfi\n\t[[ ! -d ${expanded_path:h} ]] && return 1\n\tif (( has_end && (len == end_pos) )) && (( ! $#in_alias )) && [[ $WIDGET != zle-line-finish ]]\n\tthen\n\t\tlocal -a tmp\n\t\tif (( in_command_position ))\n\t\tthen\n\t\t\ttmp=(${expanded_path}*(N-*,N-/)) \n\t\telse\n\t\t\ttmp=(${expanded_path}*(N)) \n\t\tfi\n\t\t(( ${+tmp[1]} )) && REPLY=path_prefix  && return 0\n\tfi\n\treturn 1' _rdesktop 'builtin autoload -XU' _zcalc_line 'builtin autoload -XU' _xmms2 'builtin autoload -XU' _yodl 'builtin autoload -XU' _dlocate 'builtin autoload -XU' _mtools 'builtin autoload -XU' _retry_clipboard_detection_or_fail $'\tlocal clipcmd="${1}" \n\tshift\n\tif detect-clipboard\n\tthen\n\t\t"${clipcmd}" "$@"\n\telse\n\t\tprint "${clipcmd}: Platform $OSTYPE not supported or xclip/xsel not installed" >&2\n\t\treturn 1\n\tfi' _omz::plugin::disable $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <plugin> [...]" >&2\n\t\treturn 1\n\tfi\n\tlocal -a dis_plugins\n\tfor plugin in "$@"\n\tdo\n\t\tif [[ ${plugins[(Ie)$plugin]} -eq 0 ]]\n\t\tthen\n\t\t\t_omz::log warn "plugin \'$plugin\' is not enabled."\n\t\t\tcontinue\n\t\tfi\n\t\tdis_plugins+=("$plugin") \n\tdone\n\tif [[ ${#dis_plugins} -eq 0 ]]\n\tthen\n\t\treturn 1\n\tfi\n\tlocal awk_subst_plugins="  gsub(/\\s+(${(j:|:)dis_plugins})/, \\"\\") # with spaces before\n  gsub(/(${(j:|:)dis_plugins})\\s+/, \\"\\") # with spaces after\n  gsub(/\\((${(j:|:)dis_plugins})\\)/, \\"\\") # without spaces (only plugin)\n" \n\tlocal awk_script="\n# if plugins=() is in oneline form, substitute disabled plugins and go to next line\n/^\\s*plugins=\\([^#]+\\).*\\$/ {\n  $awk_subst_plugins\n  print \\$0\n  next\n}\n\n# if plugins=() is in multiline form, enable multi flag and disable plugins if they\'re there\n/^\\s*plugins=\\(/ {\n  multi=1\n  $awk_subst_plugins\n  print \\$0\n  next\n}\n\n# if multi flag is enabled and we find a valid closing parenthesis, remove plugins and disable multi flag\nmulti == 1 && /^[^#]*\\)/ {\n  multi=0\n  $awk_subst_plugins\n  print \\$0\n  next\n}\n\nmulti == 1 && length(\\$0) > 0 {\n  $awk_subst_plugins\n  if (length(\\$0) > 0) print \\$0\n  next\n}\n\n{ print \\$0 }\n" \n\tlocal zdot="${ZDOTDIR:-$HOME}" \n\tawk "$awk_script" "$zdot/.zshrc" > "$zdot/.zshrc.new" && command mv -f "$zdot/.zshrc" "$zdot/.zshrc.bck" && command mv -f "$zdot/.zshrc.new" "$zdot/.zshrc"\n\t[[ $? -eq 0 ]] || {\n\t\tlocal ret=$? \n\t\t_omz::log error "error disabling plugins."\n\t\treturn $ret\n\t}\n\tif ! command zsh -n "$zdot/.zshrc"\n\tthen\n\t\t_omz::log error "broken syntax in \'"${zdot/#$HOME/\\~}/.zshrc"\'. Rolling back changes..."\n\t\tcommand mv -f "$zdot/.zshrc" "$zdot/.zshrc.new"\n\t\tcommand mv -f "$zdot/.zshrc.bck" "$zdot/.zshrc"\n\t\treturn 1\n\tfi\n\t_omz::log info "plugins disabled: ${(j:, :)dis_plugins}."\n\t[[ ! -o interactive ]] || _omz::reload' _java 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_single_quote $'\tlocal arg1=$1 i q=\\\' style \n\ti=$arg[(ib:arg1+1:)$q] \n\treply=() \n\tif [[ $zsyh_user_options[rcquotes] == on ]]\n\tthen\n\t\twhile [[ $arg[i+1] == "\'" ]]\n\t\tdo\n\t\t\treply+=($(( start_pos + i - 1 )) $(( start_pos + i + 1 )) rc-quote) \n\t\t\t(( i++ ))\n\t\t\ti=$arg[(ib:i+1:)$q] \n\t\tdone\n\tfi\n\tif [[ $arg[i] == "\'" ]]\n\tthen\n\t\tstyle=single-quoted-argument \n\telse\n\t\t(( i-- ))\n\t\tstyle=single-quoted-argument-unclosed \n\tfi\n\treply=($(( start_pos + arg1 - 1 )) $(( start_pos + i )) $style $reply) \n\tREPLY=$i ' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-search $'\t_zsh_highlight_call_widget .accept-search -- "$@"' _tardy 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-clear-screen $'\t_zsh_highlight_call_widget .clear-screen -- "$@"' tf_prompt_info $'\treturn 1' _cd $'\t_cd_options () {\n\t\t_arguments -s \'-q[quiet, no output or use of hooks]\' \'-s[refuse to use paths with symlinks]\' \'(-P)-L[retain symbolic links ignoring CHASE_LINKS]\' \'(-L)-P[resolve symbolic links as CHASE_LINKS]\'\n\t}\n\tsetopt localoptions nonomatch\n\tlocal expl ret=1 curarg \n\tinteger argstart=2 noopts \n\tif (( CURRENT > 1 ))\n\tthen\n\t\twhile [[ $words[$argstart] = -* && argstart -lt CURRENT ]]\n\t\tdo\n\t\t\tcurarg=$words[$argstart] \n\t\t\t[[ $curarg = -<-> ]] && break\n\t\t\t(( argstart++ ))\n\t\t\t[[ $curarg = -- ]] && noopts=1  && break\n\t\tdone\n\tfi\n\tif [[ CURRENT -eq $((argstart+1)) ]]\n\tthen\n\t\tlocal rep\n\t\trep=(${~PWD/$words[$argstart]/*}~$PWD(-/)) \n\t\trep=(${${rep#${PWD%%$words[$argstart]*}}%${PWD#*$words[$argstart]}}) \n\t\t(( $#rep )) && _wanted -C replacement strings expl replacement compadd -a rep\n\telse\n\t\tif [[ "$PREFIX" == (#b)(\\~|)[^/]# && ( -n "$match[1]" || ( CURRENT -gt 1 && ! -o cdablevars ) ) ]]\n\t\tthen\n\t\t\t_directory_stack && ret=0 \n\t\tfi\n\t\tlocal -a tmpWpath\n\t\tif [[ $PREFIX = (|*/)../* ]]\n\t\tthen\n\t\t\tlocal tmpprefix\n\t\t\ttmpprefix=$(cd ${PREFIX%/*} >&/dev/null && print $PWD) \n\t\t\tif [[ -n $tmpprefix ]]\n\t\t\tthen\n\t\t\t\ttmpWpath=(-W $tmpprefix) \n\t\t\t\tIPREFIX=${IPREFIX}${PREFIX%/*}/ \n\t\t\t\tPREFIX=${PREFIX##*/} \n\t\t\tfi\n\t\tfi\n\t\tif [[ $PREFIX != (\\~|/|./|../)* && $IPREFIX != ../* ]]\n\t\tthen\n\t\t\tlocal tmpcdpath alt\n\t\t\talt=() \n\t\t\ttmpcdpath=(${${(@)cdpath:#.}:#$PWD}) \n\t\t\t(( $#tmpcdpath )) && alt=(\'path-directories:directory in cdpath:_path_files -W tmpcdpath -/\') \n\t\t\tif [[ -o cdablevars && -n "$PREFIX" && "$PREFIX" != <-> ]]\n\t\t\tthen\n\t\t\t\tif [[ "$PREFIX" != */* ]]\n\t\t\t\tthen\n\t\t\t\t\talt=("$alt[@]" \'named-directories: : _tilde\') \n\t\t\t\telse\n\t\t\t\t\tlocal oipre="$IPREFIX" opre="$PREFIX" dirpre dir \n\t\t\t\t\tdirpre="${PREFIX%%/*}/" \n\t\t\t\t\tIPREFIX="$IPREFIX$dirpre" \n\t\t\t\t\teval "dir=( ~$dirpre )"\n\t\t\t\t\tPREFIX="${PREFIX#*/}" \n\t\t\t\t\t[[ $#dir -eq 1 && "$dir[1]" != "~$dirpre" ]] && _wanted named-directories expl \'directory after cdablevar\' _path_files -W dir -/ && ret=0 \n\t\t\t\t\tPREFIX="$opre" \n\t\t\t\t\tIPREFIX="$oipre" \n\t\t\t\tfi\n\t\t\tfi\n\t\t\t[[ CURRENT -ne 1 || ( -z "$path[(r).]" && $PREFIX != */* ) ]] && alt=("${cdpath+local-}directories:${cdpath+local }directory:_path_files ${(j: :)${(@q)tmpWpath}} -/" "$alt[@]") \n\t\t\tif [[ CURRENT -eq argstart && noopts -eq 0 && $PREFIX = -* ]] && zstyle -t ":completion:${curcontext}:options" complete-options\n\t\t\tthen\n\t\t\t\talt=("$service-options:$service option:_cd_options" "$alt[@]") \n\t\t\tfi\n\t\t\t_alternative "$alt[@]" && ret=0 \n\t\t\treturn ret\n\t\tfi\n\t\t[[ CURRENT -ne 1 ]] && _wanted directories expl directory _path_files $tmpWpath -/ && ret=0 \n\t\treturn ret\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-a-word $'\t_zsh_highlight_call_widget .select-a-word -- "$@"' _tar_archive 'builtin autoload -XU' _jls 'builtin autoload -XU' _env 'builtin autoload -XU' _whois 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-expand-cmd-path $'\t_zsh_highlight_call_widget .expand-cmd-path -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-join $'\t_zsh_highlight_call_widget .vi-join -- "$@"' _gcc 'builtin autoload -XU' _omz::update $'\tlocal last_commit=$(builtin cd -q "$ZSH"; git rev-parse HEAD) \n\tif [[ "$1" != --unattended ]]\n\tthen\n\t\tZSH="$ZSH" command zsh -f "$ZSH/tools/upgrade.sh" --interactive || return $?\n\telse\n\t\tZSH="$ZSH" command zsh -f "$ZSH/tools/upgrade.sh" || return $?\n\tfi\n\tzmodload zsh/datetime\n\techo "LAST_EPOCH=$(( EPOCHSECONDS / 60 / 60 / 24 ))" >| "${ZSH_CACHE_DIR}/.zsh-update"\n\tcommand rm -rf "$ZSH/log/update.lock"\n\tif [[ "$1" != --unattended && "$(builtin cd -q "$ZSH"; git rev-parse HEAD)" != "$last_commit" ]]\n\tthen\n\t\tlocal zsh="${ZSH_ARGZERO:-${functrace[-1]%:*}}" \n\t\t[[ "$zsh" = -* || -o login ]] && exec -l "${zsh#-}" || exec "$zsh"\n\tfi' _zsh_highlight_highlighter_main_predicate $'\t[[ $WIDGET == zle-line-finish ]] || _zsh_highlight_buffer_modified' _jexec 'builtin autoload -XU' _objdump 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-what-cursor-position $'\t_zsh_highlight_call_widget .what-cursor-position -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-incremental-pattern-search-forward $'\t_zsh_highlight_call_widget .history-incremental-pattern-search-forward -- "$@"' gccd $'\tcommand git clone --recurse-submodules "$@"\n\t[[ -d "$_" ]] && cd "$_" || cd "${${_:t}%.git}"' _snap 'builtin autoload -XU' _cp 'builtin autoload -XU' _stty 'builtin autoload -XU' _devtodo 'builtin autoload -XU' _systemd-resolve 'builtin autoload -XU' _cu 'builtin autoload -XU' _pdftk 'builtin autoload -XU' _texi 'builtin autoload -XU' _grep-excuses 'builtin autoload -XU' _nslookup 'builtin autoload -XU' _totd 'builtin autoload -XU' _unison 'builtin autoload -XU' _call_function 'builtin autoload -XU' _truss 'builtin autoload -XU' _ttyctl 'builtin autoload -XU' _dd 'builtin autoload -XU' _df 'builtin autoload -XU' _tin 'builtin autoload -XU' is_plugin $'\tlocal base_dir=$1 \n\tlocal name=$2 \n\tbuiltin test -f $base_dir/plugins/$name/$name.plugin.zsh || builtin test -f $base_dir/plugins/$name/_$name' _svcprop 'builtin autoload -XU' _gdb 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-forward-word $'\t_zsh_highlight_call_widget .forward-word -- "$@"' git_prompt_long_sha $'\tlocal SHA\n\tSHA=$(__git_prompt_git rev-parse HEAD 2> /dev/null)  && echo "$ZSH_THEME_GIT_PROMPT_SHA_BEFORE$SHA$ZSH_THEME_GIT_PROMPT_SHA_AFTER"' _du 'builtin autoload -XU' _attr 'builtin autoload -XU' pyenv_prompt_info $'\treturn 1' _sd_outputmodes 'builtin autoload -XU' _iftop 'builtin autoload -XU' _jobs_builtin 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-menu-expand-or-complete $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-menu-expand-or-complete -- "$@"' __git_prompt_git $'\tGIT_OPTIONAL_LOCKS=0 command git "$@"' _enable 'builtin autoload -XU' _pine 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-and-infer-next-history $'\t_zsh_highlight_call_widget .accept-and-infer-next-history -- "$@"' _ping 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-insert-last-word $'\t_zsh_highlight_call_widget .insert-last-word -- "$@"' _patch 'builtin autoload -XU' _wget 'builtin autoload -XU' _lsvg 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-forward-char $'\t_zsh_highlight_call_widget .vi-forward-char -- "$@"' _omz::theme::set $'\tif [[ -z "$1" ]]\n\tthen\n\t\techo "Usage: ${(j: :)${(s.::.)0#_}} <theme>" >&2\n\t\treturn 1\n\tfi\n\tif [[ ! -f "$ZSH_CUSTOM/$1.zsh-theme" ]] && [[ ! -f "$ZSH_CUSTOM/themes/$1.zsh-theme" ]] && [[ ! -f "$ZSH/themes/$1.zsh-theme" ]]\n\tthen\n\t\t_omz::log error "%B$1%b theme not found"\n\t\treturn 1\n\tfi\n\tlocal awk_script=\'\n!set && /^\\s*ZSH_THEME=[^#]+.*$/ {\n  set=1\n  sub(/^\\s*ZSH_THEME=[^#]+.*$/, "ZSH_THEME=\\"\'$1\'\\" # set by `omz`")\n  print $0\n  next\n}\n\n{ print $0 }\n\nEND {\n  # If no ZSH_THEME= line was found, return an error\n  if (!set) exit 1\n}\n\' \n\tlocal zdot="${ZDOTDIR:-$HOME}" \n\tawk "$awk_script" "$zdot/.zshrc" > "$zdot/.zshrc.new" || {\n\t\tcat <<EOF\nZSH_THEME="$1" # set by \\`omz\\`\n\nEOF\n\t\tcat "$zdot/.zshrc"\n\t} > "$zdot/.zshrc.new" && command mv -f "$zdot/.zshrc" "$zdot/.zshrc.bck" && command mv -f "$zdot/.zshrc.new" "$zdot/.zshrc"\n\t[[ $? -eq 0 ]] || {\n\t\tlocal ret=$? \n\t\t_omz::log error "error setting theme."\n\t\treturn $ret\n\t}\n\tif ! command zsh -n "$zdot/.zshrc"\n\tthen\n\t\t_omz::log error "broken syntax in \'"${zdot/#$HOME/\\~}/.zshrc"\'. Rolling back changes..."\n\t\tcommand mv -f "$zdot/.zshrc" "$zdot/.zshrc.new"\n\t\tcommand mv -f "$zdot/.zshrc.bck" "$zdot/.zshrc"\n\t\treturn 1\n\tfi\n\t_omz::log info "\'$1\' theme set correctly."\n\t[[ ! -o interactive ]] || _omz::reload' _joe 'builtin autoload -XU' _growisofs 'builtin autoload -XU' _fc 'builtin autoload -XU' _jot 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-line-or-search $'\t_zsh_highlight_call_widget .down-line-or-search -- "$@"' _zones 'builtin autoload -XU' _last 'builtin autoload -XU' _ldd 'builtin autoload -XU' _renice 'builtin autoload -XU' _spamassassin 'builtin autoload -XU' _omz $'\tlocal -a cmds subcmds\n\tcmds=(\'changelog:Print the changelog\' \'help:Usage information\' \'plugin:Manage plugins\' \'pr:Manage Oh My Zsh Pull Requests\' \'reload:Reload the current zsh session\' \'theme:Manage themes\' \'update:Update Oh My Zsh\' \'version:Show the version\') \n\tif (( CURRENT == 2 ))\n\tthen\n\t\t_describe \'command\' cmds\n\telif (( CURRENT == 3 ))\n\tthen\n\t\tcase "$words[2]" in\n\t\t\t(changelog) local -a refs\n\t\t\t\trefs=("${(@f)$(builtin cd -q "$ZSH"; command git for-each-ref --format="%(refname:short):%(subject)" refs/heads refs/tags)}") \n\t\t\t\t_describe \'command\' refs ;;\n\t\t\t(plugin) subcmds=(\'disable:Disable plugin(s)\' \'enable:Enable plugin(s)\' \'info:Get plugin information\' \'list:List plugins\' \'load:Load plugin(s)\') \n\t\t\t\t_describe \'command\' subcmds ;;\n\t\t\t(pr) subcmds=(\'clean:Delete all Pull Request branches\' \'test:Test a Pull Request\') \n\t\t\t\t_describe \'command\' subcmds ;;\n\t\t\t(theme) subcmds=(\'list:List themes\' \'set:Set a theme in your .zshrc file\' \'use:Load a theme\') \n\t\t\t\t_describe \'command\' subcmds ;;\n\t\tesac\n\telif (( CURRENT == 4 ))\n\tthen\n\t\tcase "${words[2]}::${words[3]}" in\n\t\t\t(plugin::(disable|enable|load)) local -aU valid_plugins\n\t\t\t\tif [[ "${words[3]}" = disable ]]\n\t\t\t\tthen\n\t\t\t\t\tvalid_plugins=($plugins) \n\t\t\t\telse\n\t\t\t\t\tvalid_plugins=("$ZSH"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t) "$ZSH_CUSTOM"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t)) \n\t\t\t\t\t[[ "${words[3]}" = enable ]] && valid_plugins=(${valid_plugins:|plugins}) \n\t\t\t\tfi\n\t\t\t\t_describe \'plugin\' valid_plugins ;;\n\t\t\t(plugin::info) local -aU plugins\n\t\t\t\tplugins=("$ZSH"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t) "$ZSH_CUSTOM"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t)) \n\t\t\t\t_describe \'plugin\' plugins ;;\n\t\t\t(theme::(set|use)) local -aU themes\n\t\t\t\tthemes=("$ZSH"/themes/*.zsh-theme(-.N:t:r) "$ZSH_CUSTOM"/**/*.zsh-theme(-.N:r:gs:"$ZSH_CUSTOM"/themes/:::gs:"$ZSH_CUSTOM"/:::)) \n\t\t\t\t_describe \'theme\' themes ;;\n\t\tesac\n\telif (( CURRENT > 4 ))\n\tthen\n\t\tcase "${words[2]}::${words[3]}" in\n\t\t\t(plugin::(enable|disable|load)) local -aU valid_plugins\n\t\t\t\tif [[ "${words[3]}" = disable ]]\n\t\t\t\tthen\n\t\t\t\t\tvalid_plugins=($plugins) \n\t\t\t\telse\n\t\t\t\t\tvalid_plugins=("$ZSH"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t) "$ZSH_CUSTOM"/plugins/*/{_*,*.plugin.zsh}(-.N:h:t)) \n\t\t\t\t\t[[ "${words[3]}" = enable ]] && valid_plugins=(${valid_plugins:|plugins}) \n\t\t\t\tfi\n\t\t\t\tlocal -a args\n\t\t\t\targs=(${words[4,$(( CURRENT - 1))]}) \n\t\t\t\tvalid_plugins=(${valid_plugins:|args}) \n\t\t\t\t_describe \'plugin\' valid_plugins ;;\n\t\tesac\n\tfi\n\treturn 0' _zsh_highlight_widget_orig-s0.0000050000-r18109-copy-region-as-kill $'\t_zsh_highlight_call_widget .copy-region-as-kill -- "$@"' _widgets 'builtin autoload -XU' detect-clipboard $'\temulate -L zsh\n\tif [[ "${OSTYPE}" == darwin* ]] && (( ${+commands[pbcopy]} )) && (( ${+commands[pbpaste]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\tpbcopy < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\tpbpaste\n\t\t}\n\telif [[ "${OSTYPE}" == (cygwin|msys)* ]]\n\tthen\n\t\tclipcopy () {\n\t\t\tcat "${1:-/dev/stdin}" > /dev/clipboard\n\t\t}\n\t\tclippaste () {\n\t\t\tcat /dev/clipboard\n\t\t}\n\telif [ -n "${WAYLAND_DISPLAY:-}" ] && (( ${+commands[wl-copy]} )) && (( ${+commands[wl-paste]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\twl-copy < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\twl-paste\n\t\t}\n\telif [ -n "${DISPLAY:-}" ] && (( ${+commands[xclip]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\txclip -in -selection clipboard < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\txclip -out -selection clipboard\n\t\t}\n\telif [ -n "${DISPLAY:-}" ] && (( ${+commands[xsel]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\txsel --clipboard --input < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\txsel --clipboard --output\n\t\t}\n\telif (( ${+commands[lemonade]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\tlemonade copy < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\tlemonade paste\n\t\t}\n\telif (( ${+commands[doitclient]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\tdoitclient wclip < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\tdoitclient wclip -r\n\t\t}\n\telif (( ${+commands[win32yank]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\twin32yank -i < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\twin32yank -o\n\t\t}\n\telif [[ $OSTYPE == linux-android* ]] && (( $+commands[termux-clipboard-set] ))\n\tthen\n\t\tclipcopy () {\n\t\t\ttermux-clipboard-set < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\ttermux-clipboard-get\n\t\t}\n\telif [ -n "${TMUX:-}" ] && (( ${+commands[tmux]} ))\n\tthen\n\t\tclipcopy () {\n\t\t\ttmux load-buffer "${1:--}"\n\t\t}\n\t\tclippaste () {\n\t\t\ttmux save-buffer -\n\t\t}\n\telif [[ $(uname -r) = *icrosoft* ]]\n\tthen\n\t\tclipcopy () {\n\t\t\tclip.exe < "${1:-/dev/stdin}"\n\t\t}\n\t\tclippaste () {\n\t\t\tpowershell.exe -noprofile -command Get-Clipboard\n\t\t}\n\telse\n\t\t_retry_clipboard_detection_or_fail () {\n\t\t\tlocal clipcmd="${1}" \n\t\t\tshift\n\t\t\tif detect-clipboard\n\t\t\tthen\n\t\t\t\t"${clipcmd}" "$@"\n\t\t\telse\n\t\t\t\tprint "${clipcmd}: Platform $OSTYPE not supported or xclip/xsel not installed" >&2\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t}\n\t\tclipcopy () {\n\t\t\t_retry_clipboard_detection_or_fail clipcopy "$@"\n\t\t}\n\t\tclippaste () {\n\t\t\t_retry_clipboard_detection_or_fail clippaste "$@"\n\t\t}\n\t\treturn 1\n\tfi' _x_keysym 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-line-or-search $'\t_zsh_highlight_call_widget .up-line-or-search -- "$@"' url-quote-magic $'\tsetopt localoptions noksharrays extendedglob\n\tlocal qkey="${(q)KEYS}" \n\tlocal -a reply match mbegin mend\n\tif [[ "$KEYS" != "$qkey" ]]\n\tthen\n\t\tlocal lbuf="$LBUFFER$qkey" \n\t\tif [[ "${(Q)LBUFFER}$KEYS" == "${(Q)lbuf}" ]]\n\t\tthen\n\t\t\tlocal -a words\n\t\t\twords=("${(@Q)${(z)lbuf}}") \n\t\t\tlocal urlseps urlmetas urlglobbers localschema otherschema\n\t\t\tif [[ "$words[-1]" == (#b)([^:]##):* ]]\n\t\t\tthen\n\t\t\t\tzstyle -s ":url-quote-magic:$match[1]" url-seps urlseps \'\'\n\t\t\t\tzstyle -s ":url-quote-magic:$match[1]" url-metas urlmetas \'\'\n\t\t\tfi\n\t\t\tzstyle -s :url-quote-magic url-globbers urlglobbers \'|\'\n\t\t\tzstyle -s :urlglobber url-other-schema otherschema \'|\'\n\t\t\tif [[ "$words[1]" == ${~urlglobbers} ]]\n\t\t\tthen\n\t\t\t\tzstyle -s :urlglobber url-local-schema localschema \'|\'\n\t\t\telse\n\t\t\t\tlocalschema=\' \' \n\t\t\tfi\n\t\t\tcase "$words[-1]" in\n\t\t\t\t(*[\\\'\\"]*)  ;;\n\t\t\t\t((${~localschema}):/(|/localhost)/*) [[ "$urlseps" == *"$KEYS"* ]] && LBUFFER="$LBUFFER\\\\"  ;;\n\t\t\t\t((${~otherschema}):*) [[ "$urlseps$urlmetas" == *"$KEYS"* ]] && LBUFFER="$LBUFFER\\\\"  ;;\n\t\t\tesac\n\t\tfi\n\tfi\n\tzle .self-insert' _zsh_highlight_widget_orig-s0.0000050000-r18109-redisplay $'\t_zsh_highlight_call_widget .redisplay -- "$@"' _vmstat 'builtin autoload -XU' _tla 'builtin autoload -XU' _hostnamectl 'builtin autoload -XU' alias_value $'\t(( $+aliases[$1] )) && echo $aliases[$1]' _xournal 'builtin autoload -XU' _surfraw 'builtin autoload -XU' _x_visual 'builtin autoload -XU' _open 'builtin autoload -XU' _nedit 'builtin autoload -XU' _go 'builtin autoload -XU' _zsh_highlight_main_highlighter_highlight_argument $'\tlocal base_style=default i=$1 option_eligible=${2:-1} path_eligible=1 ret start style \n\tlocal -a highlights\n\tlocal -a match mbegin mend\n\tlocal MATCH\n\tinteger MBEGIN MEND\n\tcase "$arg[i]" in\n\t\t(\'%\') if [[ $arg[i+1] == \'?\' ]]\n\t\t\tthen\n\t\t\t\t(( i += 2 ))\n\t\t\tfi ;;\n\t\t(\'-\') if (( option_eligible ))\n\t\t\tthen\n\t\t\t\tif [[ $arg[i+1] == - ]]\n\t\t\t\tthen\n\t\t\t\t\tbase_style=double-hyphen-option \n\t\t\t\telse\n\t\t\t\t\tbase_style=single-hyphen-option \n\t\t\t\tfi\n\t\t\t\tpath_eligible=0 \n\t\t\tfi ;;\n\t\t(\'=\') if [[ $arg[i+1] == $\'\\x28\' ]]\n\t\t\tthen\n\t\t\t\t(( i += 2 ))\n\t\t\t\t_zsh_highlight_main_highlighter_highlight_list $(( start_pos + i - 1 )) S $has_end $arg[i,-1]\n\t\t\t\tret=$? \n\t\t\t\t(( i += REPLY ))\n\t\t\t\thighlights+=($(( start_pos + $1 - 1 )) $(( start_pos + i )) process-substitution $(( start_pos + $1 - 1 )) $(( start_pos + $1 + 1 )) process-substitution-delimiter $reply) \n\t\t\t\tif (( ret == 0 ))\n\t\t\t\tthen\n\t\t\t\t\thighlights+=($(( start_pos + i - 1 )) $(( start_pos + i )) process-substitution-delimiter) \n\t\t\t\tfi\n\t\t\tfi ;;\n\tesac\n\t(( --i ))\n\twhile (( ++i <= $#arg ))\n\tdo\n\t\ti=${arg[(ib.i.)[\\\\\\\'\\"\\`\\$\\<\\>\\*\\?]]} \n\t\tcase "$arg[$i]" in\n\t\t\t("") break ;;\n\t\t\t("\\\\") (( i += 1 ))\n\t\t\t\tcontinue ;;\n\t\t\t("\'") _zsh_highlight_main_highlighter_highlight_single_quote $i\n\t\t\t\t(( i = REPLY ))\n\t\t\t\thighlights+=($reply)  ;;\n\t\t\t(\'"\') _zsh_highlight_main_highlighter_highlight_double_quote $i\n\t\t\t\t(( i = REPLY ))\n\t\t\t\thighlights+=($reply)  ;;\n\t\t\t(\'`\') _zsh_highlight_main_highlighter_highlight_backtick $i\n\t\t\t\t(( i = REPLY ))\n\t\t\t\thighlights+=($reply)  ;;\n\t\t\t(\'$\') if [[ $arg[i+1] != "\'" ]]\n\t\t\t\tthen\n\t\t\t\t\tpath_eligible=0 \n\t\t\t\tfi\n\t\t\t\tif [[ $arg[i+1] == "\'" ]]\n\t\t\t\tthen\n\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_dollar_quote $i\n\t\t\t\t\t(( i = REPLY ))\n\t\t\t\t\thighlights+=($reply) \n\t\t\t\t\tcontinue\n\t\t\t\telif [[ $arg[i+1] == $\'\\x28\' ]]\n\t\t\t\tthen\n\t\t\t\t\tif [[ $arg[i+2] == $\'\\x28\' ]] && _zsh_highlight_main_highlighter_highlight_arithmetic $i\n\t\t\t\t\tthen\n\t\t\t\t\t\t(( i = REPLY ))\n\t\t\t\t\t\thighlights+=($reply) \n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\tstart=$i \n\t\t\t\t\t(( i += 2 ))\n\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_list $(( start_pos + i - 1 )) S $has_end $arg[i,-1]\n\t\t\t\t\tret=$? \n\t\t\t\t\t(( i += REPLY ))\n\t\t\t\t\thighlights+=($(( start_pos + start - 1)) $(( start_pos + i )) command-substitution-unquoted $(( start_pos + start - 1)) $(( start_pos + start + 1)) command-substitution-delimiter-unquoted $reply) \n\t\t\t\t\tif (( ret == 0 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\thighlights+=($(( start_pos + i - 1)) $(( start_pos + i )) command-substitution-delimiter-unquoted) \n\t\t\t\t\tfi\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\t\twhile [[ $arg[i+1] == [=~#+\'^\'] ]]\n\t\t\t\tdo\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\tdone\n\t\t\t\tif [[ $arg[i+1] == [*@#?$!-] ]]\n\t\t\t\tthen\n\t\t\t\t\t(( i += 1 ))\n\t\t\t\tfi ;;\n\t\t\t([\\<\\>]) if [[ $arg[i+1] == $\'\\x28\' ]]\n\t\t\t\tthen\n\t\t\t\t\tstart=$i \n\t\t\t\t\t(( i += 2 ))\n\t\t\t\t\t_zsh_highlight_main_highlighter_highlight_list $(( start_pos + i - 1 )) S $has_end $arg[i,-1]\n\t\t\t\t\tret=$? \n\t\t\t\t\t(( i += REPLY ))\n\t\t\t\t\thighlights+=($(( start_pos + start - 1)) $(( start_pos + i )) process-substitution $(( start_pos + start - 1)) $(( start_pos + start + 1 )) process-substitution-delimiter $reply) \n\t\t\t\t\tif (( ret == 0 ))\n\t\t\t\t\tthen\n\t\t\t\t\t\thighlights+=($(( start_pos + i - 1)) $(( start_pos + i )) process-substitution-delimiter) \n\t\t\t\t\tfi\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;|\n\t\t\t(*) if $highlight_glob && [[ $zsyh_user_options[multios] == on || $in_redirection -eq 0 ]] && [[ ${arg[$i]} =~ ^[*?] || ${arg:$i-1} =~ ^\\<[0-9]*-[0-9]*\\> ]]\n\t\t\t\tthen\n\t\t\t\t\thighlights+=($(( start_pos + i - 1 )) $(( start_pos + i + $#MATCH - 1)) globbing) \n\t\t\t\t\t(( i += $#MATCH - 1 ))\n\t\t\t\t\tpath_eligible=0 \n\t\t\t\telse\n\t\t\t\t\tcontinue\n\t\t\t\tfi ;;\n\t\tesac\n\tdone\n\tif (( path_eligible ))\n\tthen\n\t\tif (( in_redirection )) && [[ $last_arg == *[\'<>\'][\'&\'] && $arg[$1,-1] == (<0->|p|-) ]]\n\t\tthen\n\t\t\tif [[ $arg[$1,-1] == (p|-) ]]\n\t\t\tthen\n\t\t\t\tbase_style=redirection \n\t\t\telse\n\t\t\t\tbase_style=numeric-fd \n\t\t\tfi\n\t\telif _zsh_highlight_main_highlighter_check_path $arg[$1,-1] 0\n\t\tthen\n\t\t\tbase_style=$REPLY \n\t\t\t_zsh_highlight_main_highlighter_highlight_path_separators $base_style\n\t\t\thighlights+=($reply) \n\t\tfi\n\tfi\n\thighlights=($(( start_pos + $1 - 1 )) $end_pos $base_style $highlights) \n\t_zsh_highlight_main_add_many_region_highlights $highlights' _dir_list 'builtin autoload -XU' _gs 'builtin autoload -XU' _tidy 'builtin autoload -XU' _bison 'builtin autoload -XU' _loginctl 'builtin autoload -XU' _gv 'builtin autoload -XU' _debcheckout 'builtin autoload -XU' _schedtool 'builtin autoload -XU' try_alias_value $'\talias_value "$1" || echo "$1"' _unhash 'builtin autoload -XU' _in_vared 'builtin autoload -XU' _mergechanges 'builtin autoload -XU' _cdcd 'builtin autoload -XU' git_prompt_behind $'\tif [[ -n "$(__git_prompt_git rev-list HEAD..origin/$(git_current_branch) 2> /dev/null)" ]]\n\tthen\n\t\techo "$ZSH_THEME_GIT_PROMPT_BEHIND"\n\tfi' _hg 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-infer-next-history $'\t_zsh_highlight_call_widget .infer-next-history -- "$@"' _wanna-build 'builtin autoload -XU' _zlogin 'builtin autoload -XU' _xmodmap 'builtin autoload -XU' _pkg5 'builtin autoload -XU' _lsblk 'builtin autoload -XU' _locate 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-word $'\t_zsh_highlight_call_widget .backward-word -- "$@"' _dynamic_directory_name 'builtin autoload -XU' _bind_addresses 'builtin autoload -XU' _zmodload 'builtin autoload -XU' ggpnp $'\tif [[ "$#" == 0 ]]\n\tthen\n\t\tggl && ggp\n\telse\n\t\tggl "${*}" && ggp "${*}"\n\tfi' _alternative $'\tlocal tags def expl descr action mesgs nm="$compstate[nmatches]" subopts \n\tlocal opt ws curcontext="$curcontext" \n\tsubopts=() \n\twhile getopts \'O:C:\' opt\n\tdo\n\t\tcase "$opt" in\n\t\t\t(O) subopts=("${(@P)OPTARG}")  ;;\n\t\t\t(C) curcontext="${curcontext%:*}:$OPTARG"  ;;\n\t\tesac\n\tdone\n\tshift OPTIND-1\n\t[[ "$1" = -(|-) ]] && shift\n\tmesgs=() \n\t_tags "${(@)argv%%:*}"\n\twhile _tags\n\tdo\n\t\tfor def\n\t\tdo\n\t\t\tif _requested "${def%%:*}"\n\t\t\tthen\n\t\t\t\tdescr="${${def#*:}%%:*}" \n\t\t\t\taction="${def#*:*:}" \n\t\t\t\t_description "${def%%:*}" expl "$descr"\n\t\t\t\tif [[ "$action" = \\ # ]]\n\t\t\t\tthen\n\t\t\t\t\tmesgs=("$mesgs[@]" "${def%%:*}:$descr") \n\t\t\t\telif [[ "$action" = \\(\\(*\\)\\) ]]\n\t\t\t\tthen\n\t\t\t\t\teval ws\\=\\( "${action[3,-3]}" \\)\n\t\t\t\t\t_describe -t "${def%%:*}" "$descr" ws -M \'r:|[_-]=* r:|=*\' "$subopts[@]"\n\t\t\t\telif [[ "$action" = \\(*\\) ]]\n\t\t\t\tthen\n\t\t\t\t\t_all_labels "${def%%:*}" expl "$descr" compadd "$subopts[@]" - ${=action[2,-2]}\n\t\t\t\telif [[ "$action" = \\{*\\} ]]\n\t\t\t\tthen\n\t\t\t\t\twhile _next_label "${def%%:*}" expl "$descr"\n\t\t\t\t\tdo\n\t\t\t\t\t\teval "$action[2,-2]"\n\t\t\t\t\tdone\n\t\t\t\telif [[ "$action" = \\ * ]]\n\t\t\t\tthen\n\t\t\t\t\teval "action=( $action )"\n\t\t\t\t\twhile _next_label "${def%%:*}" expl "$descr"\n\t\t\t\t\tdo\n\t\t\t\t\t\t"$action[@]"\n\t\t\t\t\tdone\n\t\t\t\telse\n\t\t\t\t\teval "action=( $action )"\n\t\t\t\t\twhile _next_label "${def%%:*}" expl "$descr"\n\t\t\t\t\tdo\n\t\t\t\t\t\t"$action[1]" "$subopts[@]" "$expl[@]" "${(@)action[2,-1]}"\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone\n\t\t[[ nm -ne compstate[nmatches] ]] && return 0\n\tdone\n\tfor descr in "$mesgs[@]"\n\tdo\n\t\t_message -e "${descr%%:*}" "${descr#*:}"\n\tdone\n\treturn 1' _slrn 'builtin autoload -XU' _omz::reload $'\tcommand rm -f $_comp_dumpfile $ZSH_COMPDUMP\n\tlocal zsh="${ZSH_ARGZERO:-${functrace[-1]%:*}}" \n\t[[ "$zsh" = -* || -o login ]] && exec -l "${zsh#-}" || exec "$zsh"' _debbugs_bugnumber 'builtin autoload -XU' _configure 'builtin autoload -XU' _email_addresses 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-fetch-history $'\t_zsh_highlight_call_widget .vi-fetch-history -- "$@"' _module 'builtin autoload -XU' _tiff 'builtin autoload -XU' _elfdump 'builtin autoload -XU' _id 'builtin autoload -XU' _okular 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_complete_debug $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_complete_debug -- "$@"' _dpkg-buildpackage 'builtin autoload -XU' _users 'builtin autoload -XU' _x_borderwidth 'builtin autoload -XU' _portsnap 'builtin autoload -XU' git_prompt_ahead $'\tif [[ -n "$(__git_prompt_git rev-list origin/$(git_current_branch)..HEAD 2> /dev/null)" ]]\n\tthen\n\t\techo "$ZSH_THEME_GIT_PROMPT_AHEAD"\n\tfi' _ip 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-incremental-pattern-search-backward $'\t_zsh_highlight_call_widget .history-incremental-pattern-search-backward -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-end-of-buffer-or-history $'\t_zsh_highlight_call_widget .end-of-buffer-or-history -- "$@"' _todo.sh 'builtin autoload -XU' _zsh_highlight_main__is_runnable $'\tif _zsh_highlight_main__type "$1"\n\tthen\n\t\t[[ $REPLY != none ]]\n\telse\n\t\treturn 2\n\tfi' _fstat 'builtin autoload -XU' _prompt 'builtin autoload -XU' _git 'builtin autoload -XU' _samba 'builtin autoload -XU' _services 'builtin autoload -XU' _twisted 'builtin autoload -XU' _cdrecord 'builtin autoload -XU' _alias 'builtin autoload -XU' _globquals 'builtin autoload -XU' _math 'builtin autoload -XU' _compress 'builtin autoload -XU' _nmap 'builtin autoload -XU' _unace 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-expand-history $'\t_zsh_highlight_call_widget .expand-history -- "$@"' _suffix_alias_files $'\tlocal expl pat\n\t(( ${#saliases} )) || return 1\n\tif (( ${#saliases} == 1 ))\n\tthen\n\t\tpat="*.${(kq)saliases}" \n\telse\n\t\tlocal -a tmpa\n\t\ttmpa=(${(kq)saliases}) \n\t\tpat="*.(${(kj.|.)tmpa})" \n\tfi\n\t_path_files "$@" -g $pat' _sep_parts 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-kill-word $'\t_zsh_highlight_call_widget .backward-kill-word -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-menu-select $'\t_zsh_highlight_call_widget .menu-select -- "$@"' _top 'builtin autoload -XU' _lha 'builtin autoload -XU' _builtin 'builtin autoload -XU' _chflags 'builtin autoload -XU' _bibtex 'builtin autoload -XU' _expand 'builtin autoload -XU' _cryptsetup 'builtin autoload -XU' _tpb 'builtin autoload -XU' _zsh_highlight_highlighter_pattern_predicate $'\t_zsh_highlight_buffer_modified' _sshfs 'builtin autoload -XU' _ignored $'\t[[ _matcher_num -gt 1 || $compstate[ignored] -eq 0 ]] && return 1\n\tlocal comp\n\tinteger ind\n\tif ! zstyle -a ":completion:${curcontext}:" completer comp\n\tthen\n\t\tcomp=("${(@)_completers[1,_completer_num-1]}") \n\t\tind=${comp[(I)_ignored(|:*)]} \n\t\t(( ind )) && comp=("${(@)comp[ind,-1]}") \n\tfi\n\tlocal _comp_no_ignore=yes tmp expl _completer _completer_num _matcher _c_matcher _matchers _matcher_num \n\t_completer_num=1 \n\tfor tmp in "$comp[@]"\n\tdo\n\t\tif [[ "$tmp" = *:-* ]]\n\t\tthen\n\t\t\t_completer="${${tmp%:*}[2,-1]//_/-}${tmp#*:}" \n\t\t\ttmp="${tmp%:*}" \n\t\telif [[ $tmp = *:* ]]\n\t\tthen\n\t\t\t_completer="${tmp#*:}" \n\t\t\ttmp="${tmp%:*}" \n\t\telse\n\t\t\t_completer="${tmp[2,-1]//_/-}" \n\t\tfi\n\t\tcurcontext="${curcontext/:[^:]#:/:${_completer}:}" \n\t\tzstyle -a ":completion:${curcontext}:" matcher-list _matchers || _matchers=(\'\') \n\t\t_matcher_num=1 \n\t\t_matcher=\'\' \n\t\tfor _c_matcher in "$_matchers[@]"\n\t\tdo\n\t\t\tif [[ "$_c_matcher" == +* ]]\n\t\t\tthen\n\t\t\t\t_matcher="$_matcher $_c_matcher[2,-1]" \n\t\t\telse\n\t\t\t\t_matcher="$_c_matcher" \n\t\t\tfi\n\t\t\tif [[ "$tmp" != _ignored ]] && "$tmp"\n\t\t\tthen\n\t\t\t\tif zstyle -s ":completion:${curcontext}:" single-ignored tmp && [[ $compstate[old_list] != shown && $compstate[nmatches] -eq 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tcase "$tmp" in\n\t\t\t\t\t\t(show) compstate[insert]=\'\' compstate[list]=\'list force\' tmp=\'\'  ;;\n\t\t\t\t\t\t(menu) compstate[insert]=menu \n\t\t\t\t\t\t\t_description original expl original\n\t\t\t\t\t\t\tcompadd "$expl[@]" -S \'\' - "$PREFIX$SUFFIX" ;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\t\treturn 0\n\t\t\tfi\n\t\t\t(( _matcher_num++ ))\n\t\tdone\n\t\t(( _completer_num++ ))\n\tdone\n\treturn 1' _vorbiscomment 'builtin autoload -XU' _retrieve_mac_apps 'builtin autoload -XU' _omz::plugin::list $'\tlocal -a custom_plugins builtin_plugins\n\tcustom_plugins=("$ZSH_CUSTOM"/plugins/*(-/N:t)) \n\tbuiltin_plugins=("$ZSH"/plugins/*(-/N:t)) \n\tif [[ ! -t 1 ]]\n\tthen\n\t\tprint -l ${(q-)custom_plugins} ${(q-)builtin_plugins}\n\t\treturn\n\tfi\n\tif (( ${#custom_plugins} ))\n\tthen\n\t\tprint -P "%U%BCustom plugins%b%u:"\n\t\tprint -l ${(q-)custom_plugins} | column -x\n\tfi\n\tif (( ${#builtin_plugins} ))\n\tthen\n\t\t(( ${#custom_plugins} )) && echo\n\t\tprint -P "%U%BBuilt-in plugins%b%u:"\n\t\tprint -l ${(q-)builtin_plugins} | column -x\n\tfi' rbenv_prompt_info $'\treturn 1' _flowadm 'builtin autoload -XU' _irssi 'builtin autoload -XU' _net_interfaces 'builtin autoload -XU' _auto-apt 'builtin autoload -XU' _sockstat 'builtin autoload -XU' _zsh_highlight_highlighter_root_predicate $'\t_zsh_highlight_buffer_modified' _jobs $'\tlocal expl disp jobs job jids pfx=\'%\' desc how expls sep \n\tif [[ "$1" = -t ]]\n\tthen\n\t\tzstyle -T ":completion:${curcontext}:jobs" prefix-needed && [[ "$PREFIX" != %* && compstate[nmatches] -ne 0 ]] && return 1\n\t\tshift\n\tfi\n\tzstyle -t ":completion:${curcontext}:jobs" prefix-hidden && pfx=\'\' \n\tzstyle -T ":completion:${curcontext}:jobs" verbose && desc=yes \n\tif [[ "$1" = -r ]]\n\tthen\n\t\tjids=("${(@k)jobstates[(R)running*]}") \n\t\tshift\n\t\texpls=\'running job\' \n\telif [[ "$1" = -s ]]\n\tthen\n\t\tjids=("${(@k)jobstates[(R)suspended*]}") \n\t\tshift\n\t\texpls=\'suspended job\' \n\telse\n\t\t[[ "$1" = - ]] && shift\n\t\tjids=("${(@k)jobtexts}") \n\t\texpls=job \n\tfi\n\tif [[ -n "$desc" ]]\n\tthen\n\t\tdisp=() \n\t\tzstyle -s ":completion:${curcontext}:jobs" list-separator sep || sep=-- \n\t\tfor job in "$jids[@]"\n\t\tdo\n\t\t\t[[ -n "$desc" ]] && disp=("$disp[@]" "${pfx}${(r:2:: :)job} $sep ${(r:COLUMNS-8:: :)jobtexts[$job]}") \n\t\tdone\n\tfi\n\tzstyle -s ":completion:${curcontext}:jobs" numbers how\n\tif [[ "$how" = (yes|true|on|1) ]]\n\tthen\n\t\tjobs=("$jids[@]") \n\telse\n\t\tlocal texts i text str tmp num max=0 \n\t\ttexts=("$jobtexts[@]") \n\t\tjobs=() \n\t\tfor i in "$jids[@]"\n\t\tdo\n\t\t\ttext="$jobtexts[$i]" \n\t\t\tstr="${text%% *}" \n\t\t\tif [[ "$text" = *\\ * ]]\n\t\t\tthen\n\t\t\t\ttext="${text#* }" \n\t\t\telse\n\t\t\t\ttext="" \n\t\t\tfi\n\t\t\ttmp=("${(@M)texts:#${str}*}") \n\t\t\tnum=1 \n\t\t\twhile [[ -n "$text" && $#tmp -ge 2 ]]\n\t\t\tdo\n\t\t\t\tstr="${str} ${text%% *}" \n\t\t\t\tif [[ "$text" = *\\ * ]]\n\t\t\t\tthen\n\t\t\t\t\ttext="${text#* }" \n\t\t\t\telse\n\t\t\t\t\ttext="" \n\t\t\t\tfi\n\t\t\t\ttmp=("${(@M)texts:#${str}*}") \n\t\t\t\t(( num++ ))\n\t\t\tdone\n\t\t\t[[ num -gt max ]] && max="$num" \n\t\t\tjobs=("$jobs[@]" "$str") \n\t\tdone\n\t\tif [[ "$how" = [0-9]## && max -gt how ]]\n\t\tthen\n\t\t\tjobs=("$jids[@]") \n\t\telse\n\t\t\t[[ -z "$pfx" && -n "$desc" ]] && disp=("${(@)disp#%}") \n\t\tfi\n\tfi\n\tif [[ -n "$desc" ]]\n\tthen\n\t\t_wanted jobs expl "$expls" compadd "$@" -ld disp - "%$^jobs[@]"\n\telse\n\t\t_wanted jobs expl "$expls" compadd "$@" - "%$^jobs[@]"\n\tfi' _dak 'builtin autoload -XU' _apt-file 'builtin autoload -XU' _cygrunsrv 'builtin autoload -XU' _django 'builtin autoload -XU' _ttys 'builtin autoload -XU' _zsh_highlight_widget_zle-isearch-update $'\t:\n\t_zsh_highlight' _jobs_bg 'builtin autoload -XU' _sub_commands 'builtin autoload -XU' _cscope 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-kill-line $'\t_zsh_highlight_call_widget .vi-kill-line -- "$@"' _sqsh 'builtin autoload -XU' _invoke-rc.d 'builtin autoload -XU' _strace 'builtin autoload -XU' _mailboxes 'builtin autoload -XU' _osc 'builtin autoload -XU' _rrdtool 'builtin autoload -XU' _zsh_highlight_main_highlighter_expand_path $'\t(( $# == 1 )) || print -r -- "zsh-syntax-highlighting: BUG: _zsh_highlight_main_highlighter_expand_path: called without argument" >&2\n\tsetopt localoptions nonomatch\n\tunset REPLY\n\t: ${REPLY:=${(Q)${~1}}}' _chmod 'builtin autoload -XU' _mkzsh 'builtin autoload -XU' _pkginfo 'builtin autoload -XU' _typeset 'builtin autoload -XU' _reprepro 'builtin autoload -XU' _flex 'builtin autoload -XU' _zsh_highlight_main__type $'\tinteger -r aliases_allowed=${2-1} \n\tinteger may_cache=1 \n\tif (( $+_zsh_highlight_main__command_type_cache ))\n\tthen\n\t\tREPLY=$_zsh_highlight_main__command_type_cache[(e)$1] \n\t\tif [[ -n "$REPLY" ]]\n\t\tthen\n\t\t\treturn\n\t\tfi\n\tfi\n\tif (( $#options_to_set ))\n\tthen\n\t\tsetopt localoptions $options_to_set\n\tfi\n\tunset REPLY\n\tif zmodload -e zsh/parameter\n\tthen\n\t\tif (( $+aliases[(e)$1] ))\n\t\tthen\n\t\t\tmay_cache=0 \n\t\tfi\n\t\tif (( ${+galiases[(e)$1]} )) && (( aliases_allowed ))\n\t\tthen\n\t\t\tREPLY=\'global alias\' \n\t\telif (( $+aliases[(e)$1] )) && (( aliases_allowed ))\n\t\tthen\n\t\t\tREPLY=alias \n\t\telif [[ $1 == *.* && -n ${1%.*} ]] && (( $+saliases[(e)${1##*.}] ))\n\t\tthen\n\t\t\tREPLY=\'suffix alias\' \n\t\telif (( $reswords[(Ie)$1] ))\n\t\tthen\n\t\t\tREPLY=reserved \n\t\telif (( $+functions[(e)$1] ))\n\t\tthen\n\t\t\tREPLY=function \n\t\telif (( $+builtins[(e)$1] ))\n\t\tthen\n\t\t\tREPLY=builtin \n\t\telif (( $+commands[(e)$1] ))\n\t\tthen\n\t\t\tREPLY=command \n\t\telif {\n\t\t\t\t[[ $1 != */* ]] || is-at-least 5.3\n\t\t\t} && ! (\n\t\t\t\tbuiltin type -w -- "$1"\n\t\t\t) > /dev/null 2>&1\n\t\tthen\n\t\t\tREPLY=none \n\t\tfi\n\tfi\n\tif ! (( $+REPLY ))\n\tthen\n\t\tREPLY="${$(:; (( aliases_allowed )) || unalias -- "$1" 2>/dev/null; LC_ALL=C builtin type -w -- "$1" 2>/dev/null)##*: }" \n\t\tif [[ $REPLY == \'alias\' ]]\n\t\tthen\n\t\t\tmay_cache=0 \n\t\tfi\n\tfi\n\tif (( may_cache )) && (( $+_zsh_highlight_main__command_type_cache ))\n\tthen\n\t\t_zsh_highlight_main__command_type_cache[(e)$1]=$REPLY \n\tfi\n\t[[ -n $REPLY ]]\n\treturn $?' _runit 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-replace-chars $'\t_zsh_highlight_call_widget .vi-replace-chars -- "$@"' _mozilla 'builtin autoload -XU' takeurl $'\tlocal data thedir\n\tdata="$(mktemp)" \n\tcurl -L "$1" > "$data"\n\ttar xf "$data"\n\tthedir="$(tar tf "$data" | head -n 1)" \n\trm "$data"\n\tcd "$thedir"' _kpartx 'builtin autoload -XU' _ln 'builtin autoload -XU' _fakeroot 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-auto-suffix-retain $'\t_zsh_highlight_call_widget .auto-suffix-retain -- "$@"' _lp 'builtin autoload -XU' _mime_types 'builtin autoload -XU' _all_matches 'builtin autoload -XU' backward-extend-paste $'\temulate -L zsh\n\tinteger bep_mark=$MARK bep_region=$REGION_ACTIVE \n\tif (( REGION_ACTIVE && MARK < CURSOR ))\n\tthen\n\t\tzle .exchange-point-and-mark\n\tfi\n\tif (( CURSOR ))\n\tthen\n\t\tlocal -a bep_words=(${(z)LBUFFER}) \n\t\tif [[ -n $bep_words[-1] && $LBUFFER = *$bep_words[-1] ]]\n\t\tthen\n\t\t\tPASTED=$bep_words[-1]$PASTED \n\t\t\tLBUFFER=${LBUFFER%${bep_words[-1]}} \n\t\tfi\n\tfi\n\tif (( MARK > bep_mark ))\n\tthen\n\t\tzle .exchange-point-and-mark\n\tfi\n\tREGION_ACTIVE=$bep_region ' _ls 'builtin autoload -XU' _lzop 'builtin autoload -XU' _elinks 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-end-of-history $'\t_zsh_highlight_call_widget .end-of-history -- "$@"' add-zsh-hook $'\temulate -L zsh\n\tlocal -a hooktypes\n\thooktypes=(chpwd precmd preexec periodic zshaddhistory zshexit zsh_directory_name) \n\tlocal usage="Usage: add-zsh-hook hook function\\nValid hooks are:\\n  $hooktypes" \n\tlocal opt\n\tlocal -a autoopts\n\tinteger del list help\n\twhile getopts "dDhLUzk" opt\n\tdo\n\t\tcase $opt in\n\t\t\t(d) del=1  ;;\n\t\t\t(D) del=2  ;;\n\t\t\t(h) help=1  ;;\n\t\t\t(L) list=1  ;;\n\t\t\t([Uzk]) autoopts+=(-$opt)  ;;\n\t\t\t(*) return 1 ;;\n\t\tesac\n\tdone\n\tshift $(( OPTIND - 1 ))\n\tif (( list ))\n\tthen\n\t\ttypeset -mp "(${1:-${(@j:|:)hooktypes}})_functions"\n\t\treturn $?\n\telif (( help || $# != 2 || ${hooktypes[(I)$1]} == 0 ))\n\tthen\n\t\tprint -u$(( 2 - help )) $usage\n\t\treturn $(( 1 - help ))\n\tfi\n\tlocal hook="${1}_functions" \n\tlocal fn="$2" \n\tif (( del ))\n\tthen\n\t\tif (( ${(P)+hook} ))\n\t\tthen\n\t\t\tif (( del == 2 ))\n\t\t\tthen\n\t\t\t\tset -A $hook ${(P)hook:#${~fn}}\n\t\t\telse\n\t\t\t\tset -A $hook ${(P)hook:#$fn}\n\t\t\tfi\n\t\t\tif (( ! ${(P)#hook} ))\n\t\t\tthen\n\t\t\t\tunset $hook\n\t\t\tfi\n\t\tfi\n\telse\n\t\tif (( ${(P)+hook} ))\n\t\tthen\n\t\t\tif (( ${${(P)hook}[(I)$fn]} == 0 ))\n\t\t\tthen\n\t\t\t\ttypeset -ga $hook\n\t\t\t\tset -A $hook ${(P)hook} $fn\n\t\t\tfi\n\t\telse\n\t\t\ttypeset -ga $hook\n\t\t\tset -A $hook $fn\n\t\tfi\n\t\tautoload $autoopts -- $fn\n\tfi' _postfix 'builtin autoload -XU' zle-line-finish $'\techoti rmkx' _dispatch $'\tlocal comp pat val name i ret=1 _compskip="$_compskip" \n\tlocal curcontext="$curcontext" service str noskip \n\tlocal -a match mbegin mend\n\tif [[ "$1" = -s ]]\n\tthen\n\t\tnoskip=yes \n\t\tshift\n\tfi\n\t[[ -z "$noskip" ]] && _compskip= \n\tcurcontext="${curcontext%:*:*}:${1}:" \n\tshift\n\tif [[ "$_compskip" != (all|*patterns*) ]]\n\tthen\n\t\tfor str in "$@"\n\t\tdo\n\t\t\t[[ -n "$str" ]] || continue\n\t\t\tservice="${_services[$str]:-$str}" \n\t\t\tfor i in "${(@)_patcomps[(K)$str]}"\n\t\t\tdo\n\t\t\t\tif [[ $i = (#b)"="([^=]#)"="(*) ]]\n\t\t\t\tthen\n\t\t\t\t\tservice=$match[1] \n\t\t\t\t\ti=$match[2] \n\t\t\t\tfi\n\t\t\t\teval "$i" && ret=0 \n\t\t\t\tif [[ "$_compskip" = *patterns* ]]\n\t\t\t\tthen\n\t\t\t\t\tbreak\n\t\t\t\telif [[ "$_compskip" = all ]]\n\t\t\t\tthen\n\t\t\t\t\t_compskip=\'\' \n\t\t\t\t\treturn ret\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\tfi\n\tret=1 \n\tfor str in "$@"\n\tdo\n\t\t[[ -n "$str" ]] || continue\n\t\tstr=${(Q)str} \n\t\tname="$str" \n\t\tcomp="${_comps[$str]}" \n\t\tservice="${_services[$str]:-$str}" \n\t\t[[ -z "$comp" ]] || break\n\tdone\n\tif [[ -n "$comp" && "$name" != "${argv[-1]}" ]]\n\tthen\n\t\t_compskip=patterns \n\t\teval "$comp" && ret=0 \n\t\t[[ "$_compskip" = (all|*patterns*) ]] && return ret\n\tfi\n\tif [[ "$_compskip" != (all|*patterns*) ]]\n\tthen\n\t\tfor str\n\t\tdo\n\t\t\t[[ -n "$str" ]] || continue\n\t\t\tservice="${_services[$str]:-$str}" \n\t\t\tfor i in "${(@)_postpatcomps[(K)$str]}"\n\t\t\tdo\n\t\t\t\t_compskip=default \n\t\t\t\teval "$i" && ret=0 \n\t\t\t\tif [[ "$_compskip" = *patterns* ]]\n\t\t\t\tthen\n\t\t\t\t\tbreak\n\t\t\t\telif [[ "$_compskip" = all ]]\n\t\t\t\tthen\n\t\t\t\t\t_compskip=\'\' \n\t\t\t\t\treturn ret\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\tfi\n\t[[ "$name" = "${argv[-1]}" && -n "$comp" && "$_compskip" != (all|*default*) ]] && service="${_services[$name]:-$name}"  && eval "$comp" && ret=0 \n\t_compskip=\'\' \n\treturn ret' _zsh_highlight_widget_orig-s0.0000050000-r18109-_complete_help $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_complete_help -- "$@"' _portmaster 'builtin autoload -XU' _file_descriptors 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-forward-blank-word-end $'\t_zsh_highlight_call_widget .vi-forward-blank-word-end -- "$@"' _mh 'builtin autoload -XU' _arguments $'\tlocal long cmd="$words[1]" descr odescr mesg subopts opt opt2 usecc autod \n\tlocal oldcontext="$curcontext" hasopts rawret optarg singopt alwopt \n\tlocal setnormarg start rest\n\tlocal -a match mbegin mend\n\tsubopts=() \n\tsingopt=() \n\twhile [[ "$1" = -([AMO]*|[CRSWnsw]) ]]\n\tdo\n\t\tcase "$1" in\n\t\t\t(-C) usecc=yes \n\t\t\t\tshift ;;\n\t\t\t(-O) subopts=("${(@P)2}") \n\t\t\t\tshift 2 ;;\n\t\t\t(-O*) subopts=("${(@P)${1[3,-1]}}") \n\t\t\t\tshift ;;\n\t\t\t(-R) rawret=yes \n\t\t\t\tshift ;;\n\t\t\t(-n) setnormarg=yes \n\t\t\t\tNORMARG=-1 \n\t\t\t\tshift ;;\n\t\t\t(-w) optarg=yes \n\t\t\t\tshift ;;\n\t\t\t(-W) alwopt=arg \n\t\t\t\tshift ;;\n\t\t\t(-[Ss]) singopt+=($1) \n\t\t\t\tshift ;;\n\t\t\t(-[AM]) singopt+=($1 $2) \n\t\t\t\tshift 2 ;;\n\t\t\t(-[AM]*) singopt+=($1) \n\t\t\t\tshift ;;\n\t\tesac\n\tdone\n\t[[ $1 = \':\' ]] && shift\n\tsingopt+=(\':\') \n\t[[ "$PREFIX" = [-+] ]] && alwopt=arg \n\tlong=$argv[(I)--] \n\tif (( long ))\n\tthen\n\t\tlocal name tmp tmpargv\n\t\ttmpargv=("${(@)argv[1,long-1]}") \n\t\tname=${~words[1]}  2> /dev/null\n\t\t[[ "$name" = [^/]*/* ]] && name="$PWD/$name" \n\t\tname="_args_cache_${name}" \n\t\tname="${name//[^a-zA-Z0-9_]/_}" \n\t\tif (( ! ${(P)+name} ))\n\t\tthen\n\t\t\tlocal iopts sopts pattern tmpo dir cur cache\n\t\t\ttypeset -Ua lopts\n\t\t\tcache=() \n\t\t\tset -- "${(@)argv[long+1,-1]}"\n\t\t\tiopts=() \n\t\t\tsopts=() \n\t\t\twhile [[ "$1" = -[is]* ]]\n\t\t\tdo\n\t\t\t\tif [[ "$1" = -??* ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp="${1[3,-1]}" \n\t\t\t\t\tcur=1 \n\t\t\t\telse\n\t\t\t\t\ttmp="$2" \n\t\t\t\t\tcur=2 \n\t\t\t\tfi\n\t\t\t\tif [[ "$tmp[1]" = \'(\' ]]\n\t\t\t\tthen\n\t\t\t\t\ttmp=(${=tmp[2,-2]}) \n\t\t\t\telse\n\t\t\t\t\ttmp=("${(@P)tmp}") \n\t\t\t\tfi\n\t\t\t\tif [[ "$1" = -i* ]]\n\t\t\t\tthen\n\t\t\t\t\tiopts+=("$tmp[@]") \n\t\t\t\telse\n\t\t\t\t\tsopts+=("$tmp[@]") \n\t\t\t\tfi\n\t\t\t\tshift cur\n\t\t\tdone\n\t\t\ttmp=() \n\t\t\t_call_program options ${~words[1]} --help 2>&1 | while IFS= read -r opt\n\t\t\tdo\n\t\t\t\tif (( ${#tmp} ))\n\t\t\t\tthen\n\t\t\t\t\tif [[ $opt = [[:space:]][[:space:]][[:space:]]*[[:alpha:]]* ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\topt=${opt##[[:space:]]##} \n\t\t\t\t\t\tlopts+=("${^tmp[@]}":${${${opt//:/-}//\\[/(}//\\]/)}) \n\t\t\t\t\t\ttmp=() \n\t\t\t\t\t\tcontinue\n\t\t\t\t\telse\n\t\t\t\t\t\tlopts+=("${^tmp[@]}":) \n\t\t\t\t\t\ttmp=() \n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\twhile [[ $opt = [,[:space:]]#(#b)(-[^,[:space:]]#)(*) ]]\n\t\t\t\tdo\n\t\t\t\t\tstart=${match[1]} \n\t\t\t\t\trest=${match[2]} \n\t\t\t\t\tif [[ -z ${tmp[(r)${start%%[^a-zA-Z0-9_-]#}]} ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tif [[ $start = (#b)(*)\\[(*)\\](*) ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\ttmp+=("${match[1]}${match[2]}${match[3]}" "${match[1]}${match[3]}") \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttmp+=($start) \n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\topt=$rest \n\t\t\t\tdone\n\t\t\t\topt=${opt## [^[:space:]]##  } \n\t\t\t\topt=${opt##[[:space:]]##} \n\t\t\t\tif [[ -n $opt ]]\n\t\t\t\tthen\n\t\t\t\t\tlopts+=("${^tmp[@]}":${${${opt//:/-}//\\[/(}//\\]/)}) \n\t\t\t\t\ttmp=() \n\t\t\t\tfi\n\t\t\tdone\n\t\t\tif (( ${#tmp} ))\n\t\t\tthen\n\t\t\t\tlopts+=("${^tmp[@]}":) \n\t\t\tfi\n\t\t\ttmp=() \n\t\t\tfor opt in "${(@)${(@)lopts:#--}%%[\\[:=]*}"\n\t\t\tdo\n\t\t\t\tlet "$tmpargv[(I)(|\\([^\\)]#\\))(|\\*)${opt}(|[-+]|=(|-))(|\\[*\\])(|:*)]" || tmp+=("$lopts[(r)$opt(|[\\[:=]*)]") \n\t\t\tdone\n\t\t\tlopts=("$tmp[@]") \n\t\t\twhile (( $#iopts ))\n\t\t\tdo\n\t\t\t\tlopts=(${lopts:#$~iopts[1](|[\\[:=]*)}) \n\t\t\t\tshift iopts\n\t\t\tdone\n\t\t\twhile (( $#sopts ))\n\t\t\tdo\n\t\t\t\tlopts+=(${lopts/$~sopts[1]/$sopts[2]}) \n\t\t\t\tshift 2 sopts\n\t\t\tdone\n\t\t\targv+=(\'*=FILE*:file:_files\' \'*=(DIR|PATH)*:directory:_files -/\' \'*=*:=: \' \'*: :  \') \n\t\t\twhile (( $# ))\n\t\t\tdo\n\t\t\t\tpattern="${${${(M)1#*[^\\\\]:}[1,-2]}//\\\\\\\\:/:}" \n\t\t\t\tdescr="${1#${pattern}}" \n\t\t\t\tif [[ "$pattern" = *\\(-\\) ]]\n\t\t\t\tthen\n\t\t\t\t\tpattern="$pattern[1,-4]" \n\t\t\t\t\tdir=- \n\t\t\t\telse\n\t\t\t\t\tdir= \n\t\t\t\tfi\n\t\t\t\tshift\n\t\t\t\ttmp=("${(@M)lopts:##$~pattern:*}") \n\t\t\t\tlopts=("${(@)lopts:##$~pattern:*}") \n\t\t\t\t(( $#tmp )) || continue\n\t\t\t\topt=\'\' \n\t\t\t\ttmp=("${(@)tmp%:}") \n\t\t\t\ttmpo=("${(@M)tmp:#[^:]##\\[\\=*}") \n\t\t\t\tif (( $#tmpo ))\n\t\t\t\tthen\n\t\t\t\t\ttmp=("${(@)tmp:#[^:]##\\[\\=*}") \n\t\t\t\t\tfor opt in "$tmpo[@]"\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [[ $opt = (#b)(*):([^:]#) ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\topt=$match[1] \n\t\t\t\t\t\t\todescr="[${match[2]}]" \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\todescr= \n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [[ $opt = (#b)(*)\\[\\=* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\topt2=${${match[1]}//[^a-zA-Z0-9_-]}=-${dir}${odescr} \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\topt2=${${opt}//[^a-zA-Z0-9_-]}=${dir}${odescr} \n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [[ "$descr" = :\\=* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tcache+=("${opt2}::${(L)${opt%\\]}#*\\=}: ") \n\t\t\t\t\t\telif [[ "$descr" = ::* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tcache+=("${opt2}${descr}") \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcache+=("${opt2}:${descr}") \n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\ttmpo=("${(@M)tmp:#[^:]##\\=*}") \n\t\t\t\tif (( $#tmpo ))\n\t\t\t\tthen\n\t\t\t\t\ttmp=("${(@)tmp:#[^:]##\\=*}") \n\t\t\t\t\tfor opt in "$tmpo[@]"\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [[ $opt = (#b)(*):([^:]#) ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\topt=$match[1] \n\t\t\t\t\t\t\todescr="[${match[2]}]" \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\todescr= \n\t\t\t\t\t\tfi\n\t\t\t\t\t\topt2="${${opt%%\\=*}//[^a-zA-Z0-9_-]}=${dir}${odescr}" \n\t\t\t\t\t\tif [[ "$descr" = :\\=* ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tcache+=("${opt2}:${(L)${opt%\\]}#*\\=}: ") \n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcache+=("${opt2}${descr}") \n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tif (( $#tmp ))\n\t\t\t\tthen\n\t\t\t\t\ttmp=("${(@)^${(@)tmp:#^*:*}//:/[}]" "${(@)${(@)tmp:#*:*}//[^a-zA-Z0-9_-]}") \n\t\t\t\t\tif [[ -n "$descr" && "$descr" != \': :  \' ]]\n\t\t\t\t\tthen\n\t\t\t\t\t\tcache+=("${(@)^tmp}${descr}") \n\t\t\t\t\telse\n\t\t\t\t\t\tcache+=("$tmp[@]") \n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tset -A "$name" "${(@)cache:# #}"\n\t\tfi\n\t\tset -- "$tmpargv[@]" "${(@P)name}"\n\tfi\n\tzstyle -s ":completion:${curcontext}:options" auto-description autod\n\tif (( $# )) && comparguments -i "$autod" "$singopt[@]" "$@"\n\tthen\n\t\tlocal action noargs aret expl local tried ret=1 \n\t\tlocal next direct odirect equal single matcher matched ws tmp1 tmp2 tmp3\n\t\tlocal opts subc tc prefix suffix descrs actions subcs anum\n\t\tlocal origpre="$PREFIX" origipre="$IPREFIX" nm="$compstate[nmatches]" \n\t\tif comparguments -D descrs actions subcs\n\t\tthen\n\t\t\tif comparguments -O next direct odirect equal\n\t\t\tthen\n\t\t\t\topts=yes \n\t\t\t\t_tags "$subcs[@]" options\n\t\t\telse\n\t\t\t\t_tags "$subcs[@]"\n\t\t\tfi\n\t\telse\n\t\t\tif comparguments -a\n\t\t\tthen\n\t\t\t\tnoargs=\'no more arguments\' \n\t\t\telse\n\t\t\t\tnoargs=\'no arguments\' \n\t\t\tfi\n\t\t\tif comparguments -O next direct odirect equal\n\t\t\tthen\n\t\t\t\topts=yes \n\t\t\t\t_tags options\n\t\t\telif [[ $? -eq 2 ]]\n\t\t\tthen\n\t\t\t\tcompadd -Q - "${PREFIX}${SUFFIX}"\n\t\t\t\treturn 0\n\t\t\telse\n\t\t\t\t_message "$noargs"\n\t\t\t\treturn 1\n\t\t\tfi\n\t\tfi\n\t\tcomparguments -M matcher\n\t\tcontext=() \n\t\tstate=() \n\t\tstate_descr=() \n\t\twhile true\n\t\tdo\n\t\t\twhile _tags\n\t\t\tdo\n\t\t\t\tanum=1 \n\t\t\t\tif [[ -z "$tried" ]]\n\t\t\t\tthen\n\t\t\t\t\twhile [[ anum -le $#descrs ]]\n\t\t\t\t\tdo\n\t\t\t\t\t\taction="$actions[anum]" \n\t\t\t\t\t\tdescr="$descrs[anum]" \n\t\t\t\t\t\tsubc="$subcs[anum++]" \n\t\t\t\t\t\tif [[ $subc = argument* && -n $setnormarg ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tcomparguments -n NORMARG\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [[ -n "$matched" ]] || _requested "$subc"\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tcurcontext="${oldcontext%:*}:$subc" \n\t\t\t\t\t\t\t_description "$subc" expl "$descr"\n\t\t\t\t\t\t\tif [[ "$action" = \\=\\ * ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\taction="$action[3,-1]" \n\t\t\t\t\t\t\t\twords=("$subc" "$words[@]") \n\t\t\t\t\t\t\t\t(( CURRENT++ ))\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tif [[ "$action" = -\\>* ]]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\taction="${${action[3,-1]##[ \t]#}%%[ \t]#}" \n\t\t\t\t\t\t\t\tif (( ! $state[(I)$action] ))\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tcomparguments -W line opt_args\n\t\t\t\t\t\t\t\t\tstate+=("$action") \n\t\t\t\t\t\t\t\t\tstate_descr+=("$descr") \n\t\t\t\t\t\t\t\t\tif [[ -n "$usecc" ]]\n\t\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t\tcurcontext="${oldcontext%:*}:$subc" \n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tcontext+=("$subc") \n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tcompstate[restore]=\'\' \n\t\t\t\t\t\t\t\t\taret=yes \n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif [[ -z "$local" ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tlocal line\n\t\t\t\t\t\t\t\t\ttypeset -A opt_args\n\t\t\t\t\t\t\t\t\tlocal=yes \n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\tcomparguments -W line opt_args\n\t\t\t\t\t\t\t\tif [[ "$action" = \\ # ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\t_message -e "$subc" "$descr"\n\t\t\t\t\t\t\t\t\tmesg=yes \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\t\talwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\telif [[ "$action" = \\(\\(*\\)\\) ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\teval ws\\=\\( "${action[3,-3]}" \\)\n\t\t\t\t\t\t\t\t\t_describe -t "$subc" "$descr" ws -M "$matcher" "$subopts[@]" || alwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\telif [[ "$action" = \\(*\\) ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\teval ws\\=\\( "${action[2,-2]}" \\)\n\t\t\t\t\t\t\t\t\t_all_labels "$subc" expl "$descr" compadd "$subopts[@]" -a - ws || alwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\telif [[ "$action" = \\{*\\} ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\twhile _next_label "$subc" expl "$descr"\n\t\t\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t\t\teval "$action[2,-2]" && ret=0 \n\t\t\t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\t\t\t(( ret )) && alwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\telif [[ "$action" = \\ * ]]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\teval "action=( $action )"\n\t\t\t\t\t\t\t\t\twhile _next_label "$subc" expl "$descr"\n\t\t\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t\t\t"$action[@]" && ret=0 \n\t\t\t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\t\t\t(( ret )) && alwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\teval "action=( $action )"\n\t\t\t\t\t\t\t\t\twhile _next_label "$subc" expl "$descr"\n\t\t\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\t\t\t"$action[1]" "$subopts[@]" "$expl[@]" "${(@)action[2,-1]}" && ret=0 \n\t\t\t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\t\t\t(( ret )) && alwopt=${alwopt:-yes} \n\t\t\t\t\t\t\t\t\ttried=yes \n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tif _requested options && [[ -z "$hasopts" && -z "$matched" && ( -z "$aret" || "$PREFIX" = "$origpre" ) ]] && {\n\t\t\t\t\t\t! zstyle -T ":completion:${oldcontext%:*}:options" prefix-needed || [[ "$origpre" = [-+]* || -z "$aret$mesg$tried" ]]\n\t\t\t\t\t}\n\t\t\t\tthen\n\t\t\t\t\tlocal prevpre="$PREFIX" previpre="$IPREFIX" prevcontext="$curcontext" \n\t\t\t\t\tcurcontext="${oldcontext%:*}:options" \n\t\t\t\t\thasopts=yes \n\t\t\t\t\tPREFIX="$origpre" \n\t\t\t\t\tIPREFIX="$origipre" \n\t\t\t\t\tif [[ -z "$alwopt" || -z "$tried" || "$alwopt" = arg ]] && comparguments -s single\n\t\t\t\t\tthen\n\t\t\t\t\t\tif [[ "$single" = direct ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t_all_labels options expl option compadd -QS \'\' - "${PREFIX}${SUFFIX}"\n\t\t\t\t\t\telif [[ -z "$optarg" && "$single" = next ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t_all_labels options expl option compadd -Q - "${PREFIX}${SUFFIX}"\n\t\t\t\t\t\telif [[ "$single" = equal ]]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t_all_labels options expl option compadd -QqS= - "${PREFIX}${SUFFIX}"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttmp1=("$next[@]" "$direct[@]" "$odirect[@]" "$equal[@]") \n\t\t\t\t\t\t\t[[ "$PREFIX" = [-+]* ]] && tmp1=("${(@M)tmp1:#${PREFIX[1]}*}") \n\t\t\t\t\t\t\t[[ "$single" = next ]] && tmp1=("${(@)tmp1:#[-+]${PREFIX[-1]}((#e)|:*)}") \n\t\t\t\t\t\t\t[[ "$PREFIX" != --* ]] && tmp1=("${(@)tmp1:#--*}") \n\t\t\t\t\t\t\ttmp3=("${(M@)tmp1:#[-+]?[^:]*}") \n\t\t\t\t\t\t\ttmp1=("${(M@)tmp1:#[-+]?(|:*)}") \n\t\t\t\t\t\t\ttmp2=("${PREFIX}${(@M)^${(@)${(@)tmp1%%:*}#[-+]}:#?}") \n\t\t\t\t\t\t\t_describe -O option tmp1 tmp2 -Q -S \'\' -- tmp3 -Q\n\t\t\t\t\t\t\t[[ -n "$optarg" && "$single" = next && nm -eq $compstate[nmatches] ]] && _all_labels options expl option compadd -Q - "${PREFIX}${SUFFIX}"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tsingle=yes \n\t\t\t\t\telse\n\t\t\t\t\t\tnext+=("$odirect[@]") \n\t\t\t\t\t\t_describe -O option next -Q -M "$matcher" -- direct -QS \'\' -M "$matcher" -- equal -QqS= -M "$matcher"\n\t\t\t\t\tfi\n\t\t\t\t\tPREFIX="$prevpre" \n\t\t\t\t\tIPREFIX="$previpre" \n\t\t\t\t\tcurcontext="$prevcontext" \n\t\t\t\tfi\n\t\t\t\t[[ -n "$tried" && "${${alwopt:+$origpre}:-$PREFIX}" != [-+]* ]] && break\n\t\t\tdone\n\t\t\tif [[ -n "$opts" && -z "$aret" && -z "$matched" && ( -z "$tried" || -n "$alwopt" ) && nm -eq compstate[nmatches] ]]\n\t\t\tthen\n\t\t\t\tPREFIX="$origpre" \n\t\t\t\tIPREFIX="$origipre" \n\t\t\t\tprefix="${PREFIX#*\\=}" \n\t\t\t\tsuffix="$SUFFIX" \n\t\t\t\tPREFIX="${PREFIX%%\\=*}" \n\t\t\t\tSUFFIX=\'\' \n\t\t\t\tcompadd -M "$matcher" -D equal - "${(@)equal%%:*}"\n\t\t\t\tif [[ $#equal -eq 1 ]]\n\t\t\t\tthen\n\t\t\t\t\tPREFIX="$prefix" \n\t\t\t\t\tSUFFIX="$suffix" \n\t\t\t\t\tIPREFIX="${IPREFIX}${equal[1]%%:*}=" \n\t\t\t\t\tmatched=yes \n\t\t\t\t\tcomparguments -L "${equal[1]%%:*}" descrs actions subcs\n\t\t\t\t\t_tags "$subcs[@]"\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tbreak\n\t\tdone\n\t\t[[ -z "$aret" || -z "$usecc" ]] && curcontext="$oldcontext" \n\t\tif [[ -n "$aret" ]]\n\t\tthen\n\t\t\t[[ -n $rawret ]] && return 300\n\t\telse\n\t\t\t[[ -n "$noargs" && nm -eq "$compstate[nmatches]" ]] && _message "$noargs"\n\t\tfi\n\t\t[[ nm -ne "$compstate[nmatches]" ]]\n\telse\n\t\treturn 1\n\tfi' _svccfg 'builtin autoload -XU' _lsdev 'builtin autoload -XU' _pgrep 'builtin autoload -XU' _limit 'builtin autoload -XU' mkcd $'\tmkdir -p $@ && cd ${@:$#}' _mt 'builtin autoload -XU' _setfacl 'builtin autoload -XU' _dict 'builtin autoload -XU' _diff_options 'builtin autoload -XU' zsh_stats $'\tfc -l 1 | awk \'{ CMD[$2]++; count++; } END { for (a in CMD) print CMD[a] " " CMD[a]*100/count "% " a }\' | grep -v "./" | sort -nr | head -n 20 | column -c3 -s " " -t | nl' _flasher 'builtin autoload -XU' _xargs 'builtin autoload -XU' _default $'\tlocal ctl\n\tif {\n\t\t\tzstyle -s ":completion:${curcontext}:" use-compctl ctl || zmodload -e zsh/compctl\n\t\t} && [[ "$ctl" != (no|false|0|off) ]]\n\tthen\n\t\tlocal opt\n\t\topt=() \n\t\t[[ "$ctl" = *first* ]] && opt=(-T) \n\t\t[[ "$ctl" = *default* ]] && opt=("$opt[@]" -D) \n\t\tcompcall "$opt[@]" || return 0\n\tfi\n\t_files "$@" && return 0\n\tif [[ -o magicequalsubst && "$PREFIX" = *\\=* ]]\n\tthen\n\t\tcompstate[parameter]="${PREFIX%%\\=*}" \n\t\tcompset -P 1 \'*=\'\n\t\t_value "$@"\n\telse\n\t\treturn 1\n\tfi' clippaste $'\t_retry_clipboard_detection_or_fail clippaste "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-char $'\t_zsh_highlight_call_widget .vi-backward-char -- "$@"' _x_utils 'builtin autoload -XU' _expand_alias 'builtin autoload -XU' _swaks 'builtin autoload -XU' run-help 'builtin autoload -XU' _networkctl 'builtin autoload -XU' _prefix 'builtin autoload -XU' _qiv 'builtin autoload -XU' _dchroot 'builtin autoload -XU' _globqual_delims 'builtin autoload -XU' _w 'builtin autoload -XU' _bsd_pkg 'builtin autoload -XU' _nl 'builtin autoload -XU' _pulseaudio 'builtin autoload -XU' _nm 'builtin autoload -XU' _portaudit 'builtin autoload -XU' handle_completion_insecurities $'\tlocal -aU insecure_dirs\n\tinsecure_dirs=(${(f@):-"$(compaudit 2>/dev/null)"}) \n\t[[ -z "${insecure_dirs}" ]] && return\n\tprint "[oh-my-zsh] Insecure completion-dependent directories detected:"\n\tls -ld "${(@)insecure_dirs}"\n\tcat <<EOD\n\n[oh-my-zsh] For safety, we will not load completions from these directories until\n[oh-my-zsh] you fix their permissions and ownership and restart zsh.\n[oh-my-zsh] See the above list for directories with group or other writability.\n\n[oh-my-zsh] To fix your permissions you can do so by disabling\n[oh-my-zsh] the write permission of "group" and "others" and making sure that the\n[oh-my-zsh] owner of these directories is either root or your current user.\n[oh-my-zsh] The following command may help:\n[oh-my-zsh]     compaudit | xargs chmod g-w,o-w\n\n[oh-my-zsh] If the above didn\'t help or you want to skip the verification of\n[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to\n[oh-my-zsh] "true" before oh-my-zsh is sourced in your zshrc file.\n\nEOD' _zsh_highlight_widget_orig-s0.0000050000-r18109-select-a-blank-word $'\t_zsh_highlight_call_widget .select-a-blank-word -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-end-of-line $'\t_zsh_highlight_call_widget .end-of-line -- "$@"' _unexpand 'builtin autoload -XU' _cdrdao 'builtin autoload -XU' _hosts 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-history-search-backward $'\t_zsh_highlight_call_widget .history-search-backward -- "$@"' _od 'builtin autoload -XU' _zattr 'builtin autoload -XU' _wakeup_capable_devices 'builtin autoload -XU' _jobs_fg 'builtin autoload -XU' _module_math_func 'builtin autoload -XU' _value 'builtin autoload -XU' _notmuch 'builtin autoload -XU' _zsh_highlight_main_highlighter_check_assign $'\tsetopt localoptions extended_glob\n\t[[ $arg == [[:alpha:]_][[:alnum:]_]#(|\\[*\\])(|[+])=* ]] || [[ $arg == [0-9]##(|[+])=* ]]' _setopt 'builtin autoload -XU' _aptitude 'builtin autoload -XU' _ruby 'builtin autoload -XU' _aliases 'builtin autoload -XU' _rake 'builtin autoload -XU' _bpython 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-beginning-of-line $'\t_zsh_highlight_call_widget .vi-beginning-of-line -- "$@"' _genisoimage 'builtin autoload -XU' git_current_user_email $'\t__git_prompt_git config user.email 2> /dev/null' _losetup 'builtin autoload -XU' _vim 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-delete-word $'\t_zsh_highlight_call_widget .delete-word -- "$@"' _softwareupdate 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-repeat-change $'\t_zsh_highlight_call_widget .vi-repeat-change -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-match-bracket $'\t_zsh_highlight_call_widget .vi-match-bracket -- "$@"' git_remote_status $'\tlocal remote ahead behind git_remote_status git_remote_status_detailed\n\tremote=${$(__git_prompt_git rev-parse --verify ${hook_com[branch]}@{upstream} --symbolic-full-name 2>/dev/null)/refs\\/remotes\\/} \n\tif [[ -n ${remote} ]]\n\tthen\n\t\tahead=$(__git_prompt_git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l) \n\t\tbehind=$(__git_prompt_git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l) \n\t\tif [[ $ahead -eq 0 ]] && [[ $behind -eq 0 ]]\n\t\tthen\n\t\t\tgit_remote_status="$ZSH_THEME_GIT_PROMPT_EQUAL_REMOTE" \n\t\telif [[ $ahead -gt 0 ]] && [[ $behind -eq 0 ]]\n\t\tthen\n\t\t\tgit_remote_status="$ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE" \n\t\t\tgit_remote_status_detailed="$ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE_COLOR$ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE$((ahead))%{$reset_color%}" \n\t\telif [[ $behind -gt 0 ]] && [[ $ahead -eq 0 ]]\n\t\tthen\n\t\t\tgit_remote_status="$ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE" \n\t\t\tgit_remote_status_detailed="$ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE_COLOR$ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE$((behind))%{$reset_color%}" \n\t\telif [[ $ahead -gt 0 ]] && [[ $behind -gt 0 ]]\n\t\tthen\n\t\t\tgit_remote_status="$ZSH_THEME_GIT_PROMPT_DIVERGED_REMOTE" \n\t\t\tgit_remote_status_detailed="$ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE_COLOR$ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE$((ahead))%{$reset_color%}$ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE_COLOR$ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE$((behind))%{$reset_color%}" \n\t\tfi\n\t\tif [[ -n $ZSH_THEME_GIT_PROMPT_REMOTE_STATUS_DETAILED ]]\n\t\tthen\n\t\t\tgit_remote_status="$ZSH_THEME_GIT_PROMPT_REMOTE_STATUS_PREFIX${remote:gs/%/%%}$git_remote_status_detailed$ZSH_THEME_GIT_PROMPT_REMOTE_STATUS_SUFFIX" \n\t\tfi\n\t\techo $git_remote_status\n\tfi' _which 'builtin autoload -XU' _showmount 'builtin autoload -XU' _pbuilder 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-up-line-or-history $'\t_zsh_highlight_call_widget .up-line-or-history -- "$@"' _fusermount 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-find-next-char-skip $'\t_zsh_highlight_call_widget .vi-find-next-char-skip -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-_expand_alias $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_expand_alias -- "$@"' _gpasswd 'builtin autoload -XU' _diff 'builtin autoload -XU' _gpg 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-repeat-search $'\t_zsh_highlight_call_widget .vi-repeat-search -- "$@"' _schroot 'builtin autoload -XU' _getmail 'builtin autoload -XU' _ps 'builtin autoload -XU' _sched 'builtin autoload -XU' _xauth 'builtin autoload -XU' _call_whatis $'\tcase "$(whatis --version)" in\n\t\t("whatis from "*) local -A args\n\t\t\tzparseopts -D -A args s: r:\n\t\t\tapropos "${args[-r]:-"$@"}" | fgrep "($args[-s]" ;;\n\t\t(*) whatis "$@" ;;\n\tesac' _emulate 'builtin autoload -XU' _imagemagick 'builtin autoload -XU' _setxkbmap 'builtin autoload -XU' vi_mode_prompt_info $'\treturn 1' _localectl 'builtin autoload -XU' _mount 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-accept-line $'\t_zsh_highlight_call_widget .accept-line -- "$@"' _cowsay 'builtin autoload -XU' _mac_files_for_application 'builtin autoload -XU' _uniq 'builtin autoload -XU' _compdef 'builtin autoload -XU' _screen 'builtin autoload -XU' default $'\t(( $+parameters[$1] )) && return 0\n\ttypeset -g "$1"="$2" && return 3' _prove 'builtin autoload -XU' _dbus 'builtin autoload -XU' _tags $'\tlocal prev\n\tif [[ "$1" = -- ]]\n\tthen\n\t\tprev=- \n\t\tshift\n\tfi\n\tif (( $# ))\n\tthen\n\t\tlocal curcontext="$curcontext" order tag nodef tmp \n\t\tif [[ "$1" = -C?* ]]\n\t\tthen\n\t\t\tcurcontext="${curcontext%:*}:${1[3,-1]}" \n\t\t\tshift\n\t\telif [[ "$1" = -C ]]\n\t\tthen\n\t\t\tcurcontext="${curcontext%:*}:${2}" \n\t\t\tshift 2\n\t\tfi\n\t\t[[ "$1" = -(|-) ]] && shift\n\t\tzstyle -a ":completion:${curcontext}:" group-order order && compgroups "$order[@]"\n\t\tcomptags "-i$prev" "$curcontext" "$@"\n\t\tif [[ -n "$_sort_tags" ]]\n\t\tthen\n\t\t\t"$_sort_tags" "$@"\n\t\telse\n\t\t\tzstyle -a ":completion:${curcontext}:" tag-order order || (( ! ${@[(I)options]} )) || order=(\'(|*-)argument-* (|*-)option[-+]* values\' options) \n\t\t\tfor tag in $order\n\t\t\tdo\n\t\t\t\tcase $tag in\n\t\t\t\t\t(-) nodef=yes  ;;\n\t\t\t\t\t(\\!*) comptry "${(@)argv:#(${(j:|:)~${=~tag[2,-1]}})}" ;;\n\t\t\t\t\t(?*) comptry -m "$tag" ;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\t[[ -z "$nodef" ]] && comptry "$@"\n\t\tfi\n\t\tcomptags "-T$prev"\n\t\treturn\n\tfi\n\tcomptags "-N$prev"' _join 'builtin autoload -XU' git_prompt_remote $'\tif [[ -n "$(__git_prompt_git show-ref origin/$(git_current_branch) 2> /dev/null)" ]]\n\tthen\n\t\techo "$ZSH_THEME_GIT_PROMPT_REMOTE_EXISTS"\n\telse\n\t\techo "$ZSH_THEME_GIT_PROMPT_REMOTE_MISSING"\n\tfi' _iconvconfig 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-put-before $'\t_zsh_highlight_call_widget .vi-put-before -- "$@"' _perforce 'builtin autoload -XU' _initctl 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-list-expand $'\t_zsh_highlight_call_widget .list-expand -- "$@"' _yum 'builtin autoload -XU' _ri 'builtin autoload -XU' _omz::theme $'\t(( $# > 0 && $+functions[$0::$1] )) || {\n\t\tcat >&2 <<EOF\nUsage: ${(j: :)${(s.::.)0#_}} <command> [options]\n\nAvailable commands:\n\n  list            List all available Oh My Zsh themes\n  set <theme>     Set a theme in your .zshrc file\n  use <theme>     Load a theme\n\nEOF\n\t\treturn 1\n\t}\n\tlocal command="$1" \n\tshift\n\t$0::$command "$@"' _rm 'builtin autoload -XU' _store_cache 'builtin autoload -XU' _complete_help 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-describe-key-briefly $'\t_zsh_highlight_call_widget .describe-key-briefly -- "$@"' _locales 'builtin autoload -XU' _tilde_files 'builtin autoload -XU' _ifconfig 'builtin autoload -XU' is-at-least $'\temulate -L zsh\n\tlocal IFS=".-" min_cnt=0 ver_cnt=0 part min_ver version order \n\tmin_ver=(${=1}) \n\tversion=(${=2:-$ZSH_VERSION} 0) \n\twhile (( $min_cnt <= ${#min_ver} ))\n\tdo\n\t\twhile [[ "$part" != <-> ]]\n\t\tdo\n\t\t\t(( ++ver_cnt > ${#version} )) && return 0\n\t\t\tif [[ ${version[ver_cnt]} = *[0-9][^0-9]* ]]\n\t\t\tthen\n\t\t\t\torder=(${version[ver_cnt]} ${min_ver[ver_cnt]}) \n\t\t\t\tif [[ ${version[ver_cnt]} = <->* ]]\n\t\t\t\tthen\n\t\t\t\t\t[[ $order != ${${(On)order}} ]] && return 1\n\t\t\t\telse\n\t\t\t\t\t[[ $order != ${${(O)order}} ]] && return 1\n\t\t\t\tfi\n\t\t\t\t[[ $order[1] != $order[2] ]] && return 0\n\t\t\tfi\n\t\t\tpart=${version[ver_cnt]##*[^0-9]} \n\t\tdone\n\t\twhile true\n\t\tdo\n\t\t\t(( ++min_cnt > ${#min_ver} )) && return 0\n\t\t\t[[ ${min_ver[min_cnt]} = <-> ]] && break\n\t\tdone\n\t\t(( part > min_ver[min_cnt] )) && return 0\n\t\t(( part < min_ver[min_cnt] )) && return 1\n\t\tpart=\'\' \n\tdone' _physical_volumes 'builtin autoload -XU' _bts 'builtin autoload -XU' _mutt 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-kill-region $'\t_zsh_highlight_call_widget .kill-region -- "$@"' work_in_progress $'\tcommand git -c log.showSignature=false log -n 1 2> /dev/null | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox} -q -- "--wip--" && echo "WIP!!"' _snoop 'builtin autoload -XU' _gradle 'builtin autoload -XU' _route 'builtin autoload -XU' _matlab 'builtin autoload -XU' open_command $'\tlocal open_cmd\n\tcase "$OSTYPE" in\n\t\t(darwin*) open_cmd=\'open\'  ;;\n\t\t(cygwin*) open_cmd=\'cygstart\'  ;;\n\t\t(linux*) [[ "$(uname -r)" != *icrosoft* ]] && open_cmd=\'nohup xdg-open\'  || {\n\t\t\t\topen_cmd=\'cmd.exe /c start ""\' \n\t\t\t\t[[ -e "$1" ]] && {\n\t\t\t\t\t1="$(wslpath -w "${1:a}")"  || return 1\n\t\t\t\t}\n\t\t\t} ;;\n\t\t(msys*) open_cmd=\'start ""\'  ;;\n\t\t(*) echo "Platform $OSTYPE not supported"\n\t\t\treturn 1 ;;\n\tesac\n\t${=open_cmd} "$@" &> /dev/null' gdnolock $'\tgit diff "$@" ":(exclude)package-lock.json" ":(exclude)*.lock"' _correct_filename 'builtin autoload -XU' _dig 'builtin autoload -XU' _sablotron 'builtin autoload -XU' regexp-replace $'\tinteger pcre\n\t[[ -o re_match_pcre ]] && pcre=1 \n\temulate -L zsh\n\t(( pcre )) && setopt re_match_pcre\n\t4=${(P)1} \n\t5= \n\t6= \n\tlocal MATCH MBEGIN MEND\n\tlocal -a match mbegin mend\n\twhile [[ -n $4 ]]\n\tdo\n\t\tif [[ $4 =~ $2 ]]\n\t\tthen\n\t\t\t5+=${4[1,MBEGIN-1]}${(e)3} \n\t\t\t4=${4[MEND+1,-1]} \n\t\t\t6=1 \n\t\telse\n\t\t\tbreak\n\t\tfi\n\tdone\n\t5+=$4 \n\teval ${1}=${(q)5}\n\t[[ -n $6 ]]' _whereis 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-beginning-of-buffer-or-history $'\t_zsh_highlight_call_widget .beginning-of-buffer-or-history -- "$@"' _zsh_highlight_main_add_many_region_highlights $'\tfor 1 2 3\n\tdo\n\t\t_zsh_highlight_main_add_region_highlight $1 $2 $3\n\tdone' _pfctl 'builtin autoload -XU' _sh 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-recursive-edit $'\t_zsh_highlight_call_widget .recursive-edit -- "$@"' _bug 'builtin autoload -XU' _user_expand 'builtin autoload -XU' _dmidecode 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-capitalize-word $'\t_zsh_highlight_call_widget .capitalize-word -- "$@"' _scl 'builtin autoload -XU' _sisu 'builtin autoload -XU' _fmadm 'builtin autoload -XU' _ss 'builtin autoload -XU' _getconf 'builtin autoload -XU' _su 'builtin autoload -XU' _add-zsh-hook 'builtin autoload -XU' _tail 'builtin autoload -XU' compgen $'\tlocal opts prefix suffix job OPTARG OPTIND ret=1 \n\tlocal -a name res results jids\n\tlocal -A shortopts\n\temulate -L sh\n\tsetopt kshglob noshglob braceexpand nokshautoload\n\tshortopts=(a alias b builtin c command d directory e export f file g group j job k keyword u user v variable) \n\twhile getopts "o:A:G:C:F:P:S:W:X:abcdefgjkuv" name\n\tdo\n\t\tcase $name in\n\t\t\t([abcdefgjkuv]) OPTARG="${shortopts[$name]}"  ;&\n\t\t\t(A) case $OPTARG in\n\t\t\t\t\t(alias) results+=("${(k)aliases[@]}")  ;;\n\t\t\t\t\t(arrayvar) results+=("${(k@)parameters[(R)array*]}")  ;;\n\t\t\t\t\t(binding) results+=("${(k)widgets[@]}")  ;;\n\t\t\t\t\t(builtin) results+=("${(k)builtins[@]}" "${(k)dis_builtins[@]}")  ;;\n\t\t\t\t\t(command) results+=("${(k)commands[@]}" "${(k)aliases[@]}" "${(k)builtins[@]}" "${(k)functions[@]}" "${(k)reswords[@]}")  ;;\n\t\t\t\t\t(directory) setopt bareglobqual\n\t\t\t\t\t\tresults+=(${IPREFIX}${PREFIX}*${SUFFIX}${ISUFFIX}(N-/)) \n\t\t\t\t\t\tsetopt nobareglobqual ;;\n\t\t\t\t\t(disabled) results+=("${(k)dis_builtins[@]}")  ;;\n\t\t\t\t\t(enabled) results+=("${(k)builtins[@]}")  ;;\n\t\t\t\t\t(export) results+=("${(k)parameters[(R)*export*]}")  ;;\n\t\t\t\t\t(file) setopt bareglobqual\n\t\t\t\t\t\tresults+=(${IPREFIX}${PREFIX}*${SUFFIX}${ISUFFIX}(N)) \n\t\t\t\t\t\tsetopt nobareglobqual ;;\n\t\t\t\t\t(function) results+=("${(k)functions[@]}")  ;;\n\t\t\t\t\t(group) emulate zsh\n\t\t\t\t\t\t_groups -U -O res\n\t\t\t\t\t\temulate sh\n\t\t\t\t\t\tsetopt kshglob noshglob braceexpand\n\t\t\t\t\t\tresults+=("${res[@]}")  ;;\n\t\t\t\t\t(hostname) emulate zsh\n\t\t\t\t\t\t_hosts -U -O res\n\t\t\t\t\t\temulate sh\n\t\t\t\t\t\tsetopt kshglob noshglob braceexpand\n\t\t\t\t\t\tresults+=("${res[@]}")  ;;\n\t\t\t\t\t(job) results+=("${savejobtexts[@]%% *}")  ;;\n\t\t\t\t\t(keyword) results+=("${(k)reswords[@]}")  ;;\n\t\t\t\t\t(running) jids=("${(@k)savejobstates[(R)running*]}") \n\t\t\t\t\t\tfor job in "${jids[@]}"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tresults+=(${savejobtexts[$job]%% *}) \n\t\t\t\t\t\tdone ;;\n\t\t\t\t\t(stopped) jids=("${(@k)savejobstates[(R)suspended*]}") \n\t\t\t\t\t\tfor job in "${jids[@]}"\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tresults+=(${savejobtexts[$job]%% *}) \n\t\t\t\t\t\tdone ;;\n\t\t\t\t\t(setopt | shopt) results+=("${(k)options[@]}")  ;;\n\t\t\t\t\t(signal) results+=("SIG${^signals[@]}")  ;;\n\t\t\t\t\t(user) results+=("${(k)userdirs[@]}")  ;;\n\t\t\t\t\t(variable) results+=("${(k)parameters[@]}")  ;;\n\t\t\t\t\t(helptopic)  ;;\n\t\t\t\tesac ;;\n\t\t\t(F) COMPREPLY=() \n\t\t\t\tlocal -a args\n\t\t\t\targs=("${words[0]}" "${@[-1]}" "${words[CURRENT-2]}") \n\t\t\t\t() {\n\t\t\t\t\ttypeset -h words\n\t\t\t\t\t$OPTARG "${args[@]}"\n\t\t\t\t}\n\t\t\t\tresults+=("${COMPREPLY[@]}")  ;;\n\t\t\t(G) setopt nullglob\n\t\t\t\tresults+=(${~OPTARG}) \n\t\t\t\tunsetopt nullglob ;;\n\t\t\t(W) results+=(${(Q)~=OPTARG})  ;;\n\t\t\t(C) results+=($(eval $OPTARG))  ;;\n\t\t\t(P) prefix="$OPTARG"  ;;\n\t\t\t(S) suffix="$OPTARG"  ;;\n\t\t\t(X) if [[ ${OPTARG[0]} = \'!\' ]]\n\t\t\t\tthen\n\t\t\t\t\tresults=("${(M)results[@]:#${OPTARG#?}}") \n\t\t\t\telse\n\t\t\t\t\tresults=("${results[@]:#$OPTARG}") \n\t\t\t\tfi ;;\n\t\tesac\n\tdone\n\tprint -l -r -- "$prefix${^results[@]}$suffix"' _dhclient 'builtin autoload -XU' _module-assistant 'builtin autoload -XU' _procstat 'builtin autoload -XU' _gcore 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-end-of-list $'\t_zsh_highlight_call_widget .end-of-list -- "$@"' _watch-snoop 'builtin autoload -XU' _units 'builtin autoload -XU' _ld_debug 'builtin autoload -XU' _uname 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-edit-command-line $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-edit-command-line -- "$@"' _prcs 'builtin autoload -XU' _zsh_highlight__is_function_p $'\tif zmodload -e zsh/parameter\n\tthen\n\t\t(( ${+functions[$1]} ))\n\telse\n\t\t[[ $(type -wa -- "$1") == *\'function\'* ]]\n\tfi' _cygserver 'builtin autoload -XU' _acpitool 'builtin autoload -XU' _htop 'builtin autoload -XU' _sudo 'builtin autoload -XU' _journalctl 'builtin autoload -XU' _prstat 'builtin autoload -XU' _pump 'builtin autoload -XU' _mdadm 'builtin autoload -XU' _assign 'builtin autoload -XU' _tr 'builtin autoload -XU' _system_profiler 'builtin autoload -XU' _tune2fs 'builtin autoload -XU' _vnc 'builtin autoload -XU' _git-buildpackage 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-push-input $'\t_zsh_highlight_call_widget .push-input -- "$@"' _xrandr 'builtin autoload -XU' _requested $'\tlocal __gopt\n\t__gopt=() \n\tzparseopts -D -a __gopt 1 2 V J x\n\tif comptags -R "$1"\n\tthen\n\t\tif [[ $# -gt 3 ]]\n\t\tthen\n\t\t\t_all_labels - "$__gopt[@]" "$@" || return 1\n\t\telif [[ $# -gt 1 ]]\n\t\tthen\n\t\t\t_description "$__gopt[@]" "$@"\n\t\tfi\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi' _aap 'builtin autoload -XU' _strip 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-complete-word $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-complete-word -- "$@"' _multi_parts 'builtin autoload -XU' _iostat 'builtin autoload -XU' _cpupower 'builtin autoload -XU' omz_termsupport_preexec $'\t[[ "${DISABLE_AUTO_TITLE:-}" != true ]] || return\n\temulate -L zsh\n\tsetopt extended_glob\n\tlocal -a cmdargs\n\tcmdargs=("${(z)2}") \n\tif [[ "${cmdargs[1]}" = fg ]]\n\tthen\n\t\tlocal job_id jobspec="${cmdargs[2]#%}" \n\t\tcase "$jobspec" in\n\t\t\t(<->) job_id=${jobspec}  ;;\n\t\t\t("" | % | +) job_id=${(k)jobstates[(r)*:+:*]}  ;;\n\t\t\t(-) job_id=${(k)jobstates[(r)*:-:*]}  ;;\n\t\t\t([?]*) job_id=${(k)jobtexts[(r)*${(Q)jobspec}*]}  ;;\n\t\t\t(*) job_id=${(k)jobtexts[(r)${(Q)jobspec}*]}  ;;\n\t\tesac\n\t\tif [[ -n "${jobtexts[$job_id]}" ]]\n\t\tthen\n\t\t\t1="${jobtexts[$job_id]}" \n\t\t\t2="${jobtexts[$job_id]}" \n\t\tfi\n\tfi\n\tlocal CMD="${1[(wr)^(*=*|sudo|ssh|mosh|rake|-*)]:gs/%/%%}" \n\tlocal LINE="${2:gs/%/%%}" \n\ttitle "$CMD" "%100>...>${LINE}%<<"' complete $'\temulate -L zsh\n\tlocal args void cmd print remove\n\targs=("$@") \n\tzparseopts -D -a void o: A: G: W: C: F: P: S: X: a b c d e f g j k u v p=print r=remove\n\tif [[ -n $print ]]\n\tthen\n\t\tprintf \'complete %2$s %1$s\\n\' "${(@kv)_comps[(R)_bash*]#* }"\n\telif [[ -n $remove ]]\n\tthen\n\t\tfor cmd\n\t\tdo\n\t\t\tunset "_comps[$cmd]"\n\t\tdone\n\telse\n\t\tcompdef _bash_complete\\ ${(j. .)${(q)args[1,-1-$#]}} "$@"\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-delete-char $'\t_zsh_highlight_call_widget .vi-delete-char -- "$@"' _figlet 'builtin autoload -XU' _sed 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-set-mark-command $'\t_zsh_highlight_call_widget .set-mark-command -- "$@"' _description $'\tlocal name gropt nopt xopt format gname hidden hide match opts tag sort\n\topts=() \n\tgropt=(-J) \n\txopt=(-X) \n\tnopt=() \n\tzparseopts -K -D -a nopt 1 2 V=gropt J=gropt x=xopt\n\t3="${${3##[[:blank:]]#}%%[[:blank:]]#}" \n\t[[ -n "$3" ]] && _lastdescr=("$_lastdescr[@]" "$3") \n\tzstyle -s ":completion:${curcontext}:$1" group-name gname && [[ -z "$gname" ]] && gname="$1" \n\t_setup "$1" "${gname:--default-}"\n\tname="$2" \n\tzstyle -s ":completion:${curcontext}:$1" format format || zstyle -s ":completion:${curcontext}:descriptions" format format\n\tif zstyle -s ":completion:${curcontext}:$1" hidden hidden && [[ "$hidden" = (all|yes|true|1|on) ]]\n\tthen\n\t\t[[ "$hidden" = all ]] && format=\'\' \n\t\topts=(-n) \n\tfi\n\tzstyle -s ":completion:${curcontext}:$1" matcher match && opts=($opts -M "$match") \n\t[[ -n "$_matcher" ]] && opts=($opts -M "$_matcher") \n\tif {\n\t\t\tzstyle -s ":completion:${curcontext}:$1" sort sort || zstyle -s ":completion:${curcontext}:" sort sort\n\t\t} && [[ "$gropt" = -J && $sort != menu ]]\n\tthen\n\t\tif [[ "$sort" = (yes|true|1|on) ]]\n\t\tthen\n\t\t\tgropt=(-J) \n\t\telse\n\t\t\tgropt=(-V) \n\t\tfi\n\tfi\n\tif [[ -z "$_comp_no_ignore" ]]\n\tthen\n\t\tzstyle -a ":completion:${curcontext}:$1" ignored-patterns _comp_ignore || _comp_ignore=() \n\t\tif zstyle -s ":completion:${curcontext}:$1" ignore-line hidden\n\t\tthen\n\t\t\tlocal -a qwords\n\t\t\tqwords=(${words//(#m)[\\[\\]()\\\\*?#<>~\\^\\|]/\\\\$MATCH}) \n\t\t\tcase "$hidden" in\n\t\t\t\t(true | yes | on | 1) _comp_ignore+=($qwords)  ;;\n\t\t\t\t(current) _comp_ignore+=($qwords[CURRENT])  ;;\n\t\t\t\t(current-shown) [[ "$compstate[old_list]" = *shown* ]] && _comp_ignore+=($qwords[CURRENT])  ;;\n\t\t\t\t(other) _comp_ignore+=($qwords[1,CURRENT-1] $qwords[CURRENT+1,-1])  ;;\n\t\t\tesac\n\t\tfi\n\t\t(( $#_comp_ignore )) && opts=(-F _comp_ignore $opts) \n\telse\n\t\t_comp_ignore=() \n\tfi\n\ttag="$1" \n\tshift 2\n\tif [[ -z "$1" && $# -eq 1 ]]\n\tthen\n\t\tformat= \n\telif [[ -n "$format" ]]\n\tthen\n\t\tzformat -f format "$format" "d:$1" "${(@)argv[2,-1]}"\n\tfi\n\tif [[ -n "$gname" ]]\n\tthen\n\t\tif [[ -n "$format" ]]\n\t\tthen\n\t\t\tset -A "$name" "$opts[@]" "$nopt[@]" "$gropt" "$gname" "$xopt" "$format"\n\t\telse\n\t\t\tset -A "$name" "$opts[@]" "$nopt[@]" "$gropt" "$gname"\n\t\tfi\n\telse\n\t\tif [[ -n "$format" ]]\n\t\tthen\n\t\t\tset -A "$name" "$opts[@]" "$nopt[@]" "$gropt" -default- "$xopt" "$format"\n\t\telse\n\t\t\tset -A "$name" "$opts[@]" "$nopt[@]" "$gropt" -default-\n\t\tfi\n\tfi\n\tif ! (( ${funcstack[2,-1][(I)_description]} ))\n\tthen\n\t\tlocal fakestyle descr\n\t\tfor fakestyle in fake fake-always\n\t\tdo\n\t\t\tzstyle -a ":completion:${curcontext}:$tag" $fakestyle match || continue\n\t\t\tdescr=("${(@M)match:#*[^\\\\]:*}") \n\t\t\topts=("${(@P)name}") \n\t\t\tif [[ $fakestyle = fake-always && $opts[1,2] = "-F _comp_ignore" ]]\n\t\t\tthen\n\t\t\t\tshift 2 opts\n\t\t\tfi\n\t\t\tcompadd "${(@)opts}" - "${(@)${(@)match:#*[^\\\\]:*}:s/\\\\:/:/}"\n\t\t\t(( $#descr )) && _describe -t "$tag" \'\' descr "${(@)opts}"\n\t\tdone\n\tfi\n\treturn 0' _precommand 'builtin autoload -XU' up-line-or-beginning-search 'builtin autoload -XU' _bash_completions 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-_history-complete-older $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_history-complete-older -- "$@"' _set 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-transpose-chars $'\t_zsh_highlight_call_widget .transpose-chars -- "$@"' _modutils 'builtin autoload -XU' _service 'builtin autoload -XU' _delimiters 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-quote-line $'\t_zsh_highlight_call_widget .quote-line -- "$@"' _x_name 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-backward-delete-word $'\t_zsh_highlight_call_widget .backward-delete-word -- "$@"' _ctags_tags 'builtin autoload -XU' _rebootin 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-pound-insert $'\t_zsh_highlight_call_widget .vi-pound-insert -- "$@"' _sd_unit_files 'builtin autoload -XU' _dumpadm 'builtin autoload -XU' _apt-move 'builtin autoload -XU' _zsh_highlight_call_widget $'\tbuiltin zle "$@" && _zsh_highlight' _sccs 'builtin autoload -XU' _zsh_highlight__function_is_autoload_stub_p $'\tif zmodload -e zsh/parameter\n\tthen\n\t\t[[ "$functions[$1]" == *"builtin autoload -X"* ]]\n\telse\n\t\t[[ "${${(@f)"$(which -- "$1")"}[2]}" == $\'\\t\'$histchars[3]\' undefined\' ]]\n\tfi' _bsdconfig 'builtin autoload -XU' _timedatectl 'builtin autoload -XU' _powerd 'builtin autoload -XU' _signals 'builtin autoload -XU' _sysrc 'builtin autoload -XU' _cmdambivalent 'builtin autoload -XU' _omz::confirm $'\tif [[ -n "$1" ]]\n\tthen\n\t\t_omz::log prompt "$1" "${${functrace[1]#_}%:*}"\n\tfi\n\tread -r -k 1\n\tif [[ "$REPLY" != $\'\\n\' ]]\n\tthen\n\t\techo\n\tfi' _wc 'builtin autoload -XU' _analyseplugin 'builtin autoload -XU' _libvirt 'builtin autoload -XU' _global_tags 'builtin autoload -XU' jenv_prompt_info $'\treturn 1' _putclip 'builtin autoload -XU' _wanted $'\tlocal -a __targs __gopt\n\tzparseopts -D -a __gopt 1 2 V J x C:=__targs\n\t_tags "$__targs[@]" "$1"\n\twhile _tags\n\tdo\n\t\t_all_labels "$__gopt[@]" "$@" && return 0\n\tdone\n\treturn 1' _zsh_highlight_widget_orig-s0.0000050000-r18109-undo $'\t_zsh_highlight_call_widget .undo -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-backward-delete-char $'\t_zsh_highlight_call_widget .vi-backward-delete-char -- "$@"' _adb 'builtin autoload -XU' _perldoc 'builtin autoload -XU' _freebsd-update 'builtin autoload -XU' _zsh_highlight__function_callable_p $'\tif _zsh_highlight__is_function_p "$1" && ! _zsh_highlight__function_is_autoload_stub_p "$1"\n\tthen\n\t\treturn 0\n\telse\n\t\t(\n\t\t\tautoload -U +X -- "$1" 2> /dev/null\n\t\t)\n\t\treturn $?\n\tfi' _zoneadm 'builtin autoload -XU' _lintian 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-forward-char $'\t_zsh_highlight_call_widget .forward-char -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-quoted-insert $'\t_zsh_highlight_call_widget .vi-quoted-insert -- "$@"' _command_names $'\tlocal args defs ffilt\n\tzstyle -t ":completion:${curcontext}:commands" rehash && rehash\n\tzstyle -t ":completion:${curcontext}:functions" prefix-needed && [[ $PREFIX != [_.]* ]] && ffilt=\'[(I)[^_.]*]\' \n\tdefs=(\'commands:external command:_path_commands\') \n\t[[ -n "$path[(r).]" || $PREFIX = */* ]] && defs+=(\'executables:executable file:_files -g \\*\\(-\\*\\)\') \n\tif [[ "$1" = -e ]]\n\tthen\n\t\tshift\n\telse\n\t\t[[ "$1" = - ]] && shift\n\t\tdefs=("$defs[@]" \'builtins:builtin command:compadd -Qk builtins\' "functions:shell function:compadd -k \'functions$ffilt\'" \'aliases:alias:compadd -Qk aliases\' \'suffix-aliases:suffix alias:_suffix_alias_files\' \'reserved-words:reserved word:compadd -Qk reswords\' \'jobs:: _jobs -t\' \'parameters:: _parameters -g "^*readonly*" -qS= -r "\\n\\t\\- =["\') \n\tfi\n\targs=("$@") \n\tlocal -a cmdpath\n\tif zstyle -a ":completion:${curcontext}" command-path cmdpath && [[ $#cmdpath -gt 0 ]]\n\tthen\n\t\tlocal -a +h path\n\t\tlocal -A +h commands\n\t\tpath=($cmdpath) \n\tfi\n\t_alternative -O args "$defs[@]"' _zsh_highlight_widget_orig-s0.0000050000-r18109-_bash_list-choices $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-_bash_list-choices -- "$@"' _iptables 'builtin autoload -XU' _x_extension 'builtin autoload -XU' _zsh_highlight_widget_orig-s0.0000050000-r18109-reverse-menu-complete $'\t_zsh_highlight_call_widget orig-s0.0000050000-r18109-reverse-menu-complete -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-where-is $'\t_zsh_highlight_call_widget .where-is -- "$@"' _make-kpkg 'builtin autoload -XU' _readshortcut 'builtin autoload -XU' _dnf 'builtin autoload -XU' _ncftp 'builtin autoload -XU' bzr_prompt_info $'\tBZR_CB=`bzr nick 2> /dev/null | grep -v "ERROR" | cut -d ":" -f2 | awk -F / \'{print "bzr::"$1}\'` \n\tif [ -n "$BZR_CB" ]\n\tthen\n\t\tBZR_DIRTY="" \n\t\t[[ -n `bzr status` ]] && BZR_DIRTY=" %{$fg[red]%} * %{$fg[green]%}" \n\t\techo "$ZSH_THEME_SCM_PROMPT_PREFIX$BZR_CB$BZR_DIRTY$ZSH_THEME_GIT_PROMPT_SUFFIX"\n\tfi' _zsh_highlight_widget_orig-s0.0000050000-r18109-vi-insert-bol $'\t_zsh_highlight_call_widget .vi-insert-bol -- "$@"' _zsh_highlight_widget_orig-s0.0000050000-r18109-down-line $'\t_zsh_highlight_call_widget .down-line -- "$@"' _qdbus 'builtin autoload -XU' )
typeset -A FX=( blink $'%{\C-[[05m%}' bold $'%{\C-[[01m%}' italic $'%{\C-[[03m%}' no-blink $'%{\C-[[25m%}' no-bold $'%{\C-[[22m%}' no-italic $'%{\C-[[23m%}' no-reverse $'%{\C-[[27m%}' no-underline $'%{\C-[[24m%}' reset $'%{\C-[[00m%}' reverse $'%{\C-[[07m%}' underline $'%{\C-[[04m%}' )
typeset -A galiases=( ... ../.. .... ../../.. ..... ../../../.. ...... ../../../../.. )
typeset -A key=( BackSpace $'\C-?' Delete $'\C-[[3~' Down $'\C-[OB' End $'\C-[OF' Home $'\C-[OH' Insert $'\C-[[2~' Left $'\C-[OD' PageDown $'\C-[[6~' PageUp $'\C-[[5~' Right $'\C-[OC' Up $'\C-[OA' )
typeset -A langinfo=( CODESET UTF-8 D_T_FMT '%a %d %b %Y %T %Z' D_FMT %d.%m.%Y T_FMT %T RADIXCHAR . THOUSEP \' YESEXPR '^[+1yY]' NOEXPR '^[-0nN]' CRNCYSTR '-$' ABDAY_1 So ABDAY_2 Mo ABDAY_3 Di ABDAY_4 Mi ABDAY_5 Do ABDAY_6 Fr ABDAY_7 Sa DAY_1 Sonntag DAY_2 Montag DAY_3 Dienstag DAY_4 Mittwoch DAY_5 Donnerstag DAY_6 Freitag DAY_7 Samstag ABMON_1 Jan ABMON_2 Feb ABMON_3 Mär ABMON_4 Apr ABMON_5 Mai ABMON_6 Jun ABMON_7 Jul ABMON_8 Aug ABMON_9 Sep ABMON_10 Okt ABMON_11 Nov ABMON_12 Dez MON_1 Januar MON_2 Februar MON_3 März MON_4 April MON_5 Mai MON_6 Juni MON_7 Juli MON_8 August MON_9 September MON_10 Oktober MON_11 November MON_12 Dezember T_FMT_AMPM '' AM_STR '' PM_STR '' ERA '' ERA_D_FMT '' ERA_D_T_FMT '' ERA_T_FMT '' ALT_DIGITS '' )
typeset -A _lastcomp=( all_quotes '\' completer complete context command exact '' ignored 0 insert automenu insert_positions 4 iprefix '' isuffix '' last_prompt yes list ambiguous list_lines 1 list_max 100 nmatches 7 old_list shown pattern_insert menu prefix '' qiprefix '' qisuffix '' restore auto suffix '' tags ' globbed-files ' to_end match unambiguous '' unambiguous_cursor 1 unambiguous_positions 0 vared '' )
typeset -a mailpath=(  )
typeset -a manpath=(  )
typeset -a module_path=( /usr/lib/x86_64-linux-gnu/zsh/5.4.2 )
typeset -A nameddirs=( )
typeset -A options=( posixargzero off autolist on printexitvalue off kshzerosubscript off histreduceblanks off chaselinks off extendedglob off localloops off histnostore off automenu on globcomplete off unset on listpacked off promptsubst on shwordsplit off pathdirs off kshtypeset off listtypes on warncreateglobal off promptbang off dotglob off braceexpand on listbeep on correctall off privileged off numericglobsort off histverify on trackall on histsubstpattern off globstarshort off cbases off rcquotes off posixaliases off histfindnodups off bashautolist off sharehistory on overstrike off kshautoload off incappendhistory off appendcreate off promptcr on mailwarn off pushdignoredups on interactive on ignoreeof off globsubst off rematchpcre off monitor off histsavebycopy on histbeep on debugbeforecmd on magicequalsubst off rmstarsilent off posixjobs off hashcmds on posixtraps off extendedhistory on notify on kshoptionprint off histexpiredupsfirst on glob on posixcd off braceccl off badpattern on longlistjobs on banghist on dvorak off alwaystoend on hashall on warnnestedvar off globalexport on ksharrays off correct off autonamedirs off histexpand on typesetsilent off rmstarwait off histnofunctions off autoparamslash on trapsasync off sunkeyboardhack off promptsp on histsavenodups off autocd on allexport off posixidentifiers off cshjunkiehistory off autopushd on completeinword on completealiases off aliases on autocontinue off appendhistory on aliasfuncdef off singlelinezle off hashlistall on ignoreclosebraces off recexact off localoptions off interactivecomments on errexit off cshjunkiequotes off markdirs off hashdirs on cdablevars off rcexpandparam off vi off printeightbit off multifuncdef on xtrace off login off cshjunkieloops off histappend on histignorespace on evallineno on shfileexpansion off rcs on functionargzero on errreturn off combiningchars off histignoredups on histfcntllock off beep on autoremoveslash on hup on globdots off autoparamkeys on shnullcmd off multibyte on zle off promptpercent on flowcontrol off continueonerror off incappendhistorytime off autoresume off globassign off caseglob on shortloops on bsdecho off cprecedences off log on transientrprompt off verbose off localpatterns off ignorebraces off pipefail off equals on menucomplete off cshnullglob off casematch on promptvars on histallowclobber off bareglobqual on shinstdin on restricted off pushdminus on nullglob off chasedots off mailwarning off listambiguous on cshnullcmd off bashrematch off octalzeroes off forcefloat off exec on multios on emacs off nomatch on pathscript off localtraps off stdin on onecmd off kshglob off clobber on posixbuiltins off alwayslastprompt on pushdtohome off histignorealldups off hashexecutablesonly off pushdsilent off shoptionletters off physical off sourcetrace off histlexwords off bgnice on globalrcs on posixstrings off checkjobs on shglob off singlecommand off listrowsfirst off )
typeset -A _patcomps=( '*/(init|rc[0-9S]#).d/*' _init_d 'zf*' _zftp )
typeset -a path=( /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/games /usr/local/games /snap/bin )
typeset -a pipestatus=( 0 0 )
typeset -a plugins=( git zsh-syntax-highlighting )
typeset -A _postpatcomps=( '(p[bgpn]m*|*top[bgpn]m)' _pbm '(ruby|[ei]rb)[0-9.]#' _ruby '(texi(2*|ndex))' _texi '(tiff*|*2tiff|pal2rgb)' _tiff '*/X11(|R<4->)/*' _x_arguments '-value-,(ftp|http(|s))_proxy,-default-' _urls '-value-,*PATH,-default-' _dir_list '-value-,*path,-default-' _directories '-value-,LC_*,-default-' _locales '-value-,RUBY(LIB|OPT|PATH),-default-' _ruby 'pydoc[0-9.]#' _pydoc 'python[0-9.]#' _python 'qemu(|-system-*)' _qemu 'yodl(|2*)' _yodl )
typeset -a precmd_functions=( omz_termsupport_precmd _zsh_highlight_main__precmd_hook )
typeset -a preexec_functions=( omz_termsupport_preexec _zsh_highlight_preexec_hook )
typeset -a psvar=(  )
typeset -A saliases=( )
typeset -A _services=( '-redirect-,<,bunzip2' bunzip2 '-redirect-,<,bzip2' bzip2 '-redirect-,<,compress' compress '-redirect-,<,gunzip' gunzip '-redirect-,<,gzip' gzip '-redirect-,<,uncompress' uncompress '-redirect-,<,unxz' unxz '-redirect-,<,xz' xz '-redirect-,>,bzip2' bunzip2 '-redirect-,>,compress' uncompress '-redirect-,>,gzip' gunzip '-redirect-,>,xz' unxz Mail mail _git_log_prettily git-log bzcat bunzip2 dch debchange gccd git-clone gdnolock git-diff gdv git-diff ggf git-checkout ggfl git-checkout ggl git-checkout ggp git-checkout ggpnp git-checkout ggu git-checkout gnupod_INIT.pl gnupod_INIT gnupod_addsong.pl gnupod_addsong gnupod_check.pl gnupod_check gnupod_search.pl gnupod_search gpg2 gpg gzcat gunzip iceweasel firefox lzcat unxz lzma xz mailx mail mktunes.pl mktunes nail mail ncl nc nedit-nc nc pcat unpack remsh rsh slogin ssh svnadmin-static svnadmin tunes2pod.pl tunes2pod unlzma unxz xelatex latex xetex tex xzcat unxz zf_chgrp chgrp zf_chown chown )
typeset -a signals=( EXIT HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM 16 CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL 30 SYS ZERR DEBUG )
typeset -a watch=(  )
typeset -a zle_bracketed_paste=( $'\C-[[?2004h' $'\C-[[?2004l' )
typeset -a ZSH_HIGHLIGHT_DIRS_BLACKLIST=(  )
typeset -a _zsh_highlight__highlighter_main_cache=( '0 2 fg=green' '3 5 none' '6 16 none' '16 17 none' '17 20 fg=yellow' '21 22 none' '23 24 none' '24 32 none' '32 33 fg=red,bold' '34 41 none' '42 45 none' '46 48 none' '49 51 fg=yellow' '52 62 none' '62 63 none' '63 66 fg=green' '67 77 none' '78 79 none' '80 84 fg=green' '85 86 fg=yellow' '87 104 underline' '104 105 none' '105 107 fg=green' '108 118 none' '118 119 none' '119 122 fg=green' '123 126 none' '127 128 none' '129 133 fg=green' '134 135 fg=yellow' '136 149 underline' '149 150 none' '150 156 fg=green' '157 159 none' '160 161 none' '162 166 fg=green' '167 168 fg=yellow' '169 185 underline' '185 186 none' '186 194 fg=green' '195 197 none' '198 199 none' '200 204 fg=green' '205 206 fg=yellow' '207 225 underline' '225 226 none' '226 233 fg=yellow' '234 236 none' '237 239 none' '240 242 none' '243 246 none' '243 246 fg=yellow' '247 248 none' '249 253 fg=green' '254 255 fg=yellow' '256 273 underline' '273 274 none' '274 283 fg=green' '284 285 fg=yellow' '286 298 none' )
typeset -a ZSH_HIGHLIGHT_HIGHLIGHTERS=( main )
typeset -A _zsh_highlight_main__command_type_cache=( cat command for reserved functions builtin rm command sort command typeset reserved zle builtin zmodload builtin zstyle builtin )
typeset -A ZSH_HIGHLIGHT_PATTERNS=( )
typeset -A ZSH_HIGHLIGHT_REGEXP=( )
typeset -A ZSH_HIGHLIGHT_STYLES=( arg0 'fg=green' assign none autodirectory 'fg=green,underline' back-dollar-quoted-argument 'fg=cyan' back-double-quoted-argument 'fg=cyan' back-quoted-argument none back-quoted-argument-delimiter 'fg=magenta' bracket-error 'fg=red,bold' bracket-level-1 'fg=blue,bold' bracket-level-2 'fg=green,bold' bracket-level-3 'fg=magenta,bold' bracket-level-4 'fg=yellow,bold' bracket-level-5 'fg=cyan,bold' command-substitution none command-substitution-delimiter 'fg=magenta' commandseparator none comment 'fg=black,bold' cursor standout cursor-matchingbracket standout default none dollar-double-quoted-argument 'fg=cyan' dollar-quoted-argument 'fg=yellow' double-hyphen-option none double-quoted-argument 'fg=yellow' global-alias 'fg=cyan' globbing 'fg=blue' history-expansion 'fg=blue' line '' named-fd none numeric-fd none path underline path_pathseparator '' path_prefix_pathseparator '' precommand 'fg=green,underline' process-substitution none process-substitution-delimiter 'fg=magenta' rc-quote 'fg=cyan' redirection 'fg=yellow' reserved-word 'fg=yellow' root standout single-hyphen-option none single-quoted-argument 'fg=yellow' suffix-alias 'fg=green,underline' unknown-token 'fg=red,bold' )
typeset bold_color=$'\C-[[01m'
typeset CDPATH=''
typeset _comp_dumpfile=/home/install/.zcompdump-vbox-ubuntu1804-5.4.2
typeset _comp_setup=$'local -A _comp_caller_options;\n             _comp_caller_options=(${(kv)options[@]});\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\n             local IFS=$\' \\t\\r\\n\\0\';\n             builtin enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\# 2>&-;\n             exec </dev/null;\n             trap - ZERR;\n             local -a reply;\n             local REPLY'
typeset CPUTYPE=x86_64
typeset d=/usr/share/zsh/functions/Zle
typeset FIGNORE=''
typeset FPATH=/home/install/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting:/home/install/.oh-my-zsh/plugins/git:/home/install/.oh-my-zsh/functions:/home/install/.oh-my-zsh/completions:/home/install/.oh-my-zsh/cache/completions:/usr/local/share/zsh/site-functions:/usr/share/zsh/vendor-functions:/usr/share/zsh/vendor-completions:/usr/share/zsh/functions/Calendar:/usr/share/zsh/functions/Chpwd:/usr/share/zsh/functions/Completion:/usr/share/zsh/functions/Completion/AIX:/usr/share/zsh/functions/Completion/BSD:/usr/share/zsh/functions/Completion/Base:/usr/share/zsh/functions/Completion/Cygwin:/usr/share/zsh/functions/Completion/Darwin:/usr/share/zsh/functions/Completion/Debian:/usr/share/zsh/functions/Completion/Linux:/usr/share/zsh/functions/Completion/Mandriva:/usr/share/zsh/functions/Completion/Redhat:/usr/share/zsh/functions/Completion/Solaris:/usr/share/zsh/functions/Completion/Unix:/usr/share/zsh/functions/Completion/X:/usr/share/zsh/functions/Completion/Zsh:/usr/share/zsh/functions/Completion/openSUSE:/usr/share/zsh/functions/Exceptions:/usr/share/zsh/functions/MIME:/usr/share/zsh/functions/Math:/usr/share/zsh/functions/Misc:/usr/share/zsh/functions/Newuser:/usr/share/zsh/functions/Prompts:/usr/share/zsh/functions/TCP:/usr/share/zsh/functions/VCS_Info:/usr/share/zsh/functions/VCS_Info/Backends:/usr/share/zsh/functions/Zftp:/usr/share/zsh/functions/Zle
typeset histchars='!^#'
typeset HISTCHARS='!^#'
typeset HISTFILE=/home/install/.zsh_history
typeset HOST=vbox-ubuntu1804
typeset -i10 COLUMNS=157
typeset -i10 EGID=1000
typeset -i10 EUID=1000
typeset -i10 GID=1000
typeset -i10 HISTSIZE=50000
typeset -i10 LINES=24
typeset -i10 OPTIND=1
typeset -i10 RANDOM=29550
typeset -i10 SAVEHIST=10000
typeset -i10 SECONDS=895
typeset -i10 TRY_BLOCK_ERROR=-1
typeset -i10 TRY_BLOCK_INTERRUPT=-1
typeset -i10 UID=1000
typeset IFS=$' \t\n\C-@'
typeset -i KEYTIMEOUT=40
typeset -i LISTMAX=100
typeset -i LOGCHECK=60
typeset -i MAILCHECK=60
typeset -ir zsh_highlight__memo_feature=0
typeset -i _ZSH_HIGHLIGHT_PRIOR_CURSOR=0
typeset KEYBOARD_HACK=''
typeset MACHTYPE=x86_64
typeset MAILPATH=''
typeset MANPATH=''
typeset m=emacs
typeset MENUSELECT=0
typeset MODULE_PATH=/usr/lib/x86_64-linux-gnu/zsh/5.4.2
typeset NULLCMD=cat
typeset OPTARG=args
typeset OSTYPE=linux-gnu
typeset PROMPT2='%_> '
typeset PROMPT3='?# '
typeset PROMPT4='+%N:%i> '
typeset prompt='%T %{$fg_bold[green]%}%n@%m%{$reset_color%}:%{$fg_bold[blue]%}%~%{$reset_color%} $(git_prompt_info) %(?:%{$fg_bold[green]%}$ :%{$fg_bold[red]%}$ %s)%{$reset_color%}'
typeset PROMPT='%T %{$fg_bold[green]%}%n@%m%{$reset_color%}:%{$fg_bold[blue]%}%~%{$reset_color%} $(git_prompt_info) %(?:%{$fg_bold[green]%}$ :%{$fg_bold[red]%}$ %s)%{$reset_color%}'
typeset PS1='%T %{$fg_bold[green]%}%n@%m%{$reset_color%}:%{$fg_bold[blue]%}%~%{$reset_color%} $(git_prompt_info) %(?:%{$fg_bold[green]%}$ :%{$fg_bold[red]%}$ %s)%{$reset_color%}'
typeset PS2='%_> '
typeset PS3='?# '
typeset PS4='+%N:%i> '
typeset PSVAR=''
typeset READNULLCMD=/usr/bin/pager
typeset reset_color=$'\C-[[00m'
typeset ret=0
typeset SCREEN_NO=''
typeset SHORT_HOST=vbox-ubuntu1804
typeset SPROMPT='zsh: correct '\''%R'\'' to '\''%r'\'' [nyae]? '
typeset TIMEFMT='%J  %U user %S system %P cpu %*E total'
typeset TMPPREFIX=/tmp/zsh
typeset TTY=/dev/pts/0
typeset USERNAME=install
typeset VENDOR=ubuntu
typeset WATCH=''
typeset WATCHFMT='%n has %a %l from %m.'
typeset WORDCHARS=''
typeset ZLS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36::(-default-)rs=0:(-default-)di=01;34:(-default-)ln=01;36:(-default-)mh=00:(-default-)pi=40;33:(-default-)so=01;35:(-default-)do=01;35:(-default-)bd=40;33;01:(-default-)cd=40;33;01:(-default-)or=40;31;01:(-default-)mi=00:(-default-)su=37;41:(-default-)sg=30;43:(-default-)ca=30;41:(-default-)tw=30;42:(-default-)ow=34;42:(-default-)st=37;44:(-default-)ex=01;32:(-default-)*.tar=01;31:(-default-)*.tgz=01;31:(-default-)*.arc=01;31:(-default-)*.arj=01;31:(-default-)*.taz=01;31:(-default-)*.lha=01;31:(-default-)*.lz4=01;31:(-default-)*.lzh=01;31:(-default-)*.lzma=01;31:(-default-)*.tlz=01;31:(-default-)*.txz=01;31:(-default-)*.tzo=01;31:(-default-)*.t7z=01;31:(-default-)*.zip=01;31:(-default-)*.z=01;31:(-default-)*.Z=01;31:(-default-)*.dz=01;31:(-default-)*.gz=01;31:(-default-)*.lrz=01;31:(-default-)*.lz=01;31:(-default-)*.lzo=01;31:(-default-)*.xz=01;31:(-default-)*.zst=01;31:(-default-)*.tzst=01;31:(-default-)*.bz2=01;31:(-default-)*.bz=01;31:(-default-)*.tbz=01;31:(-default-)*.tbz2=01;31:(-default-)*.tz=01;31:(-default-)*.deb=01;31:(-default-)*.rpm=01;31:(-default-)*.jar=01;31:(-default-)*.war=01;31:(-default-)*.ear=01;31:(-default-)*.sar=01;31:(-default-)*.rar=01;31:(-default-)*.alz=01;31:(-default-)*.ace=01;31:(-default-)*.zoo=01;31:(-default-)*.cpio=01;31:(-default-)*.7z=01;31:(-default-)*.rz=01;31:(-default-)*.cab=01;31:(-default-)*.wim=01;31:(-default-)*.swm=01;31:(-default-)*.dwm=01;31:(-default-)*.esd=01;31:(-default-)*.jpg=01;35:(-default-)*.jpeg=01;35:(-default-)*.mjpg=01;35:(-default-)*.mjpeg=01;35:(-default-)*.gif=01;35:(-default-)*.bmp=01;35:(-default-)*.pbm=01;35:(-default-)*.pgm=01;35:(-default-)*.ppm=01;35:(-default-)*.tga=01;35:(-default-)*.xbm=01;35:(-default-)*.xpm=01;35:(-default-)*.tif=01;35:(-default-)*.tiff=01;35:(-default-)*.png=01;35:(-default-)*.svg=01;35:(-default-)*.svgz=01;35:(-default-)*.mng=01;35:(-default-)*.pcx=01;35:(-default-)*.mov=01;35:(-default-)*.mpg=01;35:(-default-)*.mpeg=01;35:(-default-)*.m2v=01;35:(-default-)*.mkv=01;35:(-default-)*.webm=01;35:(-default-)*.ogm=01;35:(-default-)*.mp4=01;35:(-default-)*.m4v=01;35:(-default-)*.mp4v=01;35:(-default-)*.vob=01;35:(-default-)*.qt=01;35:(-default-)*.nuv=01;35:(-default-)*.wmv=01;35:(-default-)*.asf=01;35:(-default-)*.rm=01;35:(-default-)*.rmvb=01;35:(-default-)*.flc=01;35:(-default-)*.avi=01;35:(-default-)*.fli=01;35:(-default-)*.flv=01;35:(-default-)*.gl=01;35:(-default-)*.dl=01;35:(-default-)*.xcf=01;35:(-default-)*.xwd=01;35:(-default-)*.yuv=01;35:(-default-)*.cgm=01;35:(-default-)*.emf=01;35:(-default-)*.ogv=01;35:(-default-)*.ogx=01;35:(-default-)*.aac=00;36:(-default-)*.au=00;36:(-default-)*.flac=00;36:(-default-)*.m4a=00;36:(-default-)*.mid=00;36:(-default-)*.midi=00;36:(-default-)*.mka=00;36:(-default-)*.mp3=00;36:(-default-)*.mpc=00;36:(-default-)*.ogg=00;36:(-default-)*.ra=00;36:(-default-)*.wav=00;36:(-default-)*.oga=00;36:(-default-)*.opus=00;36:(-default-)*.spx=00;36:(-default-)*.xspf=00;36'
typeset ZSH_ARGZERO=zsh
typeset ZSH_CACHE_DIR=/home/install/.oh-my-zsh/cache
typeset ZSH_COMPDUMP=/home/install/.zcompdump-vbox-ubuntu1804-5.4.2
typeset ZSH_CUSTOM=/home/install/.oh-my-zsh/custom
typeset zsh_highlight__pat_static_bug=false
typeset _ZSH_HIGHLIGHT_PRIOR_BUFFER=''
typeset ZSH_HIGHLIGHT_REVISION=HEAD
typeset ZSH_HIGHLIGHT_VERSION=0.8.0-alpha2-dev
typeset ZSH_NAME=zsh
typeset ZSH_PATCHLEVEL=ubuntu/5.4.2-3ubuntu3.2
typeset ZSH_THEME=cpollet
typeset ZSH_THEME_GIT_PROMPT_CLEAN=$'%{\C-[[34m%})'
typeset ZSH_THEME_GIT_PROMPT_DIRTY=$'%{\C-[[34m%}) %{\C-[[31m%}!%{\C-[[00m%}'
typeset ZSH_THEME_GIT_PROMPT_PREFIX=$'%{\C-[[34m%}git:(%{\C-[[31m%}'
typeset ZSH_THEME_GIT_PROMPT_SUFFIX=$'%{\C-[[00m%}'
typeset ZSH_THEME_RUBY_PROMPT_PREFIX='('
typeset ZSH_THEME_RUBY_PROMPT_SUFFIX=')'
typeset ZSH_THEME_RVM_PROMPT_OPTIONS='i v g'
typeset ZSH_THEME_TERM_TAB_TITLE_IDLE='%15<..<%~%<<'
typeset ZSH_THEME_TERM_TITLE_IDLE='%n@%m:%~'
typeset ZSH_VERSION=5.4.2
