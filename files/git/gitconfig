[core]
        excludesfile = ~/.gitignore
        pager = less -FRX
[difftool "sourcetree"]
	cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3 \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3 \"$BASE\" \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
	trustExitCode = true
[user]
        name = Christophe Pollet
[include]
        path = .gitconfig.local
[push]
        default = simple
[alias]
        a = add
        aa = add --all
        alias = "!git config -l | grep alias | cut -c 7-"
        ap = add --patch
        b = branch
        bcl = "!f() { git checkout master && git pull && git fetch --prune && git branch -v --all && for b in $(git branch -v --all | grep gone | cut -d' ' -f3); do echo "Delete $b? [y/N]"; read ANS; if [ "$ANS" = "y" ]; then git branch -D $b; fi; done; }; f; echo '--' && git branch -v --all"
        bd = branch -D
        big =  bisect good
        bib = bisect bad
        bp = "!git branch $1 && git push origin $1"
        bs = branch -v --all
        c = commit
        ca = commit --amend
        cb = checkout -B
        cc = reset --soft HEAD~1
        cl = clean -df
        cm = "!f() { git commit -m \"$1\"; }; f"
        co = checkout
        con = "!f() { git checkout $(git rev-list --topo-order HEAD..$1 | tail -1); }; f"
        cop = checkout HEAD~1
        co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
        cof = checkout --force
        cp = cherry-pick
        cs = "!f() { git diff \"$1\"^! ; } ; f"
        d = diff
        ds = diff --staged
        dt = difftool --dir-diff
        dtcs = "!f() { git difftool --dir-diff \"$1\"^! ; } ; f"
	dto = "!f() { git dt origin/`git rev-parse --abbrev-ref HEAD` `git rev-parse --abbrev-ref HEAD`; }; f"
        dts = difftool --dir-diff --staged
        f = fetch
        fp = fetch --prune
        fpbs = "!f() { git fetch --prune && git branch -v --all ; }; f"
        gh-email = config user.email \"cpollet@users.noreply.github.com\"
        id = rev-parse HEAD
        kd = difftool --dir-diff
        l   = "!git lb --all"
        lb  = log --graph --pretty=format:'%Cblue%h %Cgreen%cd%Creset%C(yellow)%d%Creset %C(cyan)%an%Creset <%Cgreen%ae%Creset> %Creset%s' --abbrev-commit --date=format:'%Y-%m-%d %H:%M'
        lbm = "!git lbs master"
        lbs = "!f() { git lb `git rev-parse --abbrev-ref HEAD` $@ ; }; f"
        ll  = "!git l -n30"
        ls = "!watch -cpn1 'date ; git -c color.ui=always s'"
        m = merge
        mff = merge --ff
        mt = "!git mergetool --tool=kdiff3 && find . -name '*.orig' -exec rm -i {} \\;"
        p = push
        paf = push --all --force
        pf = push --force
        r = rebase
        rc = rebase --continue
        rem = remote
        repo = remote -v
        res = "!git reset --hard HEAD && git clean -dfx"
        ri = rebase -i
        rim = rebase -i master
        s = status
        serve = "!git daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/"
        sui = status --ignored -u
        t = tag
        tb = "!f() { git checkout master && git pull && git commit --allow-empty -m 'trigger build' && git push ; } ; f"
        tdr = push --delete origin
        tl = tag -l
	wl = "!watch --color -n1 \"git -c color.ui=always l30\""
[diff]
        tool = kdiff3
        guitool = kdiff3
#[mergetool "kdiff3"]
#        cmd = kdiff3 $BASE $LOCAL $REMOTE -o $MERGED
